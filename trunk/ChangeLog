2006-02-26 18:38  mokhov

	* doc/src/tex/: architecture.tex, experimentation.tex,
	fe-aggregation.tex, feature-extraction.tex, history.tex,
	installation.tex, intro.tex, lang-ident-app.tex, nlp.tex,
	preprocessing.tex, probabilistic-parsing-app.tex, report.tex,
	statistic-processing.tex, wave-grapher.tex, zipf-law-app.tex:
	Spellcheck most of the document. Brand 0.3.0.5
	(0.3.0-devel-20060226).

2006-02-26 18:01  mokhov

	* doc/src/tex/architecture.tex: Update limitations as some of them
	have been overcome.

2006-02-26 17:50  mokhov

	* doc/src/tex/installation.tex: Add a description of different .jar
	files we are to release now.

2006-02-26 16:36  mokhov

	* doc/src/tex/: Makefile, lang-ident-app.tex,
	probabilistic-parsing-app.tex, report.tex, test-plugin.tex:
	Complete preliminary review the NLP apps docs. Few cosmetic fixes
	elsewhere.  There will be more work needed of course for the final
	release, but for the devel it's okay enough. Correct an error in
	the Makefile that was generating the same grammar.*.tex files from
	one source grammar file due to a copy-paste mistake. Also,
	implmenet rudementary stripping of comments and blank lines from
	the grammar files prior inclusion into the report. The realistic
	grammar seems not to fit anyways, will have to do something else
	for it.

2006-02-26 11:19  mokhov

	* doc/src/tex/lang-ident-app.tex: Review more the LangIdentApp
	text.

2006-02-25 22:14  mokhov

	* doc/src/tex/lang-ident-app.tex: Advance review of the document
	prior review. Reduce apologetic tone more and mark TODOs. Some
	English and factual review has taken place.  Add more index
	entries. Make sure more section labels do not collide with the
	other apps.

2006-02-25 02:14  mokhov

	* doc/src/tex/: apps.tex, experimentation.tex, history.tex,
	lang-ident-app.tex, nlp.tex, nnet.tex,
	probabilistic-parsing-app.tex, report.tex, test-filters.tex,
	test-loaders.tex, test-nn.tex, test-plugin.tex, training.tex,
	zipf-law-app.tex: Add initial descriptions of the TestNN and
	TestPlugin apps.  Perform some initial but thorough review of the
	NLP apps docs as well as some general section a bit in
	Experimentation.  Mention `testing.bat' and its `retrain' shortcut
	for Windows.  Add intended release date of 0.3.0-devel-20060225.
	Add more index entries. Remove some personal and apologetic tone. 
	Properly renumber sections in the NLP apps. Fix some labels to be
	app-specific in order not to clash with others.  Add missing usage
	info for TestLoaders. Review briefly some training notes. Apply
	some cosmetic fixes.

2006-02-24 15:17  mokhov

	* build.xml, doc/src/tex/history.tex, nbproject/project.properties,
	nbproject/project.xml: Rename 'marf-net' to 'marf'.

2006-02-24 00:04  mokhov

	* doc/src/tex/: best-score.tex, results.tex: Update the best result
	data.

2006-02-23 23:53  mokhov

	* doc/src/tex/: best-score.tex, stats-date.tex, stats.tex: Update
	stats data and date.

2006-02-23 18:47  mokhov

	* doc/src/tex/: history.tex, intro.tex, results.tex: Add initial
	explanantion of how versioning worked so far for MARF.	Massage the
	contributors info. Begin some review of results.

2006-02-23 15:11  mokhov

	* doc/: pipeline.ppt, src/graphics/arch/pipeline-flow.png: Clarify
	the pipeline flow diagram WRT the Distance-based classifiers.  Per
	question from Adam Glowacz of why training takes one set of options
	skipping some distance classifiers and testing does all.

2006-02-23 11:44  mokhov

	* src/Makefile: Implement building of the marf-debug distro with
	the -g debug flag and the JUnit tests.

2006-02-22 20:16  mokhov

	* src/marf/junit/: Stats/WordStatsTest.java,
	Storage/DatabaseTest.java: Add incomplete but sufficient to
	eliminate warnings javadocs.

2006-02-22 20:15  mokhov

	* src/marf/junit/: CloneabilityTest.java,
	Storage/DatabaseTest.java: Add missing imports. Temporarely
	eliminate a few javadoc warnings.  Will need to document tests more
	later.

2006-02-21 23:12  mokhov

	* src/marf/junit/: CloneabilityTest.java, Stats/WordStatsTest.java,
	Storage/DatabaseTest.java: Add JUnit unit cloneability test patches
	from Shuxin, originally submitted on January 18, 2006.

2006-02-21 22:43  mokhov

	* doc/src/tex/: fe-aggregation.tex, feature-extraction.tex,
	methodology.tex, preprocessing.tex, results.tex: Describe the FE
	aggregator. Review a bit some related documenation.  Fix improper
	include of the usage information for SpeakerIdentApp.  Add a few
	more index entries.

2006-02-21 00:15  mokhov

	* doc/src/tex/: installation.tex, report.tex: Compelete preliminary
	review of the Installation chapter. Re-arrange the order of the
	Architecture, Build System, and Installation in a more logical
	order.

2006-02-20 18:24  mokhov

	* doc/src/tex/installation.tex: Tidy up the Installation chapter
	more.

2006-02-20 07:04  mokhov

	* doc/src/tex/installation.tex: Advance installation chapter.

2006-02-19 15:32  mokhov

	* TODO, doc/src/tex/installation.tex, doc/src/tex/report.tex:
	Update a little bit TODO WRT to the things done so far.  Begin
	integration of the INSTALL file with the installation.tex chapter.

2006-02-18 13:08  mokhov

	* marf.jpx: Update JBuilder project file.

2006-02-13 09:46  mokhov

	* doc/src/tex/: lang-ident-app-usage.tex, lang-ident-app.tex,
	math-test-app-usage.tex, math-test-app.tex, nlp.tex,
	probabilistic-parsing-app-usage.tex, probabilistic-parsing-app.tex,
	regression-app-usage.tex, results.tex, speaker-ident-app-usage.tex,
	test-fft-usage.tex, test-fft.tex, test-filters-usage.tex,
	test-loaders-usage.tex, test-lpc-usage.tex, test-lpc.tex,
	test-nn-usage.tex, test-plugin-usage.tex,
	test-wave-loader-usage.tex, test-wave-loader.tex,
	zipf-law-app-usage.tex, zipf-law-app.tex: Add generated usage
	information for all the apps for automatic inclusing and easier
	maintenance within the manual. Add stub sections to the stub NLP
	chapter. Fix a few inconsistencies in some places, many more fixes
	to come.

2006-02-12 19:35  mokhov

	* src/marf/Stats/ProbabilityTable.java: Synchronize class.

2006-02-12 19:22  mokhov

	* src/marf/Stats/ProbabilityTable.java: Review comments.

2006-02-12 18:57  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Classification/Stochastic/Stochastic.java,
	Classification/Stochastic/ZipfLaw.java,
	Stats/ProbabilityTable.java: Debug bigram statistics problems
	revealed while testing LangIdentApp. One problem was unrelated to
	the stats collection and had to do with storage management as the
	generic implementation of Classification's dump() and restore()
	always assumes presence of TrainingSet; thus, we override those
	methods to call general implementation of dump/restoreGzipBinary()
	and dump/restoreBinary() of StorageManager. The bigram problem in
	ProbabilityTable had to do with ignorance of a possible gap in the
	index of row's so some rows for efficiency were kept as null until
	actually used; thus, make sure if we don't find such a row, create
	a new one. Strangely, for long time this case was handled properly
	in trigram, but more simple case of bigram had a bug. Update
	copy-pase erroneous comments in ZipfLaw and add a missing case of
	DUMP_BINARY. Fix a comment typo in Stochastic. Apply more coding
	conventions where forgotten.  Cosmetic changes otherwise elsewhere.

2006-02-11 15:36  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Stats/ProbabilityTable.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java: Comment out
	a noisy debug() call. Implement backSynchronizeObject() in
	MaxProbabilityClassifier. Document a bit more params in
	ProbabilityTable and rename API according to the naming conventions
	(starts with lowercase).  Cosmetic clean up in LangIdentApp.

2006-02-09 14:33  mokhov

	* src/Makefile: Re-add building of API.

2006-02-09 14:28  mokhov

	* Makefile, manifest.mf, src/Makefile: Complete preliminary
	implementation of building custom .jars for -util, -storage, -math,
	and -utilimathstor packages that include only portions of MARF as
	the name suggests. This is to allow people to get only the pieces
	of MARF they need instead of the whole thing. This is the first
	time we build these so they may be not toally clean or minimal, but
	this is a start. Another minor issue is that they use the same
	manifest.mf file as the whole MARF, which is not fully correct and
	should be corrected in the final 0.3.0 release. Add a new type of
	distro -bin that bundles the documentation and all the .jars
	excluding the api-dev documentation bit. Update manifest.mf to
	include the revision version information.

2006-02-06 07:00  mokhov

	* src/marf/MARF.java: Complete preliminary preparation of
	LangIdentApp for testing for the release. This includes recovery of
	some corpora, new options for the training.sh script, update of
	Makefile. Add an alias -ele option, -word and WORD_MODE (for now
	unused, but as a provision for the future).

2006-02-04 13:40  mokhov

	* src/marf/MARF.java: Add explicit ELE option type to MARF and
	LangIdentApp.  Update code and comments more in preparation for the
	release.  Add versioning support and a set of standard options.
	Mark "'" as a word char as it was originally intended. Update
	usage() accordingly.

2006-02-02 23:39  mokhov

	* src/marf/Classification/Stochastic/:
	MaxProbabilityClassifier.java, Stochastic.java: Clean up more code
	and comments and make a few corrections and fix a few omissions in
	conventions and other things. Replace some System.out.println()
	calls with Debug.debug(). Clean up dead AP in Stochastic as the
	parent provides much better implementation (e.g. gzipped and a
	simple binary work per StorageManager and the rest is per particual
	module).

2006-01-30 23:51  mokhov

	* src/marf/MARF.java: Add input validation error checking for the
	setters of NLP similarly to the rest of MARF with min/max values.

2006-01-29 23:21  mokhov

	*
	src/marf/nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java:
	Remove temporarely unused import.

2006-01-29 23:21  mokhov

	* src/marf/gui/util/SmartSizablePanel.java: Massage and document
	more.

2006-01-29 22:43  mokhov

	* src/marf/nlp/Parsing/: ProbabilisticParser.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java: Avoid a dump()
	call in compileGrammar() for now as it was dumping a useless
	contents under ProbabilisticGrammarCompiler file name.	Make sure
	the binary dump filename is properly set to Grammar in
	ProbabilisticParser.  Adjust some formatting and naming along the
	way.

2006-01-29 17:28  mokhov

	* src/marf/: MARF.java, Stats/ProbabilityTable.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java: Renumber
	NLP-related enumerations so that they don't have possible conflicts
	with typical option processing and the rest of MARF as it was
	earlier done for the preprocessing, feature, extraction,
	classification, sample formats, etc. Rename INgramModels to
	ENgramModels and IStatisticalEstimators to EStatisticalEstimators
	to indicate that these are just enumerations. When we migrate to
	Java 1.5 these interfaces will be replaced by the enums anyways, so
	the name can be changed now. Since these members are unlikely to be
	used by external apps since 0.3.0.2 the name change impact should
	be miminal and our own NLP apps that use these are only to be
	released for the first time anyway. Mark the remaining methods of
	MARF.NLP as `synchronized'.

2006-01-27 14:15  mokhov

	* src/marf/util/OptionProcessor.java: Fix a bug (#1415935) in the
	OptionProcessor(Hashtable) constructor that has gone off sync with
	the rest of the OptionProcessor about using new internal data
	structures, such as Option class. Thus, convert it to use Option
	and verify the contents of the incoming Hashtable.  Document the
	fact. Additinally, add a constructor to the Option class in the
	form of Option(Integer, String) for covenience.

2006-01-22 19:03  mokhov

	* src/marf/Classification/NeuralNetwork/: NeuralNetwork.java,
	Neuron.java: Fine-tune a bit more NeuralNetwork parameters based on
	the experiments with the revived TestNN to produce a better
	recognition rate. Adjust epoch testing part in error updates to be
	in the scale of the minimum error. Though this is still imprecise,
	but looks more appropraite as a scale.	Update a couple of
	comments.

2006-01-22 18:59  mokhov

	* src/marf/Preprocessing/FFTFilter/FFTFilter.java: Correct a typo
	in the comment.

2006-01-22 18:47  mokhov

	* src/marf/Classification/NeuralNetwork/Layer.java: Correct @since
	version.

2006-01-22 14:01  mokhov

	* src/marf/gui/: SpectrogramPanel.java, WaveGrapherPanel.java,
	util/BorderPanel.java: Add/correct some comments so far.

2006-01-21 23:46  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: Prepare
	TestNN for preliminary release. Clean up the application from the
	dead code and test only NeuralNetwork by itself by simulating epoch
	training as NeuralNetwor.train() does except avoiding looking for
	and using a corresponding training set cluster. Add option
	processing with OptionProcessor and a few standard and old options
	passed through it. Add application versioning, usage(), and version
	checks. Dump the output .xml files to the filename based on the
	input one.  For all this to work update the NeuralNetwork class
	with the public API of eval() (consistent with Neuron and Layer) as
	a synonym to the private runNNet()). Additionally, make setInputs()
	public to be accessible from outside the package.  Add test and
	debug targets with all options for the application to test on all
	.xml files with and without the --debug option. Update README with
	the new option information and the list of files.

2006-01-20 21:35  mokhov

	* src/marf/: Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/NeuralNetwork/Neuron.java,
	FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	Preprocessing/FFTFilter/FFTFilter.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	gui/WaveGrapher.java, math/Algorithms.java,
	nlp/Parsing/GrammarCompiler/Grammar.java: Clean up code more WRT
	coding conventions and remove redundant casts reported by Eclipse.

2006-01-20 21:32  mokhov

	* src/marf/Classification/NeuralNetwork/Layer.java: Add
	serialVersionUID.

2006-01-20 12:33  mokhov

	* src/marf/Classification/NeuralNetwork/: Layer.java,
	NeuralNetwork.java: Complete preliminary implementation of the
	Layer class and its use in NeuralNetwork.

2006-01-20 09:34  mokhov

	* src/marf/Classification/NeuralNetwork/: Layer.java,
	NeuralNetwork.java: Advance implementation of Layer and its use in
	NeuralNetwork.

2006-01-20 02:10  mokhov

	* src/marf/Classification/NeuralNetwork/: Layer.java,
	NeuralNetwork.java, Neuron.java: Complete preliminary code and
	comments review for NeuralNetwork and Neuron for naming conventions
	and stuff. Begin implementation of the Layer class and use of it in
	NeuralNetwork.

2006-01-18 23:51  mokhov

	* src/marf/nlp/Parsing/: TransitionTable.java, VarSymTabEntry.java:
	This completes preliminary code and comments review of the
	marf.nlp.Parsing package.

2006-01-18 23:13  mokhov

	* src/marf/nlp/: Parsing/GenericLexicalAnalyzer.java,
	Parsing/LexicalAnalyzer.java, Parsing/Parser.java,
	Parsing/SymTabEntry.java, Parsing/Token.java,
	Parsing/TokenSubType.java, Parsing/TokenType.java,
	Parsing/TransitionTable.java,
	Parsing/GrammarCompiler/GrammarAnalyzer.java,
	Parsing/GrammarCompiler/GrammarCompiler.java,
	Parsing/GrammarCompiler/GrammarTokenType.java,
	Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	Parsing/GrammarCompiler/ProbabilisticGrammarTokenType.java,
	util/NLPStreamTokenizer.java: Complete preliminary code and
	comments review as well as refactoring of the TokenType and
	TokenSubType classes. Make corresponding changes in the call sites
	of these classes.

2006-01-18 14:31  mokhov

	* src/marf/util/Debug.java: Make use of StringBuffer.

2006-01-17 17:41  mokhov

	* src/marf/Stats/: StatisticalObject.java, WordStats.java: Format
	after the recent patch.

2006-01-17 17:14  susan_fan

	* src/marf/Stats/: StatisticalObject.java, WordStats.java: add
	toString(), equals(Object poStatisticalObject), hashcode() methods

2006-01-17 12:27  mokhov

	* src/marf/nlp/Parsing/Token.java: Complete preliminary code and
	comments review.

2006-01-16 16:43  mokhov

	* src/marf/nlp/Parsing/: SymTabEntry.java, SymbolTable.java,
	VarSymTabEntry.java: Complete code and comments review of
	SymTabEntry. Make relevant adjustments in SymbolTable and
	VarSymTabEntry so the code still compiles.

2006-01-16 16:25  susan_fan

	* src/marf/nlp/Parsing/SymTabEntry.java: change some comments and
	variable names accordint to name conventions.

2006-01-15 19:52  mokhov

	* src/marf/Classification/Stochastic/:
	MaxProbabilityClassifier.java, ZipfLaw.java: Commit preliminary
	code review for NLP apps prior release.

2006-01-15 15:51  mokhov

	* Makefile, doc/Makefile, doc/src/Makefile, doc/src/tex/Makefile,
	doc/src/tex/legal.tex, src/Makefile,
	src/marf/nlp/Parsing/Compiler.java,
	src/marf/nlp/Parsing/CompilerError.java,
	src/marf/nlp/Parsing/GenericLexicalAnalyzer.java,
	src/marf/nlp/Parsing/LexicalAnalyzer.java,
	src/marf/nlp/Parsing/LexicalError.java,
	src/marf/nlp/Parsing/Parser.java,
	src/marf/nlp/Parsing/SymDataType.java,
	src/marf/nlp/Parsing/SymTabEntry.java,
	src/marf/nlp/Parsing/SymbolTable.java,
	src/marf/nlp/Parsing/SyntaxError.java,
	src/marf/nlp/Parsing/Token.java,
	src/marf/nlp/Parsing/TokenSubType.java,
	src/marf/nlp/Parsing/TokenType.java,
	src/marf/nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java:
	Consistently space out copyright years.

2006-01-15 15:37  mokhov

	* src/marf/nlp/Parsing/: CompilerError.java, LexicalError.java,
	Parser.java, SemanticError.java, SyntaxError.java: Complete
	preliminary code and comments updates for the error hiearchy of
	marf.nlp.Parsing. The code was cleaned up to remove a string error
	message member as we already have one up the hierarchy. Update
	references appropriately.

2006-01-15 13:24  mokhov

	* src/marf/nlp/Parsing/: SyntaxError.java,
	GrammarCompiler/GrammarCompiler.java: Begin detailed code clean up
	of SyntaxError.

2006-01-15 01:58  mokhov

	* src/marf/Stats/StatisticalEstimators/Smoothing/: AddDelta.java,
	AddOne.java, GoodTuring.java, ISmoothing.java, Smoothing.java,
	WittenBell.java: Complete preliminary code and comments review for
	the marf.Stats.StatisticalEstimators.Smoothing package.

2006-01-14 22:43  mokhov

	* src/marf/Stats/StatisticalEstimators/StatisticalEstimator.java:
	Comment out unused variable.

2006-01-14 20:50  mokhov

	* src/marf/Stats/StatisticalEstimators/: GLI.java,
	IStatisticalEstimator.java, KatzBackoff.java, MLE.java, SLI.java,
	StatisticalEstimator.java: Complete preliminary code and comments
	review for the marf.Stats.StatisticalEstimators package. The
	Smoothing sub-package is yet to do.

2006-01-14 17:30  mokhov

	* src/marf/Storage/Loaders/: AIFFCLoader.java, AIFFLoader.java,
	AULoader.java, MIDILoader.java, MP3Loader.java, SNDLoader.java,
	SineLoader.java, ULAWLoader.java, WAVLoader.java: Clear out javadoc
	warnings and make versioning more precise.

2006-01-14 14:06  mokhov

	* src/: test.java, marf/MARF.java, marf/Makefile,
	marf/Version.java: Extract Version class into its own file as this
	seems to be a cleaner implementation of versioning anyway. Update
	comments of the class an relevant places. Update corresponding
	references to it, inventory, and the Makefile.

2006-01-10 02:23  mokhov

	* src/marf/nlp/Parsing/SymDataType.java: Clean up the code and
	comments a bit and add a getter/setter pair for type.

2006-01-08 19:59  mokhov

	* src/marf/nlp/Parsing/SymbolTable.java: Complete preliminary
	review (mostly comments) of the SymbolTable class.

2006-01-08 17:42  mokhov

	* src/marf/nlp/Parsing/SemanticError.java: Fix a typo.

2006-01-07 20:16  mokhov

	* src/marf/nlp/Parsing/: SemanticAnalyzer.java, SemanticError.java,
	SymbolTable.java: Perform the usual clean up for the parsing code
	for SemanticAnalyzer and SemanticError and begin doing so for
	SymbolTable. This includes naming and comments and other things.

2006-01-07 19:10  mokhov

	* src/marf/MARF.java: Begin new concept of versioning of MARF with
	the new Version class.	It is still experimental and being
	developped to provide more convenient and groupped version
	handling. For now this class is an inner static class of MARF. It
	should help with the smaller binary distros in the future that only
	contain subsets of MARF, but the version info is still needed for
	the applications. Need to finalize this new concept a bit more and
	document.

2006-01-06 17:20  mokhov

	* src/marf/: Stats/ProbabilityTable.java,
	Stats/StatsCollector.java, nlp/NLPException.java,
	nlp/Collocations/ChiSquareTest.java,
	nlp/Collocations/CollocationWindow.java,
	nlp/Collocations/TTest.java, nlp/Stemming/IStemming.java,
	nlp/Stemming/Stemming.java, nlp/Stemming/StemmingEN.java,
	nlp/util/NLPStreamTokenizer.java: Complete preliminary code review
	for the release for the NLP-related code ouside parsing. Mostly
	naming, coding conventions, and versioning.

2006-01-06 17:18  mokhov

	* src/marf/Storage/Cluster.java: Add missing @throws javadoc tags
	for StorageException.

2006-01-05 10:46  mokhov

	* src/marf/Storage/Loaders/WAVLoader.java: Complete implementation
	and some testing of the missing plugin modules for Preprocessing
	and SampleLoader -- RandomPreprocessing and UnrestrictedWAVLoader. 
	Now need to complete option processing, versioning, and
	documentaion for the app to be ready for a dev release. This commit
	also does changes to the MARF's WAVLoader that has a new API of
	verifyAudioFormat(AudioFormat) that can be overridden (and is
	overridden by UnrestrictedWAVLoader). Eventually, we might even
	refactor it and place in the upper level of the loaders' hierarchy.

2006-01-03 09:47  mokhov

	* src/marf/nlp/Makefile: Add missing -f option in case *.class
	files aren't there.

2006-01-03 03:23  mokhov

	* doc/src/tex/legal.tex: Add 'Research'.

2006-01-03 03:16  mokhov

	* src/tools/: revision-check.sh, serialverupdate: Perform third
	round of bulk updates of the copyright year.

2006-01-03 02:57  mokhov

	* COPYRIGHT, marf.jpx, src/test.java: Perform second round of bulk
	copyright year update to 2006.

2006-01-03 02:53  mokhov

	* Makefile, doc/Makefile, doc/src/Makefile, doc/src/tex/Makefile,
	doc/src/tex/legal.tex, src/Makefile,
	src/marf/nlp/Parsing/Compiler.java,
	src/marf/nlp/Parsing/CompilerError.java,
	src/marf/nlp/Parsing/GenericLexicalAnalyzer.java,
	src/marf/nlp/Parsing/LexicalAnalyzer.java,
	src/marf/nlp/Parsing/LexicalError.java,
	src/marf/nlp/Parsing/Parser.java,
	src/marf/nlp/Parsing/SymDataType.java,
	src/marf/nlp/Parsing/SymTabEntry.java,
	src/marf/nlp/Parsing/SymbolTable.java,
	src/marf/nlp/Parsing/SyntaxError.java,
	src/marf/nlp/Parsing/Token.java,
	src/marf/nlp/Parsing/TokenSubType.java,
	src/marf/nlp/Parsing/TokenType.java,
	src/marf/nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java: Perform
	first round of copyright year updates to bump to 2006.

2006-01-03 02:22  mokhov

	* src/tools/md5sumall.sh: Replace --binary with more portable -b.

2006-01-03 02:20  mokhov

	* src/marf/: Classification/Makefile,
	Classification/Distance/Makefile, Classification/Markov/Makefile,
	Classification/NeuralNetwork/Makefile,
	Classification/RandomClassification/Makefile,
	FeatureExtraction/Makefile, FeatureExtraction/Cepstral/Makefile,
	FeatureExtraction/F0/Makefile, FeatureExtraction/FFT/Makefile,
	FeatureExtraction/LPC/Makefile,
	FeatureExtraction/MinMaxAmplitudes/Makefile,
	FeatureExtraction/RandomFeatureExtraction/Makefile,
	FeatureExtraction/Segmentation/Makefile, Preprocessing/Makefile,
	Preprocessing/Dummy/Makefile, Preprocessing/Endpoint/Makefile,
	Preprocessing/FFTFilter/Makefile, Stats/Makefile,
	Stats/StatisticalEstimators/Makefile,
	Stats/StatisticalEstimators/Smoothing/Makefile, Storage/Makefile,
	Storage/Loaders/Makefile, gui/Makefile, math/Makefile,
	nlp/Makefile, nlp/Collocations/Makefile, nlp/Stemming/Makefile,
	nlp/util/Makefile, util/comparators/Makefile: Bulk-update the
	Makefile Build System to properly include COMMONJFLAGS everywhere.

2006-01-03 02:10  mokhov

	* src/marf/: gui/util/Makefile, nlp/Parsing/Makefile,
	nlp/Parsing/GrammarCompiler/Makefile, util/Makefile: Update a few
	Makefiles to use COMMONJFLAGS for consistent -source 1.4 builds on
	1.5 JDKs.

2006-01-03 00:02  mokhov

	* src/marf/junit/CloneabilityTest.java: Add a first test for the
	MARF's JUnit testing infrastructure. Now it does very little and
	tests only the Database class for Cloneability and equality with
	the clone and is undocumented, but this is a start.  Will need to
	extend that to test all Cloneable classes.

2006-01-02 23:59  mokhov

	* src/marf/nlp/Parsing/: LexicalError.java, Parser.java,
	ProbabilisticParser.java, SyntaxError.java: Complete preliminary
	code review for ProbabilisticParser, Parser, and LexicalError in
	terms of compliance with coding convention and documentation. 
	Clean up a code a bit as well. Add a standard set of constructors
	to SyntaxError it was lacking and rename a few members in it --
	it's still yet to be reviewed.

2006-01-02 17:24  mokhov

	* src/marf/: Classification/Classification.java,
	FeatureExtraction/FeatureExtraction.java,
	Preprocessing/Preprocessing.java, Stats/Ngram.java,
	Stats/Observation.java, Stats/StatisticalObject.java,
	Stats/WordStats.java, Storage/Cluster.java, Storage/Database.java,
	Storage/FeatureSet.java, Storage/ModuleParams.java,
	Storage/Result.java, Storage/ResultSet.java, Storage/Sample.java,
	Storage/StorageManager.java, Storage/TrainingSample.java,
	Storage/TrainingSet.java: Complete preliminalry implementation of
	the Cloneable interface for most major modules. The only
	unimplemented parts remain are descendants of Preprocessing,
	FeatureExtraction, and Classification classes. Some modules to not
	do complete clonning for all their members -- this is yet to look
	at and test.  Clean up some code a bit more and apply more coding
	conventions in the places previously missed. Document the code
	more.  Make more use of the StringBuffer class for likely hotspots
	and others.

2006-01-02 16:27  mokhov

	* .classpath: Adjust Eclipse project files to use JUnit.

2006-01-02 14:26  mokhov

	*
	src/marf/Classification/RandomClassification/RandomClassification.java:
	Fix bug #1395099. The duplicate IDs accumulated because the
	existence check was performed prior resotration of the IDs
	collection from disk.  Swapping restore() and contains() order
	should fix the problem.

2005-12-31 20:28  mokhov

	* src/marf/:
	Classification/RandomClassification/RandomClassification.java,
	Classification/Stochastic/ZipfLaw.java,
	FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java,
	Stats/WordStats.java, Storage/ModuleParams.java,
	Storage/Result.java, Storage/ResultSet.java,
	nlp/Parsing/GrammarCompiler/Rule.java, util/OptionProcessor.java:
	After being traumatized by the performance of the toString() of
	Sample, update most of the toString() implementations to use
	StringBuffer. Will have review other places with intensive string
	concatenations as well.

2005-12-31 18:17  mokhov

	* src/marf/Preprocessing/: Preprocessing.java, Dummy/Dummy.java,
	Dummy/Raw.java, Endpoint/Endpoint.java,
	FFTFilter/BandpassFilter.java, FFTFilter/FFTFilter.java,
	FFTFilter/HighFrequencyBoost.java, FFTFilter/HighPassFilter.java,
	FFTFilter/LowPassFilter.java: Bulk-replace a now slightly wrongly
	worded comment.

2005-12-31 18:09  mokhov

	* src/marf/math/Matrix.java: Don't hint explicitly the garbage
	collection too often with System.gc() as many calls to this may
	actually significantly slow down the whole thing during the garbage
	collection runs.

2005-12-31 17:38  mokhov

	* src/marf/math/Matrix.java: Fix the bug #1394533 in
	marf.math.Matrix's extend() for it not to set the member variables
	of dimensions right away and wait till completion as other methods
	were doing.  Improve reporting in the assertion statement caused
	this.  Enable assertion checks in MathTestApp so they get exposed
	sooner. Perform some addition code review of Matrix and fix a few
	incosisntencies and wrong comments. Add more garbage collector
	hints after potentially lots of tmp data allocations for matrix
	data arrays. Re-implement toString() more efficiently, using
	StringBuffer. Add a tad bit more comments.

2005-12-31 14:58  mokhov

	* src/marf/nlp/Parsing/LexicalAnalyzer.java: Add @see javadoc tags
	so older version (3.0) of Eclipse doesn't complain that the comment
	is incomplete.

2005-12-30 20:23  mokhov

	* src/marf/: FeatureExtraction/FeatureExtractionAggregator.java,
	nlp/Parsing/GrammarCompiler/Grammar.java: Reverse assertion checks
	as they were incorrectly set to assert the wrong thing. The
	assertions are to assert that certain condtion is true; and if it
	is not, then throw AssertionError.

2005-12-30 20:10  mokhov

	* src/marf/nlp/Parsing/Parser.java: Provide an intermediate fix to
	compilation problem due to unhandled exceptions. Somehow missed...

2005-12-30 13:36  mokhov

	* src/marf/nlp/Parsing/: ClassSymTabEntry.java, CodeGenerator.java,
	CompilerError.java, FuncSymTabEntry.java,
	GenericLexicalAnalyzer.java, LexicalAnalyzer.java,
	LexicalError.java, SemanticError.java, SyntaxError.java: Advance
	Parsing code review for style, comments, and naming conventions.

2005-12-30 02:18  mokhov

	* src/marf/FeatureExtraction/FeatureExtractionAggregator.java:
	Eliminate unused variable.

2005-12-30 00:54  mokhov

	* src/marf/: MARF.java,
	FeatureExtraction/FeatureExtractionAggregator.java,
	FeatureExtraction/FFT/FFT.java, FeatureExtraction/LPC/LPC.java,
	Preprocessing/Dummy/Dummy.java, Preprocessing/Dummy/Raw.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/BandpassFilter.java,
	Preprocessing/FFTFilter/FFTFilter.java,
	Preprocessing/FFTFilter/HighFrequencyBoost.java,
	Preprocessing/FFTFilter/HighPassFilter.java,
	Preprocessing/FFTFilter/LowPassFilter.java, Storage/Sample.java,
	util/Debug.java, util/ExpandedThreadGroup.java: This mega commit
	includes a few large fixes and closes up a long standing bug
	#1273717. Specifically, SpeakerIdentApp has now the option "-aggr"
	to invoke the recently implemented FeatureExtractionAggregator for
	testing (for now as concatenation FFT and LPC until better
	alternatives are available). Debug FeatureExtractionAggregator so
	it actually works. This includes resetting the module parameters
	back to itself instead of just zeroing out because when MARF runs
	in the batch mode in the same JVM, we were able to run through only
	once successfully. Fix addition of the current thread to its group
	upon thread construction. Improve handling of the sub-module
	parameters with proper typechecks for the future.  For all this to
	work, especially for cloning of the Preprocessing modules, the
	default constructors had to be made public. Did not entirely
	estimate consequences of this.	The actual results of coupling
	FFT+LPC are rather pitiful at this point (need to implement F0 for
	more fruitful results).
	
	Re-synchronize MARF so that no deadlocks happen when the main
	thread calls its synchronized method and some other thread does the
	same (as in FeatureExtractionAggregator) causing both to hang.
	Instead make the synchronization a tad bit more granular in MARF in
	train(), recognize(), and startRecognitionPipeline() based on the
	objects being manipulated. Add a new method of checkSettings() and
	relax synchronization requirements on the version retrieval methos
	as there are no mutable data structures in there. This was deemed
	to be the source of the bug #1273717, but turned out to be
	unrelated and so is Debug's synchronization is fine.
	
	Now, the bug #1273717 is finally fixed, and the culprit turned out
	to be the Sample's class toString() method -- specifically
	inefficient implementation of String concatenation with "+".
	Replace all the operations in there with the StringBuffer instead
	to fix the problem.
	
	Clean up lots of code a long the way in various places along the
	way for names, error handling, and comments.

2005-12-29 13:21  mokhov

	* src/marf/nlp/Parsing/: Compiler.java, Parser.java: Complete first
	round of code review for the Compiler class.  Reduce load on the
	Parser's constructor that was doing everything, and move some of it
	where it belongs in the Compiler. Mark a few TODO items in places
	to be done at a later time. Provide getters and setters for most
	members in the Parser class and rename most data members in
	accordance with the naming conventions.

2005-12-29 11:55  mokhov

	* src/marf/nlp/Parsing/: GenericLexicalAnalyzer.java, Parser.java,
	GrammarCompiler/Grammar.java, GrammarCompiler/GrammarCompiler.java:
	This concludes the first round of code review for the
	marf.nlp.Parsing.GrammarCompiler package of MARF.  The Grammar
	class has been brought more-or-less to the style and comments with
	the rest of the package. Some public members were made protected
	and accessors were made for them and used where needed. In this
	commit, a few warnings and errors are eliminated due to a local
	variable hiding a member one and use of static members was
	corrected in places. Some more appropriate error handling is in
	place as well. Perform some tidy-ups and clean-ups along the way.

2005-12-28 23:43  mokhov

	* src/marf/nlp/Parsing/Parser.java: Catch uncaught StorageException
	properly. Got forgotten in the previous commit.

2005-12-28 22:03  mokhov

	* src/marf/: math/Matrix.java, nlp/Parsing/TransitionTable.java,
	nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java: Complete
	preliminary code and comments review for GrammarAnalyzer and
	GrammarCompiler classes in terms of more accurate exception
	handling, javadoc comments, and naming. Fix a javadoc warning in
	marf.math.Matrix and rename all variables in accordance with the
	coding conventions in TransitionTable along the way.

2005-12-27 22:21  mokhov

	* src/: test.java, marf/MARF.java,
	marf/Classification/ClassificationFactory.java,
	marf/Classification/Makefile,
	marf/FeatureExtraction/FeatureExtractionFactory.java,
	marf/Preprocessing/Makefile,
	marf/Preprocessing/PreprocessingException.java,
	marf/Preprocessing/PreprocessingFactory.java,
	marf/Storage/MARFAudioFileFormat.java, marf/Storage/Makefile,
	marf/Storage/SampleLoaderFactory.java,
	marf/Storage/Loaders/WAVLoader.java,
	marf/util/InvalidSampleFormatException.java: Implement factories
	ClassificationFactory, PreprocessingFactory, and
	SampleLoaderFactory a-la FeatureExtractionFactory. Make
	FeatureExtractionFactory's constructor private for now as it is
	pointless to instantiate it. This cleans up MARF's pipeline code
	and the set of imports and captures proper exceptions and the
	functionality is more groupped where it belongs.  As a result,
	complete implementation of the plugin system for sample loaders. 
	Add a CUSTOM sound file type to be able to load plugins we don't
	know the type about. Enhance InvalidSampleFormatException and
	PreprocessingException with the standard constructor set they were
	lacking. Force WAVLoader to throw InvalidSampleFormatException in
	its default constructor to be in line with others, like SineLoader,
	as it is more sensical exception than StorageException. Hopefully,
	this does not break many client apps.

2005-12-27 18:55  mokhov

	* src/: test.java, marf/MARF.java,
	marf/FeatureExtraction/FeatureExtractionAggregator.java,
	marf/FeatureExtraction/FeatureExtractionFactory.java,
	marf/FeatureExtraction/Makefile,
	marf/Preprocessing/IPreprocessing.java,
	marf/Preprocessing/Preprocessing.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/Dummy/Raw.java,
	marf/Preprocessing/Endpoint/Endpoint.java,
	marf/Preprocessing/FFTFilter/BandpassFilter.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/Preprocessing/FFTFilter/HighPassFilter.java,
	marf/Preprocessing/FFTFilter/LowPassFilter.java,
	marf/Storage/IStorageManager.java, marf/Storage/Sample.java:
	Complete initial implementation of the FeatureExtractionAggregator.
	 It requires now extensive testing. Implement some other goodies
	along the way: FeatureExtractionFactory now groups all
	FeatureExtration modules creation more-or-less according to the
	corresponding Factory design pattern. This simplifies MARF's and
	FeatureExtractionAggregator's code; implement clone() for Sample
	and Preprocessing triggered by the need in the aggregator. Since
	cloning in Preprocessing is rather tricky, we clone the concrete
	class that may have an instance. In order to be able to create such
	an instance there should be a default constructor, so all
	preprocessing modules got a default protected constructor as a
	result. Additionally, augment IPreprocessing interface with the
	public clone() method so implementors have to be cloneable and
	those parts of the code that only operate by the means of this
	interface, can also have a public handle to the method. Make sure
	all that implements Serializable also implements Cloenable through
	IStorageManager.  Implement two new constructors for Sample:
	Sample(int, double[]) and Sample(Sample).  Document the relevant
	code. All these infrastructural changes require now extensive
	testing.

2005-12-27 18:49  mokhov

	* src/marf/util/ExpandedThreadGroup.java: Perform minor cosmetic
	clean up.

2005-12-27 18:48  mokhov

	* src/marf/: Storage/MARFAudioFileFormat.java,
	util/OptionProcessor.java: Re-add ref. comment with a proper FQ
	name, so there are no more corresponding javadoc warnings.

2005-12-27 13:53  mokhov

	* src/marf/: MARF.java,
	FeatureExtraction/FeatureExtractionAggregator.java,
	FeatureExtraction/Makefile: Begin implementation of
	FeatureExtractionAggregator to be able to concatenate features from
	different feature extraction modules as one feature vector.

2005-12-27 13:52  mokhov

	* src/tools/serialverupdate: Document the script and make it query
	for available `make'.

2005-12-25 22:21  mokhov

	* src/tools/revision-check.sh: Implement checks for interfaces.
	Document.

2005-12-25 17:42  mokhov

	* src/tools/md5sumall.sh: Fix a bug of not returning to the
	previous directory upon completion.

2005-12-25 17:42  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/GrammarCompiler.java: Fix a
	typo in a comment.

2005-12-24 15:04  mokhov

	* TODO: Most notably, add MARF Language TODO item. Slightly update
	other items.

2005-12-24 14:47  mokhov

	* src/marf/: Classification/Classification.java,
	Classification/Distance/Distance.java,
	FeatureExtraction/FeatureExtraction.java,
	Preprocessing/Preprocessing.java,
	Preprocessing/FFTFilter/FFTFilter.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Storage/IDatabase.java, Storage/IStorageManager.java,
	Storage/StorageManager.java,
	nlp/Parsing/GrammarCompiler/GrammarElement.java,
	util/SortComparator.java: Add serialVersionUID to abstract classes
	and interfaces that implemente/extend Serializable as their fields
	are inherited by the derivatives are also to be serialized with
	writeObject(), so versioning is a good idea.

2005-12-23 23:01  mokhov

	* src/marf/nlp/Parsing/: GenericLexicalAnalyzer.java,
	SemanticError.java, GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/GrammarTokenType.java,
	GrammarCompiler/NonTerminal.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java: Advance clean up
	of the parsing/compiler code further.  Finish documentation and
	naming conventions for NonTerminal and GrammarTokenType.  Largely
	advance GrammarCompiler and improve further its exception handling.
	 Now SemanticError is in play and got its set of standard
	constructors.

2005-12-22 22:37  mokhov

	* src/marf/nlp/Parsing/: Compiler.java, LexicalAnalyzer.java,
	LexicalError.java, Parser.java, TokenSubType.java,
	GrammarCompiler/GrammarAnalyzer.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/GrammarTokenType.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java: Replace all the
	occurences of "C+-" with "MARF".

2005-12-22 21:52  mokhov

	* src/marf/nlp/Parsing/: GenericLexicalAnalyzer.java,
	LexicalAnalyzer.java, LexicalError.java, Parser.java,
	ProbabilisticParser.java, SemanticError.java, SyntaxError.java,
	GrammarCompiler/GrammarAnalyzer.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java: Perform
	code/comments review for ProbabilisticGrammarAnalyzer including
	more proper exception handling and application of coding
	conventions.  These changes affected some other classes of the
	parsing code, so more LexicalError and CompilerError exceptions got
	used. More similar and related renames of the variables. Add more
	constructors to LexicalError that are usual part of the MARF
	Exceptions Framework. Add getLexicalErrors() to
	GenericLexicalAnalyzer and improve its scan() to account for
	LexicalErrors.	Other changes are in the same ballpark.

2005-12-21 19:41  mokhov

	* src/marf/nlp/Parsing/: Compiler.java, Parser.java,
	ProbabilisticParser.java, GrammarCompiler/Grammar.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java,
	GrammarCompiler/ProbabilisticRule.java: Complete code review for
	comments and clean up in ProbabilisticRule and
	ProbabilisticGrammarCompiler. As a result tighten a bit more error
	handling with SyntaxError in the related places, the way it should
	have been years ago. More improvements to come.

2005-12-21 19:37  mokhov

	* src/marf/Storage/StorageException.java: Add remaining
	constructors of MARFException for convenience.	Seemed to be useful
	in some of the NLP parsing exception handling.

2005-12-18 16:29  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: Rule.java,
	SemanticToken.java: Eliminate javadoc warnings by documenting the
	classes and their members.  Apply coding conventions. Clean up some
	dead code.

2005-12-18 16:27  mokhov

	* src/marf/nlp/Parsing/Parser.java: Fix a bug in the class name
	that did not get renamed when package name got renamed.

2005-12-17 14:05  mokhov

	* Makefile, src/Makefile, src/tools/md5sumall.sh: Improve the
	distro building process in the Makefile.  Add .bz2 version of the
	tarballs. Add md5sum checks.  Remove coding.html from the .jar
	file, which is not the right place for it. Add it instead to the
	tarballs.

2005-12-17 14:01  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: GrammarElement.java,
	Terminal.java: Advance code review for NLP-stuff. Document better. 
	Apply coding conventions. Fine-tune versioning.  This also fixes a
	number of javadoc warnings.

2005-12-11 22:54  mokhov

	* .classpath, .project: Convert to UNIX format.

2005-12-10 23:49  mokhov

	* src/marf/Preprocessing/Endpoint/Endpoint.java: Make ninor comment
	update and move serialVersionID down.

2005-12-10 23:48  mokhov

	* Makefile, src/Makefile: MARF's distro target didn't have the
	coding conventions and HISTORY file in one case for the doc and
	sources tarball, where it ultimately belongs, so add them.

2005-12-08 10:35  mokhov

	* COPYRIGHT: Update group's name in the copyright file that got
	omitted in the previous commit.

2005-12-07 19:47  mokhov

	* manifest.mf, marf.spec, doc/Makefile, doc/src/Makefile,
	src/Makefile, src/test.java: Bulk-rename remaining entries of "The
	MARF Development Group" to "The MARF Research and Development
	Group".

2005-12-04 22:13  mokhov

	* src/marf/: Classification/Distance/Distance.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/Stochastic/MaxProbabilityClassifier.java,
	FeatureExtraction/FFT/FFT.java,
	Stats/StatisticalEstimators/GLI.java, math/Matrix.java,
	nlp/Parsing/CodeGenerator.java, nlp/Parsing/FuncSymTabEntry.java,
	nlp/Parsing/GenericLexicalAnalyzer.java,
	nlp/Parsing/LexicalAnalyzer.java, nlp/Parsing/SymbolTable.java,
	nlp/Parsing/Token.java,
	nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	nlp/util/NLPStreamTokenizer.java, util/Arrays.java,
	util/OptionProcessor.java: Begin code review for the upcoming
	release. This touches the coding conventions, javadoc comments,
	removal of unused variables, finer grain versionning, and the like.

2005-12-03 19:26  mokhov

	* src/marf/util/Arrays.java: Format. Apply slightly more correct
	coding conventions.

2005-12-02 17:50  susan_fan

	* src/marf/util/Arrays.java: Correct a logic error for
	arrayToDelimitedString() methods.

2005-12-01 16:39  susan_fan

	* src/marf/util/Arrays.java: Add Object[], int[], long[], float[],
	double[], byte[], boolean[], char[] array data type for
	arrayToDelimitedString(), arrayToString(), and arrayToCSV()
	methods.

2005-11-29 20:15  mokhov

	* src/tools/revision-check.sh: Fix a typo and formatting a bit.

2005-11-27 14:03  mokhov

	* src/marf/util/: Arrays.java, OptionProcessor.java: Begin the
	series of the new API calls in marf.util.Arrays:
	arrayToDelimitedVector(), arrayToString(), and arrayToCSV(). Fix
	naming of one param variable per convention.  Add a new API call in
	OptionProcessor getArgumentString() to return a string of arguments
	instead of an array. Per my TODO.

2005-11-10 04:58  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Apparently, in the
	overridden pushBack() it was not a good idea to call the version of
	the super class as nextToken() would return a duplicate trailing
	char. Per work on Cryptolysis.

2005-10-25 01:22  mokhov

	* src/marf/: Storage/MARFAudioFileFormat.java,
	util/OptionProcessor.java: Fix javadoc warnings.

2005-10-24 10:45  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Add dictionary
	size to the toString()-generated information.

2005-10-23 19:42  mokhov

	* src/marf/Stats/WordStats.java: Implement toString().

2005-10-23 19:12  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Implement
	toString().

2005-10-23 02:48  mokhov

	* src/marf/nlp/: Parsing/Token.java, util/NLPStreamTokenizer.java:
	Fix a few typing errors and thinkos in the last NLP patch.

2005-10-23 02:41  mokhov

	* src/marf/: Classification/Stochastic/ZipfLaw.java,
	nlp/Parsing/Token.java, nlp/Parsing/TokenSubType.java,
	nlp/Parsing/TokenType.java, nlp/util/NLPStreamTokenizer.java: The
	main focus of this patch is to enable NLPStreamTokenizer push
	effectively back arbitrary number of tokens back to the token
	stream by employing a stack and overriding the nextToken(),
	pushBack(), and lineno() methods of StreamTokenizer. The Token type
	was adjusted for this purpose to be able to retain the values
	contained in the tokenizer for the sval, ttype, nval, and line
	number fields. Clean up some code and comments along the way.

2005-10-23 00:46  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Fix method
	spelling.

2005-10-23 00:42  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Re-implement
	serialization of the data as an entire ZipfLaw object instead of
	just a stats hashtable. This will preserve some other data members
	of interest. Implement acquisition of minimum and maximum lengths
	of words in the dictionary. Extract a frequently used constant 100
	into OUTPUT_PAGE_SIZE and use it consistenly. Apply more coding
	conventions.

2005-10-22 23:51  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Make sure the
	object-to-serialize is set to the stats hashtable, so no nulls are
	dumped. Correct a few comments.

2005-10-22 19:58  mokhov

	* Makefile.global, src/marf/Classification/Stochastic/Makefile: Add
	a notion of COMMONJFLAGS to being enforcement of the Java 1.4.	As
	per example I've done in GIPSY.

2005-10-22 19:57  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Add import for
	StorageException.

2005-10-22 19:50  mokhov

	* src/marf/util/OptionProcessor.java: Perform minimal cosmetic
	adjustments to the code while reviewing.

2005-10-22 19:49  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Implement
	general StorageManager-dictated serialization facility.  Prompted
	by the Cryptolysis application's need.

2005-10-22 19:47  mokhov

	* src/marf/Classification/Stochastic/Stochastic.java: Be more
	precise about when certain methods appeared.

2005-10-22 13:39  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Fix indentation.

2005-10-22 13:37  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Document the new
	methods properly.

2005-10-22 13:28  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Add a new API
	allowing access to private data members of the class.  Some is used
	in the new Cryptolysis application I am working on.

2005-10-22 13:27  mokhov

	* src/marf/nlp/Parsing/Token.java: Eliminate javadoc warnings and
	document class memebers more.  Cosmetically move some code around.
	Make copy constructor to clone at least two members for now.

2005-10-15 23:11  mokhov

	* doc/src/tex/: Makefile, apps.tex, prob-app-sample-run.tex,
	probabilistic-parsing-app.tex, report.bib: Complete preliminary
	integration of the ProbabilisticParsingApp docs and related files.
	Update the Bibliography and Makefiles accordingly.  What follows
	after is polishing of the app and the docs to be in the uniform
	format.

2005-10-15 20:57  mokhov

	* doc/src/tex/: best-score.tex, lang-ident-app.tex, report.bib,
	results.tex, second-best-score.tex, statistic-processing.tex,
	statitstic-processing.tex: Polish the manual in few areas: begin
	updating style of the LangIdentApp doc match the rest of MARF; fix
	a few glitches while at it, e.g. one of skewing font after NLP
	stats. Update best-score to what's actually in the table -- somehow
	missed during last update. Add second best as well.  Fix appearance
	of the Satistics Processing chapter as it was not named properly.
	Bring some other information more up-to-date, e.g. options of the
	SpeakerIdentApp. Make the Bibliogrpahy yet more accurate and use
	the \url{} environment throughout.

2005-10-15 17:54  mokhov

	* doc/src/tex/: Makefile, apps.tex, lang-ident-app.tex: Complete
	preliminary integration of the LangIdentApp docs. All the .langs
	files are looked up where appropriate and the corresponding .tex
	files are made.

2005-10-14 20:42  mokhov

	* src/marf/Makefile: Remove redundant line.

2005-10-14 20:41  mokhov

	* doc/src/tex/report.bib: Sync Bibliography from other sources.
	Mostly Security-related.

2005-10-02 20:08  mokhov

	* Makefile: Make sure the Makefile.global is also added to the
	distro.  Update copyright to add "Research and" to the group's
	name.

2005-10-01 23:58  mokhov

	* doc/src/tex/report.bib: Freshen Bibliography with more updated
	info from my thesis and other source.

2005-10-01 20:58  mokhov

	* TODO: Update TODO WRT things done in SpeakerIdentApp primarily
	for option processing.

2005-09-19 21:38  mokhov

	* src/marf/Storage/ModuleParams.java: Implement size() as a sum of
	all vector sizes. Tighten error checks with exception handling and
	disallow null collections to be assigned (but null elements in the
	param vectors are still allowed; not sure if this should be more
	strict or not yet). Clean up comments a bit.  Apply more coding
	conventions and relax the variables and constants to be protected
	instead of private so one can possibly inherit from the class and
	have access to its members.

2005-09-17 18:57  mokhov

	* TODO: Update TODO throughout.

2005-08-27 13:03  mokhov

	* src/marf/: MARF.java, FeatureExtraction/FFT/FFT.java,
	Preprocessing/Preprocessing.java, Preprocessing/Dummy/Raw.java,
	Preprocessing/FFTFilter/FFTFilter.java,
	Preprocessing/FFTFilter/HighFrequencyBoost.java,
	Storage/StorageManager.java, util/Debug.java: Conduct preliminary
	invenstigation on the bug #1273717 of pieces of MARF being over
	sync'ed. Comment out Debug.debug() calls from the constructors for
	now.

2005-08-27 13:00  mokhov

	* src/marf/nlp/Parsing/: Compiler.java, FuncSymTabEntry.java: Begin
	clean up of the NLP code. Apply more coding conventions and
	document code more. In Compiler, extract major code from main() to
	a new compile() call and provide a constructor.

2005-08-26 16:57  mokhov

	* doc/src/tex/: report.tex, statitstic-processing.tex,
	stats-date.tex, stats.tex: Add a stub Statistic Processing chapter.
	Update actual stats and results from the recent run of
	SpeakerIdentApp.

2005-08-25 12:54  mokhov

	* doc/src/tex/apps.tex: Back out premature generation of the
	LangIdentApp for public.

2005-08-24 19:31  mokhov

	* doc/src/tex/: Makefile, apps.tex: Perform preliminary compilable
	integratin of the Zipf's Law app's docs.  Make sure the graphs for
	it are symlinked upon the need instead of copying and also symlink
	the architecture diagrams. A lot more there is still to do, but
	this is a progress.

2005-08-24 18:55  mokhov

	* doc/src/tex/: apps.tex, lang-ident-app.tex, report.bib: Fix
	preliminary buildable documentation from LangIdentApp. More work to
	be done, but this is start for the integrated version. Update
	Biblioraphy from thesis.

2005-08-24 17:36  mokhov

	* src/marf/Preprocessing/FFTFilter/HighFrequencyBoost.java: Make
	high-frequency boost's parameters customizable via setters and
	ModuleParams.

2005-08-24 09:17  mokhov

	* doc/src/tex/experimentation.tex: Fix math appearance of F0.

2005-08-23 23:32  mokhov

	* doc/: pipeline.ppt, src/graphics/arch/pipeline-flow.png,
	src/tex/data.tex, src/tex/experimentation.tex,
	src/tex/preprocessing.tex: Update the pipeline flow diagram as
	Endpoint is implemented now.  Add Shivani. Massage the rest.

2005-08-23 22:20  mokhov

	* TODO, doc/src/tex/experimentation.tex: Mark Endpoint as
	implemented.

2005-08-23 22:10  mokhov

	* doc/src/tex/preprocessing.tex: Provide initial documentation
	snipped on Endpointing just implemented.

2005-08-23 21:51  mokhov

	* src/marf/Storage/ModuleParams.java: Properly synchronize class.
	Implement toString().

2005-08-23 21:48  mokhov

	* src/marf/: Preprocessing/Endpoint/Endpoint.java,
	FeatureExtraction/FFT/FFT.java: Tighten ModuleParam checks for the
	size of the module parameter vectors.

2005-08-23 21:12  mokhov

	* src/marf/MARF.java: Properly synchronize the class in case
	someone decides to use MARF in multiple application threads in the
	same JVM instance. Document three leftover undocumented private
	members. Adjust minor revision in places.

2005-08-23 20:19  mokhov

	* src/marf/Preprocessing/Preprocessing.java: Document parameter and
	mark it final.

2005-08-23 20:14  mokhov

	* src/marf/Preprocessing/Endpoint/Endpoint.java: Implement
	endpointing. Requires testing now.

2005-08-23 20:12  mokhov

	* src/marf/Preprocessing/Preprocessing.java: Introduce compress()
	API for elimination of duplicate values in a sample array. For now,
	this feature is primarily used in the Endpoint, but others might
	find it useful eventually as well, so put it in Preprocessing.

2005-08-19 11:52  mokhov

	* src/marf/Preprocessing/Dummy/Raw.java: Fix a copy-paste error in
	the debug message. Exposed when testing TestPlugin in the debug
	mode.

2005-08-19 11:50  mokhov

	* src/marf/MARF.java: Bump minor revision for the next release
	cycle.

2005-08-19 10:58  mokhov

	* doc/src/tex/lang-ident-app.tex: Prepare for integration with MARF
	docs.

2005-08-18 22:53  mokhov

	* doc/src/tex/zipf-law-app.tex: Perform a bulk update for
	integration with MARF's manual.

2005-08-18 09:07  mokhov

	* doc/src/tex/gui.tex: Fix GUI's diag width to properly fit the
	page.

2005-08-17 14:50  mokhov

	* src/Makefile: Remove the -J-version option as it causes problems
	in pure java 1.4 builds.

2005-08-17 14:42  mokhov

	* ChangeLog: Update ChangeLog for 0.3.0-devel-20050817.

2005-08-17 14:41  mokhov

	* doc/src/tex/: history.tex, report.tex: Brand
	0.3.0-devel-20050817.

2005-08-17 14:31  mokhov

	* doc/: arch.mdl, src/graphics/arch/gui.png: Update the fact that
	the Spectroram and WaveGraphers are in fact storage managers.

2005-08-17 14:30  mokhov

	* doc/src/tex/: report.bib, report.tex: Update Bibliography from my
	recent GIPSY thesis changes.  Use the 'url' package.

2005-08-13 21:15  mokhov

	* src/marf/: Classification/Distance/MinkowskiDistance.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/RandomClassification/RandomClassification.java,
	FeatureExtraction/F0/F0.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	Preprocessing/PreprocessingException.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/LowPassFilter.java, Stats/Ngram.java,
	Stats/ProbabilityTable.java, Stats/StatisticalObject.java,
	Stats/WordStats.java, Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/Smoothing/AddOne.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	gui/util/ColoredStatusPanel.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/ResultComparator.java: Correct some indendation
	and formatting after a recent serialVersionUID patch. Add one more
	missing 'private' modifier.

2005-08-13 19:46  susan_fan

	* src/marf/FeatureExtraction/Cepstral/Cepstral.java: add missing
	private modifier

2005-08-13 19:09  susan_fan

	* src/marf/: Classification/Distance/MinkowskiDistance.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/RandomClassification/RandomClassification.java,
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Classification/Stochastic/Stochastic.java,
	Classification/Stochastic/ZipfLaw.java,
	FeatureExtraction/FeatureExtractionException.java,
	FeatureExtraction/F0/F0.java, FeatureExtraction/FFT/FFT.java,
	FeatureExtraction/LPC/LPC.java,
	FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	FeatureExtraction/Segmentation/Segmentation.java,
	Preprocessing/PreprocessingException.java,
	Preprocessing/Dummy/Dummy.java, Preprocessing/Dummy/Raw.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/BandpassFilter.java,
	Preprocessing/FFTFilter/HighFrequencyBoost.java,
	Preprocessing/FFTFilter/HighPassFilter.java,
	Preprocessing/FFTFilter/LowPassFilter.java, Stats/Ngram.java,
	Stats/Observation.java, Stats/ProbabilityTable.java,
	Stats/StatisticalObject.java, Stats/WordStats.java,
	Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/AddOne.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	Storage/StorageException.java, gui/Spectrogram.java,
	gui/SpectrogramPanel.java, gui/WaveGrapher.java,
	gui/WaveGrapherPanel.java, gui/util/BorderPanel.java,
	gui/util/ColoredStatusPanel.java, gui/util/SmartSizablePanel.java,
	math/MathException.java, math/Matrix.java, math/Vector.java,
	nlp/NLPException.java, nlp/Parsing/CompilerError.java,
	nlp/Parsing/LexicalError.java,
	nlp/Parsing/ProbabilisticParser.java,
	nlp/Parsing/SemanticError.java, nlp/Parsing/SyntaxError.java,
	nlp/Parsing/Token.java, nlp/Parsing/TokenSubType.java,
	nlp/Parsing/TokenType.java, nlp/Parsing/TransitionTable.java,
	nlp/Parsing/GrammarCompiler/Grammar.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/GrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/NonTerminal.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticRule.java,
	nlp/Parsing/GrammarCompiler/Rule.java,
	nlp/Parsing/GrammarCompiler/SemanticToken.java,
	nlp/Parsing/GrammarCompiler/Terminal.java,
	util/comparators/RankComparator.java,
	util/comparators/ResultComparator.java: add missing private
	modifier

2005-08-13 12:28  mokhov

	* src/marf/Storage/Result.java: Fix formatting.

2005-08-12 16:02  susan_fan

	* src/marf/Classification/Distance/MahalanobisDistance.java: remove
	redundant semicolon from the line of declaration of
	serialVersionUID in MahalanobisDistance.java

2005-08-12 07:53  susan_fan

	* src/marf/: Classification/Distance/MahalanobisDistance.java,
	Classification/Distance/MinkowskiDistance.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/RandomClassification/RandomClassification.java,
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Classification/Stochastic/Stochastic.java,
	Classification/Stochastic/ZipfLaw.java,
	FeatureExtraction/FeatureExtractionException.java,
	FeatureExtraction/Cepstral/Cepstral.java,
	FeatureExtraction/F0/F0.java, FeatureExtraction/FFT/FFT.java,
	FeatureExtraction/LPC/LPC.java,
	FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	FeatureExtraction/Segmentation/Segmentation.java,
	Preprocessing/PreprocessingException.java,
	Preprocessing/Dummy/Dummy.java, Preprocessing/Dummy/Raw.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/BandpassFilter.java,
	Preprocessing/FFTFilter/HighFrequencyBoost.java,
	Preprocessing/FFTFilter/HighPassFilter.java,
	Preprocessing/FFTFilter/LowPassFilter.java, Stats/Ngram.java,
	Stats/Observation.java, Stats/ProbabilityTable.java,
	Stats/StatisticalObject.java, Stats/WordStats.java,
	Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/AddOne.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	Storage/Cluster.java, Storage/Database.java,
	Storage/FeatureSet.java, Storage/Result.java,
	Storage/ResultSet.java, Storage/Sample.java,
	Storage/StorageException.java, Storage/TrainingSample.java,
	Storage/TrainingSet.java, gui/Spectrogram.java,
	gui/SpectrogramPanel.java, gui/WaveGrapher.java,
	gui/WaveGrapherPanel.java, gui/util/BorderPanel.java,
	gui/util/ColoredStatusPanel.java, gui/util/SmartSizablePanel.java,
	math/MathException.java, math/Matrix.java, math/Vector.java,
	nlp/NLPException.java, nlp/Parsing/CompilerError.java,
	nlp/Parsing/LexicalError.java,
	nlp/Parsing/ProbabilisticParser.java,
	nlp/Parsing/SemanticError.java, nlp/Parsing/SyntaxError.java,
	nlp/Parsing/Token.java, nlp/Parsing/TokenSubType.java,
	nlp/Parsing/TokenType.java, nlp/Parsing/TransitionTable.java,
	nlp/Parsing/GrammarCompiler/Grammar.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/GrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/NonTerminal.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticRule.java,
	nlp/Parsing/GrammarCompiler/Rule.java,
	nlp/Parsing/GrammarCompiler/SemanticToken.java,
	nlp/Parsing/GrammarCompiler/Terminal.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java,
	util/comparators/ResultComparator.java: continue to add
	serialVersionUID to the modules with serializable members

2005-08-10 20:44  mokhov

	* src/marf/: Classification/ClassificationException.java,
	Classification/Distance/ChebyshevDistance.java,
	Classification/Distance/DiffDistance.java,
	Classification/Distance/EuclideanDistance.java,
	Storage/Cluster.java, Storage/Database.java,
	Storage/FeatureSet.java, Storage/Result.java,
	Storage/ResultSet.java, Storage/Sample.java,
	Storage/StorageException.java, Storage/TrainingSample.java,
	Storage/TrainingSet.java, util/FreeVector.java,
	util/InvalidSampleFormatException.java, util/MARFException.java,
	util/Matrix.java, util/NotImplementedException.java,
	util/OptionProcessor.java: Fix a copy-paste mistake in a comment.

2005-08-10 11:51  mokhov

	* doc/src/tex/report.bib: Update Bibliography with proper names and
	links.

2005-08-07 23:21  mokhov

	* src/marf/util/MARFException.java: Initialize our own message
	container to an empty string to avoid annoying nulls in some error
	messages where this does not get initialized. Add more comments.

2005-08-07 19:49  mokhov

	* TODO: Update ModuleParams.

2005-08-07 18:46  mokhov

	* src/tools/serialverupdate: Add initial version of the tool to
	check for missing serialVersionUID members in Serializable classes.
	To be extended later to be able to update those automatically.

2005-08-07 17:19  mokhov

	* src/marf/MARF.java: Correct minor revision.

2005-08-07 17:03  mokhov

	* src/marf/util/OptionProcessor.java: Implement new API methods of
	size() and getArgumentVector(). The former estimates the size of
	the option processor by summing the sizes of the active and invalid
	options (that are more likely to come from the initial argv
	anyway). The latter allows to reproduce more-or-less the input argv
	based on the active and invalid options. Properly synchronize the
	class for the case of the concurrent access.

2005-08-07 16:57  mokhov

	* src/marf/util/OptionProcessor.java: Fix a bug in getOption(int,
	boolean) where the numeric key was never actually looked up as a
	key. Simplify the retrieval logic as we have now two hashtables.
	Exposed by the GIPC of GIPSY. This bug renders getOption(int,
	boolean) and getOption(int) pretty much unusable in the
	0.3.0-devel-20050730 release :-(. It was not exposed earlier as
	none of our test apps used this form of the getOption() call.

2005-08-07 16:48  mokhov

	* src/marf/util/Debug.java: Extract the default debug-log filename
	into a constant and provide an atomic isDebugOn() method to examine
	the debug flag.

2005-08-07 16:46  mokhov

	* src/marf/util/Arrays.java: Fix a recurrent bug in the new series
	of the concatenate() call: the source and destination array
	parameters were misplaced to System.arraycopy().  Mea culpa. Also
	correct some formatting along the way.

2005-08-07 16:41  mokhov

	* src/marf/util/Arrays.java: Fix a copy-paste bug in
	arrayToVector(String[]) that was trying to use Byte instead of
	String in the for() loop.

2005-08-06 23:15  susan_fan

	* src/marf/util/Arrays.java: Add other data types for concatenate()

2005-08-06 17:11  mokhov

	* src/marf/: Classification/ClassificationException.java,
	Classification/Distance/ChebyshevDistance.java,
	Classification/Distance/DiffDistance.java,
	Classification/Distance/EuclideanDistance.java,
	Storage/Cluster.java, Storage/Database.java,
	Storage/FeatureSet.java, Storage/Result.java,
	Storage/ResultSet.java, Storage/Sample.java,
	Storage/StorageException.java, Storage/TrainingSample.java,
	Storage/TrainingSet.java, util/FreeVector.java,
	util/InvalidSampleFormatException.java, util/MARFException.java,
	util/Matrix.java, util/NotImplementedException.java,
	util/OptionProcessor.java: Add serialVersionUID for all
	Serializable classes in Storage and util as recommended by the Java
	spec. This clears out some 1.5-based Java compiler warnings. Add
	the field also in some other MARF modules; more to come. Update
	minor version @since tags along the way.

2005-08-05 18:19  mokhov

	* src/: test.java, marf/MARF.java,
	marf/Classification/Classification.java,
	marf/Classification/IClassification.java,
	marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/IFeatureExtraction.java,
	marf/Preprocessing/IFilter.java,
	marf/Preprocessing/IPreprocessing.java,
	marf/Preprocessing/Makefile, marf/Preprocessing/Preprocessing.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/Dummy/Raw.java,
	marf/Preprocessing/Endpoint/Endpoint.java,
	marf/Preprocessing/FFTFilter/BandpassFilter.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/Preprocessing/FFTFilter/HighPassFilter.java,
	marf/Preprocessing/FFTFilter/LowPassFilter.java: Complete
	implementation of the Plugin Framework for Preprocessing, Feature
	Extraction, and Classification.  Now developers can write their
	plugin classes for MARF without the necessity of altering any of
	MARF's code Add IFilter interface in Preprocessing as we may have
	different filter types, not just the FFT-based, so they will be a
	part of the same Filter Framework. Make FFTFilter implement the
	interface and account for it in the Revision Project. Update some
	revision comments to be more detailed when a given API appeared.
	Complete a mini-TODO item in the FFTFilter code of using
	Arrays.copy().	Apply more coding conventions to FFTFilter.

2005-08-05 13:49  mokhov

	* src/marf/FeatureExtraction/LPC/LPC.java: Provide getters and
	setters for the window length and number of poles for consistency
	and completeness.

2005-08-05 11:48  mokhov

	* src/marf/util/Arrays.java: Begin a series of new concatenate()
	calls that allow concatenation of arrays of the same type.  Update
	more fine-grained versioning details.  Clean up some odd spacing
	and formatting missed last time.

2005-08-03 19:37  mokhov

	* src/marf/nlp/Parsing/SyntaxError.java: Correct a couple of
	spelling mistakes in comments and add a couple more comments.

2005-08-03 19:26  mokhov

	* src/Makefile: Re-add accindetally removed '$'.

2005-08-03 19:23  mokhov

	* src/Makefile: Fix tabs.

2005-08-03 19:11  mokhov

	* src/Makefile: Implement SF.net logo display in the API docs for
	the website only.  Should improve the stats a bit.

2005-08-02 21:07  mokhov

	* src/Makefile: MARF is still mostly Java 1.4-oriented, so tell the
	compiler that when compiling the code. This should have been added
	in the previous release, but got added only to javadoc.

2005-08-01 21:05  mokhov

	* src/Makefile: Make sure the marf/nlp directory is added for
	javadoc and other tools to pickup NLPException.

2005-08-01 21:04  mokhov

	* TODO, src/test.java, src/marf/nlp/Makefile,
	src/marf/nlp/NLPException.java,
	src/marf/nlp/Parsing/CompilerError.java: Add NLPException and make
	use of it inside marf.nlp.

2005-08-01 20:31  mokhov

	* src/marf/Storage/ResultSet.java: Avoid redundant sorting if the
	result set was already previously sorted.

2005-08-01 12:27  mokhov

	* src/marf/math/Algorithms.java: Apply some more coding
	conventions.

2005-08-01 12:26  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: Add validation of the
	chunk size.

2005-08-01 11:41  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: Implement customizable
	chunk size. It can be passed through the ModuleParams class or set
	directly via setters and getters. TODO: validation. Prompted by a
	comment from Hugh Lunnon and was on my TODO anyway.

2005-08-01 11:29  mokhov

	* src/marf/MARF.java: Bump minor revision for the next release.

2005-08-01 11:28  mokhov

	* TODO: Update TODO with the forgotten things done in
	0.3.0-devel-20050730 or prior. Format a bit.

2005-07-30 18:56  mokhov

	* ChangeLog: Update ChangeLog for 0.3.0-devel-20050730.

2005-07-30 18:45  mokhov

	* doc/src/tex/: history.tex, report.tex: Bump to
	0.3.0-devel-20050730. Change the group name to MARF Research and
	Development Group.

2005-07-30 17:38  mokhov

	* src/marf/Storage/Sample.java: Fix typos in comments.

2005-07-30 17:34  mokhov

	* src/marf/Storage/Sample.java: Implement toString().

2005-07-30 17:10  mokhov

	* Makefile, README, marf.jpx, marf.oif: Update the JBuilder project
	files information.

2005-07-30 16:50  mokhov

	* src/marf/Storage/ResultSet.java: Fix getSecondClosestID() to
	account for whether the 2nd closest means 2nd minimum or 2nd
	maximum depending on the first closest.

2005-07-30 16:35  mokhov

	* src/marf/util/SortComparator.java: Allow getting the current sort
	mode.

2005-07-30 16:05  mokhov

	* src/marf/Stats/: Ngram.java, ProbabilityTable.java,
	StatisticalObject.java, StatsCollector.java, WordStats.java:
	Document the methods of the marf.Stats package's classes with
	proper javadocs.

2005-07-30 15:30  mokhov

	* src/marf/util/OptionProcessor.java: Add clear() method to remove
	all the options.

2005-07-29 19:09  mokhov

	* src/marf/MARF.java: Update author information.

2005-07-29 19:04  mokhov

	* doc/: arch.mdl, src/graphics/arch/storage.png, src/tex/apps.tex,
	src/tex/architecture.tex, src/tex/high-pass-boost.tex,
	src/tex/minmax.tex, src/tex/sources.tex, src/tex/storage.tex:
	Updated the Storage class diagram for most things. Spellcheck the
	manual.

2005-07-29 00:00  mokhov

	* doc/: arch.mdl, src/graphics/arch/classification.png,
	src/graphics/arch/feature-extraction.png,
	src/graphics/arch/gui.png, src/graphics/arch/preprocessing.png:
	Update Classification, Preprocessing, Feature Extraction, and GUI
	diagrams to a more actual state.

2005-07-24 21:26  mokhov

	* doc/: arch.mdl, src/graphics/arch/arch-general.png,
	src/graphics/arch/packages.png, src/tex/apps.tex,
	src/tex/architecture.tex, src/tex/history.tex, src/tex/intro.tex,
	src/tex/legal.tex, src/tex/notation.tex, src/tex/report.tex,
	src/tex/sources.tex: Update general MARF class diagram and main
	packages. Reverse-engineer the Rose model with the recent MARF
	sources. Refactor the Introduction chapter with proper flow and
	sectionning. Get rid of more PG stuff in MARF docs. Move COPYRIGHT
	under a section in Introduction instead of being a chapter on its
	own. Add more index and Revision entries.  Perform some general
	style editorialization.

2005-07-24 20:52  mokhov

	* doc/src/tex/report.bib: Sync bibliography with my thesis for our
	recent conference proceedings in Las Vegas.

2005-07-22 15:32  mokhov

	* doc/: pipeline.ppt, src/graphics/arch/pipeline-flow.png,
	src/tex/architecture.tex: Complete preliminary pipeline data-flow
	diagram.

2005-07-22 14:55  mokhov

	* src/marf/nlp/Parsing/: SymbolTable.java,
	GrammarCompiler/Grammar.java: Remove deprecated code/entries.
	Document the code more (still more to do).  Apply coding
	conventions in most places.

2005-07-18 23:30  mokhov

	* INSTALL: Add TOC and Upgrade section.

2005-07-18 23:10  mokhov

	* doc/src/tex/preprocessing.tex: Add high-pass high frequency boost
	to the Preprocessing section for it to appear in the manual.

2005-07-18 22:50  mokhov

	* doc/src/tex/: hamming.tex, high-frequency-boost.tex,
	high-pass-boost.tex, high-pass.tex: Add a first cut on
	documentation of the high-pass high-boost filter that escaped the
	previous release. Fix a few mistakes in Hamming Window, add
	revision, index entries, and implemenation place to the high-pass
	and high-boost filters alone.

2005-07-18 22:01  mokhov

	* Makefile, distro.exclude: Add a -bundle distro build of MARF.
	Make sure cvs2cl.pl and cvs2html.pl scripts are not included into
	the distro -- I thought I've done it, but apparently no so.

2005-07-18 21:48  mokhov

	* doc/src/tex/hamming.tex: Add index entries, revision, and mention
	where the implementation is.

2005-07-18 21:16  mokhov

	* doc/src/tex/: apps.tex, math-test-app.tex, test-fft.tex,
	test-filters.tex, test-loaders.tex, test-lpc.tex,
	test-wave-loader.tex: Group applications in sections by their
	purpose/location.  Perform some minor editorializing along the way.

2005-07-18 19:44  mokhov

	* doc/src/tex/minmax.tex: Correct section label.

2005-07-18 19:36  mokhov

	* TODO: Preliminary TODO update for the things accomplish and a few
	new TODOs.  Brush up the list a little.

2005-07-18 19:34  mokhov

	* doc/src/tex/apps.tex: Add ENCSAssetsCron.

2005-07-17 20:24  mokhov

	* src/marf/MARF.java: Expose MARF's version constants by making
	them public.  Document them more. Account for MINOR_REVISION in
	getVersion() and getIntVersion(). Add a new API of
	getDoubleVersion() to provide 123.4 version format.

2005-07-17 13:04  mokhov

	* src/marf/util/OptionProcessor.java: Correct a couple of bugs
	related to the new feature of option=value type of handling exposed
	by the RIPE of GIPSY: enumerations need to be looked up now as
	keys, not values, in the reference option hashtables.  This does
	not affect previous versions as this is a new feature.

2005-07-15 23:49  mokhov

	* src/marf/util/OptionProcessor.java: Provide first complete cut on
	implementation of the 'option=value' option processing feature.
	Make most of the new methods and classes protected for now for this
	upcoming release, but make nearly full use of them internally. The
	backward compatibility is still maintained except that the '=' sign
	now treated specially as the option-value separator. Add two-way
	hashing of Option objects by the option string or its number to
	simplify lookups; hence the new members of oValidOptionsNumbers and
	oActiveOptionsNumbers. I renamed the string ones to havs a suffix
	of "Strings". Add a new API of addValidOption(int, String, boolean)
	to allow the client code to add valid options that require
	arguments.  Adjust parse() and getOption()-family calls to use
	Option and parse the '=' appropriately and parse() now checks for
	required arguments as well. Add getOptionArgument() family of calls
	to be able to query parsed option arguments. Add getter and setters
	calls in the Option class for its members.  Document all the new
	members.

2005-07-15 23:31  mokhov

	* src/marf/MARF.java: Document exception.

2005-07-15 23:28  mokhov

	* src/test.java: Add a couple of debug lines when testing new
	features of OptionProcessor.

2005-07-15 21:01  mokhov

	* src/Makefile: Remove -version:1.4 from the compile flags as it
	turned out to be impractical if one doesn't have 1.4 JRE.

2005-07-15 19:45  mokhov

	* src/marf/math/: Matrix.java, Vector.java: Complete debugging of a
	few Matrix and Vector methods.	Fix a major bug in Matrix.crop()
	that was "forgetting" the starting "top" index for the initial
	offset to copy the elements from. Fix Matrix.getDeterminant() to
	explicitly account for 0x0 and 1x1 matrix cases. Fix a few spelling
	mistakes in comments. Document the code more. Rename variables in
	crop() to avoid confusion between local and member variables.
	Remove dead commented-out code.  Update Vector.getUnitVector() to
	use a safer normalize() call and remove code duplication. Add a new
	API of "Vector add(Vector)", and "Vector add(Vector, Vector)" that
	was logically missing in the Vector class. Add own Vector.clone()
	to avoid ClassCastExceptions with Matrix when cloning vectors. On
	this, I think the Matrix and Vector code is ready for the next
	release.

2005-07-13 21:00  mokhov

	* src/marf/util/Arrays.java: Document exception.

2005-07-13 20:59  mokhov

	* src/marf/util/Debug.java: Add a new debug(Object) method.

2005-07-13 20:57  mokhov

	* src/marf/math/: Matrix.java, Vector.java: Adjust Matrix class
	while testing its features.  Make the Direction inner class 'public
	static' to be able to access it from outside; else the
	Direction-based methods of the class were pretty much useless for
	the external use.  Fix some comments and add more javadoc tags. 
	Add Shuxin as a co-author. Apply even more coding conventions. Add
	setAllRandom() method for testing matrices filled in with random
	values. Keep debugging getDeterminant() method, which was not
	handling special cases of 0x0 and 1x1 matrices. Something still
	remains broken in the general case I'd fix with the next commit. 
	Perform some more code clean up along the way.	Add a new
	divide(double) API to be consistent with the multiply(double)
	counterpart. In Vector, add a constructor Vector(double[], boolean)
	to be able to make transposed vectors directly. Make unit vectors
	i(), j(), and k() to be 'static'.

2005-07-13 15:53  mokhov

	* src/Makefile: Make sure the assertions are enabled and we
	explicitly set the source code to be 1.4-compliant.

2005-07-13 14:02  mokhov

	* src/Makefile: Require java 1.4 for javadocs, so that assert
	doesn't generate an error.

2005-07-11 09:15  mokhov

	* src/marf/math/Matrix.java: Format.

2005-07-09 22:44  susan_fan

	* src/marf/math/Matrix.java: add shear()

2005-07-09 14:00  mokhov

	* src/marf/math/Vector.java: Fix a comment and trim trailing
	blanks.

2005-07-09 13:17  mokhov

	* src/marf/math/Matrix.java: Cure the ClassCastException problem by
	providing multiply(Matrix, Vector) and multiply(Vector) calls. Trim
	trailing blanks and correct some odd formatting.

2005-07-08 19:22  mokhov

	* src/marf/util/OptionProcessor.java: Perform some minor
	documentary and cosmetic adjustments.

2005-07-08 16:32  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Document the class
	thereby removing the javadoc warnings.

2005-07-08 16:28  mokhov

	* src/marf/MARF.java: Clean up a bit the main pipeline and let the
	exceptions propapate.  Start numebring minor revisions of when
	certain members appeared.

2005-07-08 14:54  mokhov

	* src/marf/math/: Matrix.java, Vector.java: Brush up the Matrix and
	Vector code, make it more correct and robust and much better
	documented. Make the classes Serializable to they can be saved and
	restored if need be. Improve garbage collection of the temp copies
	of the arrays used. Add an assertion check for length and size. The
	API of the new translate()/rotate()/scale() calls is altered to
	return Vector instead, per my original spec; otherwise, there is no
	much change in the functionality. The functionality itself is yet
	to be extensively tested and shear() to be added. Correct a few
	small bugs in dimension settings and stuff. Apply more coding
	conventions properly. Fix some skewed formatting and spelling
	mistakes in comments.

2005-07-07 12:11  susan_fan

	* src/marf/math/: Matrix.java, Vector.java: add scale(),
	translate(), rotate()

2005-07-06 15:19  mokhov

	* src/marf/util/OptionProcessor.java: Relax private qualifier for
	data members and make it protected so derivatives, if there are any
	can make use of them. Document the new code even though it's not
	complete. Fix a spelling mistake in the name of a variable.

2005-07-06 14:53  mokhov

	* src/marf/util/comparators/: FrequencyComparator.java,
	RankComparator.java: Clear out javadoc warnings in comparators.

2005-07-03 22:17  mokhov

	* src/marf/util/OptionProcessor.java: Begin work on OptionProcessor
	allowing option=value type of options. For this declare
	OptionsHashtable and Option classes and make marginal use of them.
	As things stand, there is no change in functionality, except for
	detecting "dangling" "=" option. Replace if(debug)-print() chains
	with Debug.debug() calls making code cleaner. A lot more work is to
	be done to complete the task, but this this the necessary
	beginning.

2005-07-03 21:06  mokhov

	* doc/src/tex/installation.tex: Further massage install.tex and get
	rid of remnant SGML PG tags.  Now will need to fill in our content
	entirely as well as sync with the INSTALL file.

2005-07-03 20:28  mokhov

	* doc/src/tex/: best-score.tex, stats-date.tex, stats.tex: Update
	the stats with Shuxin's samples.

2005-07-03 20:16  mokhov

	* doc/src/tex/data.tex: Add Shuxin and tab the source table nicely.

2005-07-03 20:00  mokhov

	* doc/src/tex/test-wave-loader.tex: Perform 2nd marginal
	editorialization, mostly merging paras.

2005-07-03 19:56  mokhov

	* doc/src/tex/: apps.tex, math-test-app.tex, test-loaders.tex:
	Perform marginal editorializing of TestLoaders and add it to the
	Apps chapter. Add somehow missed short description of MathTestApp.
	Add 3 short sections describing other usages of MARF outside the
	MARF realm.

2005-07-03 18:59  mokhov

	* doc/src/styles/styles.tex: Add a new abbreviation I happened to
	use in text.

2005-07-03 18:55  mokhov

	* doc/src/tex/report.bib: Sync with my main bib: correct spelling
	of MARF, add my "techreports" on GIPSY and refs to Tomcat, JSP, and
	Servlets.

2005-07-03 18:10  mokhov

	* manifest.mf: Remove DOS EOLs.

2005-07-03 05:18  susan_fan

	* doc/src/tex/test-loaders.tex: add test-loaders.tex

2005-06-22 17:44  mokhov

	* src/marf/util/: Arrays.java, Matrix.java: Perform some minor
	editorializing of the code and comments.  Fix a few
	English/spelling mistakes of my own and not so.  Minor corrections
	to javdocs and naming.

2005-06-22 16:13  susan_fan

	* src/marf/util/: Arrays.java, Matrix.java: Adjust class comment,
	which is missing a sentence. Fix of @return; fix indentation of
	/**.

2005-06-21 19:31  susan_fan

	* src/marf/util/Arrays.java: Add binarySearch() wrapper.

2005-06-21 14:49  mokhov

	* src/Makefile: Symlink automatically marf.jar to the recently
	built versionned jar.  Per my recent trick in the GIPSY built.

2005-06-21 10:30  susan_fan

	* src/marf/util/Arrays.java: copy() between different types of
	arrays

2005-06-21 08:32  mokhov

	* Makefile, manifest.mf: Perform some minor clean ups while porting
	this part of the Build System to my thesis work on GIPSY.

2005-06-20 17:45  mokhov

	* src/marf/Storage/StorageManager.java: Invent new member variable
	bDumpOnNotFound -- to indicate whether we want an emty file to be
	created if it does not exist during restore.  Practice proves, the
	uncoditional creation on-file-not-found event is not always desired
	or sensical, so provide this means for the client code to be able
	to turn it off. The feature is on by default and can be effected
	via a set three new constructors or the enableOnNotFound() method.
	While at it, make most of the methods synchronized. While I don't
	have a practical example at hand for the case when multiple threads
	use the same StorageManager instance to dump/restore stuff, there
	could be one one day, so as a preventive measure do it now.

2005-06-20 01:36  mokhov

	* src/marf/util/BaseThread.java: Implement new API of getTarget()
	that allows retrieval of the Runnable target set during
	construction. Proved to be usful to get a hold back on what was
	possibly anonymous created.

2005-06-20 01:34  mokhov

	* src/marf/util/ExpandedThreadGroup.java: Cosmetic.

2005-06-20 00:55  mokhov

	* src/marf/util/ExpandedThreadGroup.java: Prevent starting already
	started threads. Another bug exposed by the GIPSY's GIPC.

2005-06-20 00:28  mokhov

	* src/marf/util/BaseThread.java: Guard against null name of a
	thread. A bug was exposed and traced in the GIPSY.

2005-06-19 21:37  mokhov

	* src/marf/util/Arrays.java: Peform some editorializing of code and
	comments. Begin a new series for copy()-conversion methods between
	arrays of different types.

2005-06-19 21:35  mokhov

	* doc/: Makefile, src/Makefile: Correct copyright year.

2005-06-19 12:08  mokhov

	* src/marf/util/MARFException.java: Add our own toString() to make
	sure our own strMessage is returned.  Minor clean up in the default
	constructor.

2005-06-18 22:02  susan_fan

	* src/marf/util/Arrays.java: Using wrapper call to give equals(),
	sort(), fill(),and arrayToVector methods different parameters.

2005-06-16 16:55  mokhov

	* src/marf/util/Arrays.java: Largely update the class comments and
	perform some minor editorializing within.

2005-06-16 16:24  susan_fan

	* src/marf/util/Arrays.java: Using wrapper call to give copy()
	methods different parameters; add comments according to Java Doc
	comments.

2005-06-16 15:58  mokhov

	* src/: test.java, marf/MARF.java,
	marf/Classification/Classification.java,
	marf/Classification/ClassificationException.java,
	marf/Classification/Distance/ChebyshevDistance.java,
	marf/Classification/Distance/DiffDistance.java,
	marf/Classification/Distance/Distance.java,
	marf/Classification/Distance/EuclideanDistance.java,
	marf/Classification/Distance/MahalanobisDistance.java,
	marf/Classification/Distance/MinkowskiDistance.java,
	marf/Classification/Markov/Markov.java,
	marf/Classification/NeuralNetwork/Layer.java,
	marf/Classification/NeuralNetwork/NeuralNetwork.java,
	marf/Classification/NeuralNetwork/Neuron.java,
	marf/Classification/RandomClassification/RandomClassification.java,
	marf/Classification/Stochastic/MaxProbabilityClassifier.java,
	marf/Classification/Stochastic/Stochastic.java,
	marf/Classification/Stochastic/ZipfLaw.java,
	marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/FeatureExtractionException.java,
	marf/FeatureExtraction/Cepstral/Cepstral.java,
	marf/FeatureExtraction/F0/F0.java,
	marf/FeatureExtraction/FFT/FFT.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java,
	marf/FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	marf/FeatureExtraction/Segmentation/Segmentation.java,
	marf/Preprocessing/Preprocessing.java,
	marf/Preprocessing/PreprocessingException.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/Dummy/Raw.java,
	marf/Preprocessing/Endpoint/Endpoint.java,
	marf/Preprocessing/FFTFilter/BandpassFilter.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/Preprocessing/FFTFilter/HighPassFilter.java,
	marf/Preprocessing/FFTFilter/LowPassFilter.java,
	marf/Stats/Ngram.java, marf/Stats/Observation.java,
	marf/Stats/ProbabilityTable.java,
	marf/Stats/StatisticalObject.java, marf/Stats/StatsCollector.java,
	marf/Stats/WordStats.java,
	marf/Stats/StatisticalEstimators/GLI.java,
	marf/Stats/StatisticalEstimators/KatzBackoff.java,
	marf/Stats/StatisticalEstimators/MLE.java,
	marf/Stats/StatisticalEstimators/SLI.java,
	marf/Stats/StatisticalEstimators/StatisticalEstimator.java,
	marf/Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	marf/Stats/StatisticalEstimators/Smoothing/AddOne.java,
	marf/Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	marf/Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	marf/Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	marf/Storage/Cluster.java, marf/Storage/Database.java,
	marf/Storage/FeatureSet.java,
	marf/Storage/MARFAudioFileFormat.java,
	marf/Storage/ModuleParams.java, marf/Storage/Result.java,
	marf/Storage/ResultSet.java, marf/Storage/Sample.java,
	marf/Storage/SampleLoader.java, marf/Storage/StorageException.java,
	marf/Storage/StorageManager.java, marf/Storage/TrainingSample.java,
	marf/Storage/TrainingSet.java,
	marf/Storage/Loaders/AIFFCLoader.java,
	marf/Storage/Loaders/AIFFLoader.java,
	marf/Storage/Loaders/AULoader.java,
	marf/Storage/Loaders/MIDILoader.java,
	marf/Storage/Loaders/MP3Loader.java,
	marf/Storage/Loaders/SNDLoader.java,
	marf/Storage/Loaders/SineLoader.java,
	marf/Storage/Loaders/ULAWLoader.java,
	marf/Storage/Loaders/WAVLoader.java, marf/gui/Spectrogram.java,
	marf/gui/SpectrogramPanel.java, marf/gui/WaveGrapher.java,
	marf/gui/WaveGrapherPanel.java, marf/gui/util/BorderPanel.java,
	marf/gui/util/ColoredStatusPanel.java,
	marf/gui/util/SmartSizablePanel.java, marf/math/Algorithms.java,
	marf/math/MathException.java, marf/math/Matrix.java,
	marf/math/Vector.java, marf/nlp/Collocations/ChiSquareTest.java,
	marf/nlp/Collocations/CollocationWindow.java,
	marf/nlp/Collocations/TTest.java,
	marf/nlp/Parsing/ClassSymTabEntry.java,
	marf/nlp/Parsing/CodeGenerator.java,
	marf/nlp/Parsing/Compiler.java,
	marf/nlp/Parsing/CompilerError.java,
	marf/nlp/Parsing/FuncSymTabEntry.java,
	marf/nlp/Parsing/GenericLexicalAnalyzer.java,
	marf/nlp/Parsing/LexicalAnalyzer.java,
	marf/nlp/Parsing/LexicalError.java, marf/nlp/Parsing/Parser.java,
	marf/nlp/Parsing/ProbabilisticParser.java,
	marf/nlp/Parsing/SemanticAnalyzer.java,
	marf/nlp/Parsing/SemanticError.java,
	marf/nlp/Parsing/SymDataType.java,
	marf/nlp/Parsing/SymTabEntry.java,
	marf/nlp/Parsing/SymbolTable.java,
	marf/nlp/Parsing/SyntaxError.java, marf/nlp/Parsing/Token.java,
	marf/nlp/Parsing/TokenSubType.java,
	marf/nlp/Parsing/TokenType.java,
	marf/nlp/Parsing/TransitionTable.java,
	marf/nlp/Parsing/VarSymTabEntry.java,
	marf/nlp/Parsing/GrammarCompiler/Grammar.java,
	marf/nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	marf/nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	marf/nlp/Parsing/GrammarCompiler/GrammarElement.java,
	marf/nlp/Parsing/GrammarCompiler/GrammarTokenType.java,
	marf/nlp/Parsing/GrammarCompiler/NonTerminal.java,
	marf/nlp/Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	marf/nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	marf/nlp/Parsing/GrammarCompiler/ProbabilisticGrammarTokenType.java,
	marf/nlp/Parsing/GrammarCompiler/ProbabilisticRule.java,
	marf/nlp/Parsing/GrammarCompiler/Rule.java,
	marf/nlp/Parsing/GrammarCompiler/SemanticToken.java,
	marf/nlp/Parsing/GrammarCompiler/Terminal.java,
	marf/nlp/Stemming/Stemming.java, marf/nlp/Stemming/StemmingEN.java,
	marf/nlp/util/NLPStreamTokenizer.java, marf/util/Arrays.java,
	marf/util/BaseThread.java, marf/util/ByteUtils.java,
	marf/util/Debug.java, marf/util/ExpandedThreadGroup.java,
	marf/util/FreeVector.java,
	marf/util/InvalidSampleFormatException.java, marf/util/Logger.java,
	marf/util/MARFException.java, marf/util/Matrix.java,
	marf/util/NotImplementedException.java,
	marf/util/OptionProcessor.java, marf/util/SortComparator.java,
	marf/util/comparators/FrequencyComparator.java,
	marf/util/comparators/RankComparator.java,
	marf/util/comparators/ResultComparator.java,
	tools/revision-check.sh: The Revision Project Update: Perform a
	massive rename of the common, but not-too-well-thought-of
	getRevision() call to getMARFSourceCodeRevision().  The reason is
	the former is very likely to create conflicts in the user code that
	extends from one or more MARF classes as getRevision() can be quite
	a common name. I've been the first one bitten by this, so luckily
	we change it earlier than later. Thus, rename it to something more
	MARF-specific that nobody else is likely to use.

2005-06-16 14:25  mokhov

	* src/marf/util/Matrix.java: Properly document the class and apply
	coding conventions.

2005-06-15 21:55  mokhov

	* src/marf/util/Logger.java: Simplify our coding a bit by using the
	FileOutputStream(String) constructor.

2005-06-15 20:54  mokhov

	* src/marf/gui/: Spectrogram.java, SpectrogramPanel.java,
	WaveGrapher.java, WaveGrapherPanel.java,
	util/ColoredStatusPanel.java, util/SmartSizablePanel.java:
	Eliminate javadoc warnings by documenting more or less all public
	members.  Apply coding conventions.

2005-06-15 20:51  mokhov

	* src/marf/util/Logger.java: Now that I use the Logger, complete
	some of its missing methods to enable/disable timestamps, log
	direction with validation, filenames, etc.  Make the class properly
	synchronized should it be accessed by multiple threads. Document
	the class. Apply coding coventions.

2005-06-14 20:57  mokhov

	* src/marf/: MARF.java, Classification/Classification.java,
	Classification/Distance/ChebyshevDistance.java,
	Classification/Distance/DiffDistance.java,
	Classification/Distance/Distance.java,
	Classification/Distance/EuclideanDistance.java,
	Classification/Distance/MahalanobisDistance.java,
	Classification/Distance/MinkowskiDistance.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/RandomClassification/RandomClassification.java,
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Classification/Stochastic/Stochastic.java,
	Classification/Stochastic/ZipfLaw.java,
	FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/Cepstral/Cepstral.java,
	FeatureExtraction/F0/F0.java, FeatureExtraction/FFT/FFT.java,
	FeatureExtraction/LPC/LPC.java,
	FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	FeatureExtraction/Segmentation/Segmentation.java,
	Preprocessing/IPreprocessing.java: Advace Interface Plugin
	Framework for Classification, Feature Extraction, and
	Preprocessing. All class references of thereof were replaced by
	their respective interfaces and this time including MARF. Define
	constants in MARF for user-defined plugins. This is the next, but
	not at all last step in the plugin framework -- will need to be
	able to set and dynamically instantiate user-ser plugins via
	Class.forName() and Class.newInstance() methods. Adjust some code
	along the way to fit the need (e.g. IPreprocessing was lacking
	getSample() method), apply more of coding conventions and correct
	the remaining javadoc warnings in all these modules.

2005-06-14 18:41  mokhov

	* src/marf/util/OptionProcessor.java: Only count the option as
	invalid if it's not blank.  This infrequent scenario is possible
	when argv is generated programmatically and not from a command
	line, and as such should simply be ignored.

2005-06-14 18:19  mokhov

	* src/marf/util/OptionProcessor.java: Introduce new API calls
	getOption(String, boolean) and getOption(int, boolean) to allow
	proceeding on missing option by either returning UNDEF or ""
	constants. Proved to be useful in the Regression app with default
	args in the GIPSY and will certainly be in MARF's.  Remove unused
	iOption member variable and add logically required but previously
	missing convenince calls for completeness, such as
	getValidOptions(), isValidOption(), isInvalidOption().	Massage
	HTML of some javadocs a little.

2005-06-13 18:14  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java: Rename
	the contant in accordance with the coding standards.

2005-06-12 19:09  mokhov

	* src/: test.java, marf/Classification/IClassification.java,
	marf/Classification/Stochastic/MaxProbabilityClassifier.java,
	marf/FeatureExtraction/IFeatureExtraction.java,
	marf/Preprocessing/IPreprocessing.java,
	marf/Stats/StatisticalEstimators/IStatisticalEstimator.java,
	marf/Stats/StatisticalEstimators/Makefile,
	marf/Stats/StatisticalEstimators/StatisticalEstimator.java,
	marf/Stats/StatisticalEstimators/Smoothing/ISmoothing.java,
	marf/Stats/StatisticalEstimators/Smoothing/Makefile,
	marf/Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	marf/Storage/IDatabase.java, marf/Storage/ISampleLoader.java,
	marf/Storage/IStorageManager.java,
	marf/nlp/Stemming/IStemming.java, marf/nlp/Stemming/Makefile,
	marf/nlp/Stemming/Stemming.java: Towards support for exentsions,
	add three more interfaces: IStatisticalEstimator, ISmoothing,
	IStemming and make corresponding modules implement them. For
	statistical estimators rename P(), get/setLang() methods to p() and
	get/setLanguage() at the same time, either more readable or coding
	conventions-compliant.	Rename all INTERFACE_CODE_REVISION
	constants to MARF_INTERFACE_CODE_REVISION to avoid most conflicts
	with the deriving code. Add all interfaces to the Revision Project.

2005-06-11 18:21  mokhov

	* src/marf/FeatureExtraction/IFeatureExtraction.java: Add
	getFeaturesArray() as any plugin, if there will be any, will need
	to implement that.

2005-06-11 18:20  mokhov

	* src/marf/MARF.java: Bump minor revision.

2005-06-11 16:35  mokhov

	* src/marf/Storage/: IStorageManager.java, StorageManager.java:
	Since the extensions map array is really a constant, rename it
	according to the coding standards.

2005-06-11 15:35  mokhov

	* src/marf/util/BaseThread.java: Fix a major bug in BaseThread
	related to the assumption of constructor this() chooses as a
	target. Since this() was picking up always the
	BaseThread(ExpandedThreadGroup, Runnable, String) constructor (at
	least in Java 1.4), it was very easy to get a NullPointerException
	if the first parameter is null.  The other candidate constructor
	BaseThread(ThreadGroup, Runnable, String) has never been chosen as
	a target for this() invocation. Dicovered while working on GIPSY's
	GEE.

2005-06-11 14:44  mokhov

	* src/marf/util/MARFException.java: Clean up code a little and add
	a default constructor. Enforce more coding conventions.

2005-06-11 14:20  mokhov

	* src/marf/util/BaseThread.java: Make sure the operations releted
	to the static counter are themselves thread-safe.

2005-06-11 14:12  mokhov

	* src/marf/math/Algorithms.java: Fix a typo in a comment.

2005-06-11 00:35  mokhov

	* src/marf/util/BaseThread.java: Correct a little bug of not
	setting TID properly in the BaseThread(ExpandedThreadGroup,
	Runnable, String) constructor.

2005-06-10 23:24  mokhov

	* src/marf/util/OptionProcessor.java: Provide a symmetric
	implementation of getOption(int) to that of getOption(String) to be
	able to retrieve the option keys (strings).  On the way
	update/clarify some comments.

2005-06-10 22:45  mokhov

	* src/marf/util/Debug.java: Add a new method debug(Class, String)
	to do initial tracing source of messages.

2005-06-10 22:44  mokhov

	* src/marf/MARF.java: Add commans in the config output for better
	readability.

2005-06-10 21:53  mokhov

	* src/marf/util/Debug.java: Document the class and add two new
	argumentless convenience methods enableDebug() and debug().

2005-06-10 21:36  mokhov

	* src/marf/util/Arrays.java: Update comments of the constructor and
	a couple of routines.

2005-06-10 21:25  mokhov

	* src/marf/Classification/: Markov/Markov.java,
	NeuralNetwork/Layer.java, NeuralNetwork/NeuralNetwork.java,
	NeuralNetwork/Neuron.java,
	Stochastic/MaxProbabilityClassifier.java,
	Stochastic/Stochastic.java, Stochastic/ZipfLaw.java: Clear all
	classification modules of missing javadoc warnings.

2005-06-10 20:48  mokhov

	* src/marf/MARF.java: Fix a small bug in the error message
	reporting wrong upper boundary of available preprocessing methods.
	This is related to the bug I developed the patch for from the
	previous release (0.3.0-devel-20040614) which unfortunatelly
	slipped through. Hopefully, this is not critical compared to the
	original bug.

2005-06-10 16:05  mokhov

	* src/marf/Classification/Makefile: Correctly escape EOL in the
	.class file list.

2005-06-10 16:03  mokhov

	* src/: test.java, marf/Preprocessing/IPreprocessing.java: Add
	newly created interfaces to the Revision Project.

2005-06-10 16:00  mokhov

	* src/marf/: Classification/IClassification.java,
	Classification/Makefile, FeatureExtraction/Makefile: Add interface
	to targets and correct some formatting.

2005-06-10 15:59  mokhov

	* src/marf/Preprocessing/: IPreprocessing.java, Makefile,
	Preprocessing.java: Introduce IPreprocessing for extensions.

2005-06-10 15:49  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	IFeatureExtraction.java, Makefile: Introduce a notion of
	IFeatureExtraction for extensions.

2005-06-10 15:39  mokhov

	* src/marf/Classification/Makefile: Make Makefile be aware of
	IClassification.

2005-06-10 15:36  mokhov

	* src/marf/Storage/: IDatabase.java, ISampleLoader.java,
	IStorageManager.java: Strip out redundant public/static/final
	modifiers that are assumed in interfaces.

2005-06-10 15:34  mokhov

	* src/marf/Classification/: Classification.java,
	IClassification.java: Introduce a notion of IClassification
	interface in case there are some extensions of MARF out there
	wishing to exist and extend. Have the genereric Classification
	module implement it.

2005-06-09 17:32  mokhov

	* doc/pipeline.ppt: Add initial source of the MARF pipeline.

2005-06-06 19:26  mokhov

	* src/Makefile: Make sure COPYRIGHT is added in the distro build.

2005-06-06 17:42  mokhov

	* ChangeLog, src/tools/cvs2cl.sh: Make cvs2cl.sh to use MAIN and
	precede ./cvs2cl.pl with a "./".  Update ChangeLog from all these
	commit logs -- will need to clean before the final.

2005-06-06 15:30  mokhov

	* src/tools/stats2latex.pl: Correct a spelling mistake.

2005-06-06 15:08  mokhov

	* doc/src/tex/: appendix.tex, architecture.tex, diff-distance.tex,
	experimentation.tex, f0.tex, gui.tex, history.tex, intro.tex,
	minmax.tex, nnet.tex, raw.tex, results.tex, sample-formats.tex,
	spectrogram.tex, stats.tex, test-fft.tex, test-filters.tex,
	test-lpc.tex, test-wave-loader.tex, training.tex, wave-grapher.tex:
	Primarily run a basic spellcheck. Add some Revision entries and
	\api and \tool commands. Update the option description of
	SpeakerIdenApp.  Correct some results-related data. Add a few more
	index entries.

2005-06-06 14:18  mokhov

	* doc/src/tex/installation.tex: Clean up remnant PG stuff.

2005-06-06 14:02  mokhov

	* TODO: Add more marf.util stuff to complete for the next release.

2005-06-06 13:58  mokhov

	* doc/src/tex/report.tex: Reflect the true version in the title as
	well and keep the Group as the author.

2005-06-06 13:52  mokhov

	* doc/src/tex/sources.tex: Fix misspelled \index.

2005-06-06 13:51  mokhov

	* doc/src/tex/report.tex: Spell out full version of todays release.

2005-06-06 13:50  mokhov

	* doc/src/tex/sources.tex: Add a link to Coding Conventions. Use
	more of the new commands.

2005-06-06 13:38  mokhov

	* doc/src/tex/report.tex: Fix include.

2005-06-06 13:35  mokhov

	* README, HISTORY, INSTALL, TODO, doc/src/tex/installation.tex,
	doc/src/tex/report.tex: Perform update of the docs to more recent
	state of affairs. Mark a few TODO items in them. Account for
	dangling installation.tex file. All of these will require more
	work, but this will happen in the next release.

2005-06-06 13:06  mokhov

	* doc/src/tex/: build.tex, report.tex: Add Build System Chapter
	stub.

2005-06-06 12:43  mokhov

	* doc/src/tex/: output.tex, sampleloading.tex: Remove DOS EOLs.

2005-06-06 12:42  mokhov

	* doc/src/tex/history.tex: Massage history a bit. Will need to
	integrate with HISTORY file later.

2005-06-06 10:33  mokhov

	* src/tools/stats2latex.pl: Correct shebang and add introductory
	comments.

2005-06-06 07:32  mokhov

	* src/tools/cvs2cl.sh: Add wrapper script with default options for
	MARF.

2005-06-06 01:09  mokhov

	* TODO: Add a couple more items for SpeakerIdentApp.

2005-06-06 01:04  mokhov

	* doc/src/tex/: architecture.tex, conclusions.tex, data.tex,
	experimentation.tex: Update/correct a few things WRT to the
	upcoming release. Update counts and wording in Arch and
	Conlclusion. Update dir. structure to smth more resembling reality
	-- will need a script for that. Add a couple more $Revision: 1.5 $ and
	index entries.

2005-06-05 21:45  mokhov

	* doc/src/tex/: best-score.tex, stats-date.tex, stats.tex: Update
	the stats data from SpeakersIdentApp's run.

2005-06-05 21:18  mokhov

	* TODO, doc/src/tex/raw.tex, doc/src/tex/storage.tex,
	doc/src/tex/training.tex: Account for two more dangling .tex files.
	Cosmetic fixes elsewhere.

2005-06-05 20:03  mokhov

	* doc/src/tex/sample-formats.tex: Massage sample-formats.tex
	slightly. Will need more work on it later.

2005-06-05 20:02  mokhov

	* doc/src/tex/: sampleloading.tex, storage.tex: Add $Revision: 1.5 $,
	EOF, and account for sample-formats.tex.

2005-06-05 19:39  mokhov

	* src/marf/util/Logger.java: Add missing imports.

2005-06-05 19:36  mokhov

	* src/marf/util/Logger.java: Apparently, PrintSream(String) does
	not exist in Java 1.4, so create a workaround for it.

2005-06-04 21:16  mokhov

	* Makefile.global, src/Makefile, src/marf/Makefile,
	src/marf/Classification/Makefile,
	src/marf/Classification/Distance/Makefile,
	src/marf/Classification/Markov/Makefile,
	src/marf/Classification/NeuralNetwork/Makefile,
	src/marf/Classification/RandomClassification/Makefile,
	src/marf/Classification/Stochastic/Makefile,
	src/marf/FeatureExtraction/Makefile,
	src/marf/FeatureExtraction/Cepstral/Makefile,
	src/marf/FeatureExtraction/F0/Makefile,
	src/marf/FeatureExtraction/FFT/Makefile,
	src/marf/FeatureExtraction/LPC/Makefile,
	src/marf/FeatureExtraction/MinMaxAmplitudes/Makefile,
	src/marf/FeatureExtraction/RandomFeatureExtraction/Makefile,
	src/marf/FeatureExtraction/Segmentation/Makefile,
	src/marf/Preprocessing/Makefile,
	src/marf/Preprocessing/Dummy/Makefile,
	src/marf/Preprocessing/Endpoint/Makefile,
	src/marf/Preprocessing/FFTFilter/Makefile, src/marf/Stats/Makefile,
	src/marf/Stats/StatisticalEstimators/Makefile,
	src/marf/Stats/StatisticalEstimators/Smoothing/Makefile,
	src/marf/Storage/Makefile, src/marf/Storage/Loaders/Makefile,
	src/marf/gui/Makefile, src/marf/gui/util/Makefile,
	src/marf/math/Makefile, src/marf/nlp/Makefile,
	src/marf/nlp/Collocations/Makefile, src/marf/nlp/Parsing/Makefile,
	src/marf/nlp/Parsing/GrammarCompiler/Makefile,
	src/marf/nlp/Stemming/Makefile, src/marf/nlp/util/Makefile,
	src/marf/util/Makefile, src/marf/util/comparators/Makefile: Fully
	implement the Makefile Build System for all of MARF, finally.

2005-06-04 21:15  mokhov

	* TODO: Update TODO WRT to the stuff completed more. Add new items,
	such as Schema, DUMP_SQL, and DUMP_HTML. Add previously missing
	MathTestApp.  Update GUI items:
	
	> - MathTestApp
	>   - Add GUI
	>   - Release.
	>   * Make executable .jar
	>
	124d128 <   - Individually 125a130
	>   ++- Individually
	141c146 <   +--- A Makefile per directory ---
	>   * A Makefile per directory
	154c159 <   - Apps jars ---
	>   +++-- Apps jars
	186d190 <     - High-pass filter with high-frequency boost together
	{0.3.0} 191a196
	>     * High-pass filter with high-frequency boost together {0.3.0}
	298a304
	>	- shear
	305,306c311 <	    * Fix filename stuff (module_dirname to
	module_filename) <	 - Make it a BorderPanel ---
	>	+----- Implement SpectrogramPanel
	307a313
	>	* Fix filename stuff (module_dirname to module_filename)
	309c315 <	- Make it a BorderPanel ---
	>	+----- Implement WaveGrapherPanel
	337c343 < - Exceptions {0.3.0} ---
	> - MARF Exceptions Framework {0.3.0}
	346,349c352 <	  * Add marf.util.Debug module.  <	 *
	marf.util.Debug.debug() <	* Replicate MARF.debug() -->
	marf.util.Debug.debug() <   - OptionProcessor ---
	>   +- OptionProcessor
	352a356,358
	>   * Add marf.util.Debug module.
	>     * marf.util.Debug.debug()
	>     * Replicate MARF.debug() --> marf.util.Debug.debug()
	361,363c367,380 <   +++- DUMP_BINARY (w/o compression) {0.3.0} <  
	- DUMP_XML {?.?.?} <   - DUMP_CSV {?.?.?} ---
	>   - Implement
	>     - Schema (as in DB for exports)
	>	- Common attribute names for
	>	  - SQL
	>	  - XML
	>	  - HTML
	>	  - CSV
	>	- Metadata / DDL
	>     - Dump/Restore Types
	>	+++- DUMP_BINARY (w/o compression) {0.3.0}
	>	- DUMP_XML {?.?.?}
	>	- DUMP_CSV {?.?.?}
	>	- DUMP_HTML {?.?.?}
	>	- DUMP_SQL {?.?.?}
	368c385 <	- convertability: bin.gzip <-> bin <-> csv <-> xml
	---
	>	- convertability: gzbin <-> bin <-> csv <-> xml <-> html
	<-> sql
	442c459 < - Add module ---
	> * Add module
	446,448c463,465 <   - stats2latex <   - cvs2cl <   - cvs2html ---
	>   * stats2latex
	>   * cvs2cl
	>   * cvs2html
	465,467d481 <	+- fix javadoc 1.4/1.5 warnings <   * fix Appendix
	<   * split-out bibliography 472,473d485 <   * ChangeLog <   *
	report components [serge] 495d506 <   * index 498a510,515
	>   * fix javadoc 1.4/1.5 warnings
	>   * fix Appendix
	>   * split-out bibliography
	>   * index
	>   * ChangeLog
	>   * report components [serge]
	503c520 <     - ChanageLog ---
	>     +- ChanageLog

2005-06-04 20:27  mokhov

	* src/marf/nlp/Stemming/: Stemming.java, StemmingEN.java: Document
	thereby removing javadoc warnings.

2005-06-04 20:23  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Expand imports.

2005-06-04 20:13  mokhov

	* src/marf/Preprocessing/FFTFilter/BandpassFilter.java: Add missing
	javadocs and remove unused import.

2005-06-04 19:52  mokhov

	* src/marf/Preprocessing/Dummy/Dummy.java: Add missing javadocs.

2005-06-04 19:52  mokhov

	* src/marf/Preprocessing/Endpoint/Endpoint.java: Correct/add
	missing javadocs. Remove now-implemented leftover of StorageManager
	API.

2005-06-04 19:51  mokhov

	* src/marf/util/Arrays.java: Implement copy(int[], int[], int).
	Add/adjust comments elsewhere.

2005-06-04 13:54  mokhov

	* TODO: Update TODO to the more recent state of affairs WRT the
	five apps ready to be released and a few items in the framework.
	Move completed items down their hiearachies and uncompleted up.

2005-06-04 13:49  mokhov

	* .classpath: Add CVS exlusion filter.

2005-06-04 12:05  mokhov

	* src/tools/: cvs2cl.pl, cvs2html.pl, stats2latex.pl: Add CVS Log
	to ChangeLog and CVS Log to HTML tools.  Add my tool to convert
	stats to LaTeX format.

2005-06-04 00:05  mokhov

	* Makefile: Do NOT remove distro dir on maintainer-clean for now,
	else the distro build erases it.

2005-06-03 23:54  mokhov

	* src/marf/: Preprocessing/Preprocessing.java,
	nlp/Parsing/LexicalAnalyzer.java, nlp/Parsing/Parser.java,
	nlp/Parsing/Token.java, nlp/Parsing/TransitionTable.java,
	nlp/Parsing/GrammarCompiler/Grammar.java, util/Arrays.java: Correct
	comments javadoc was complaining about.

2005-06-03 21:22  mokhov

	* src/marf/Storage/: Database.java, IDatabase.java: Add/correct
	some missing/incorrect javadoc comments.

2005-06-03 13:09  mokhov

	* src/marf/Storage/: ISampleLoader.java, MARFAudioFileFormat.java,
	Sample.java, SampleLoader.java, Loaders/SineLoader.java,
	Loaders/WAVLoader.java: Provide first complete implementaion of
	MARFAudioFileFormat with needed extensions of AudioFileFormat and
	AudioFileFormat.Type to support additional formats. Move the
	enumeration constants of formats and the getAudioFormat() and
	setAudioFormat() API from Sample. Renumber them to start with 700
	for the the same reasons the MARF's constants were renumbered.
	Update setAudioFormat() to also uptdate internal Type instance.
	Re-implement the default constructor to have a meaning at least as
	far as our WAVE loading concerned. Add a few more logical
	constructors related to MARF and overriding the protected one of
	the parent.  Add static instances of SINE, MP3, ULAW, and MIDI of
	Type. Document all class members.  Reimplement get/setAudioFormat()
	API of Sample through MARFAudioFileFormat now.	Move constants
	DEFAULT_SAMPLE_BIT_SIZE and DEFAULT_CHANNELS all the way up to
	ISampleLoader as intended to be used by most SampleLoader
	implementations.  Move variables iRequiredBitSize and
	iRequiredChannels to SampleLoader as they seem to be pertinent not
	only to WAVLoader anymore.  Apply coding conventions in places.
	Document the WAVLoader code a bit more.

2005-06-03 13:06  mokhov

	* src/marf/MARF.java: Renumber enumerations of modules so that they
	don't overlap and have well enough leeway for expansion.  This
	change was prompted by a tendancy I noticed while reviewing
	TestFilters' option processing. While there was no immediate bug
	there, but it was just waiting to happen -- using different
	constants for different module types and subtypes that all have
	begun with 0 -- evetually this would confuse option processing as
	two different options would map to the same value causing one of
	them to be lost.  There is a great potention of error in other
	areas due to this.  Now all preprocessing methods begin with a 100,
	feature extraction with 300, and classification with 500.  Make the
	UNSET constant public.
	
	In a semi-related change, update sample file format enumeration to
	be the same as of newly implemented MARFAudioFileFormat, so there
	are no discrepancies in the constant values.
	
	Add a few missing @since tags and correct erroneus comments along
	the way.
	
	Bump MINOR_REVISION to 2. Have to use it some day.

2005-06-03 12:37  mokhov

	* src/test.java: Printout the interface revision information the
	way it's done for classes. Add a few missing @since tags.

2005-06-02 20:59  mokhov

	* src/marf/Storage/Loaders/WAVLoader.java: Clean up exception
	handling.

2005-06-02 20:58  mokhov

	* src/marf/Storage/Sample.java: Add default chunk size constant to
	be used internally and by the apps to avoid harcoding.

2005-06-02 12:07  mokhov

	*
	src/marf/FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java:
	Correct a typo in a comment.

2005-06-02 09:05  mokhov

	* src/Makefile: Remove obsolete comments and make the install
	target more sensical.

2005-06-01 23:51  mokhov

	* doc/src/tex/: nlp.tex, report.tex: Add stub NLP chapter.

2005-06-01 23:33  mokhov

	*
	src/marf/FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java:
	Add a data debug message. Correct an off-by-one bug in copying of
	the maximums.

2005-06-01 22:44  mokhov

	* doc/src/tex/: feature-extraction.tex, minmax.tex: Add initial
	description of the Min/Max Amplitudes classifier.

2005-06-01 22:32  mokhov

	* doc/src/tex/f0.tex: Add Revision and an index entry.

2005-06-01 22:23  mokhov

	* doc/src/tex/: preprocessing.tex, raw.tex: Add a brief description
	of the Raw preprocessing module with Revisions.

2005-06-01 22:05  mokhov

	* doc/src/tex/: classification.tex, diff-distance.tex: Add a first
	cut of the Diff Distance section. Add Revision to Classification.

2005-06-01 22:04  mokhov

	* doc/src/tex/mahalanobis-distance.tex: Add subsections and
	Revision. Correct the last para about the state of the
	implementation.

2005-06-01 21:49  mokhov

	* src/marf/Classification/Distance/: ChebyshevDistance.java,
	DiffDistance.java: Clean up one import and incorrect javadoc
	params.

2005-06-01 21:12  mokhov

	* src/marf/MARF.java: Since MARF.debug() is gone, remove the DEBUG
	flag as well. All the uses of the two have been updated everywhere
	to use the marf.util.Debug class instead.

2005-06-01 15:42  mokhov

	* src/marf/util/Matrix.java: Just like for FreeVector, methods of
	Matrix must be synchronized.

2005-06-01 15:38  mokhov

	* src/marf/util/: Arrays.java, BaseThread.java, ByteUtils.java,
	Debug.java, ExpandedThreadGroup.java, FreeVector.java,
	InvalidSampleFormatException.java, Logger.java, MARFException.java,
	Matrix.java, NotImplementedException.java, OptionProcessor.java,
	SortComparator.java, comparators/FrequencyComparator.java,
	comparators/RankComparator.java, comparators/ResultComparator.java:
	Complete code review preparation for the upcoming 0.3.0-devel
	release with util.  Specifically, add/correct some javadoc
	comments. Add missing author/version/since tags.  Fix formatting a
	little. Make Debug a subclass of Logger. Make all methods of Debug
	synchronized to be thread-safe. Mark all methods of FreeVector
	synchronized as well, just like its parent's. Expand a few imports.

2005-06-01 15:30  mokhov

	* src/marf/Stats/: Ngram.java, Observation.java,
	ProbabilityTable.java, StatisticalObject.java, StatsCollector.java,
	WordStats.java, StatisticalEstimators/GLI.java,
	StatisticalEstimators/KatzBackoff.java,
	StatisticalEstimators/MLE.java, StatisticalEstimators/SLI.java,
	StatisticalEstimators/StatisticalEstimator.java,
	StatisticalEstimators/Smoothing/AddDelta.java,
	StatisticalEstimators/Smoothing/AddOne.java,
	StatisticalEstimators/Smoothing/GoodTuring.java,
	StatisticalEstimators/Smoothing/Smoothing.java,
	StatisticalEstimators/Smoothing/WittenBell.java: Prepare Stats for
	the upcoming 0.3.0-devel release. Specifically, Add/correct class
	javadoc comments. Add author/version/since tags.  Fix formatting a
	little. Expand imports. Move Serializable up to Statistical object
	as all it derivatives need to be able to be serialized anyway.

2005-06-01 15:21  mokhov

	* src/marf/Storage/: Cluster.java, Database.java,
	ISampleLoader.java, ResultSet.java, TrainingSet.java: Correct some
	erroneous/missing javadoc comments, reported by Eclipse.  Document
	a few things. Make Database to call super() in its constructor.

2005-06-01 01:35  mokhov

	* src/marf/nlp/: Parsing/ClassSymTabEntry.java,
	Parsing/CodeGenerator.java, Parsing/Compiler.java,
	Parsing/CompilerError.java, Parsing/FuncSymTabEntry.java,
	Parsing/GenericLexicalAnalyzer.java, Parsing/LexicalAnalyzer.java,
	Parsing/LexicalError.java, Parsing/Parser.java,
	Parsing/ProbabilisticParser.java, Parsing/SemanticAnalyzer.java,
	Parsing/SemanticError.java, Parsing/SymDataType.java,
	Parsing/SymTabEntry.java, Parsing/SymbolTable.java,
	Parsing/SyntaxError.java, Parsing/Token.java,
	Parsing/TokenSubType.java, Parsing/TokenType.java,
	Parsing/TransitionTable.java, Parsing/VarSymTabEntry.java,
	Parsing/GrammarCompiler/Grammar.java,
	Parsing/GrammarCompiler/GrammarAnalyzer.java,
	Parsing/GrammarCompiler/GrammarCompiler.java,
	Parsing/GrammarCompiler/GrammarElement.java,
	Parsing/GrammarCompiler/GrammarTokenType.java,
	Parsing/GrammarCompiler/NonTerminal.java,
	Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	Parsing/GrammarCompiler/ProbabilisticGrammarTokenType.java,
	Parsing/GrammarCompiler/ProbabilisticRule.java,
	Parsing/GrammarCompiler/Rule.java,
	Parsing/GrammarCompiler/SemanticToken.java,
	Parsing/GrammarCompiler/Terminal.java, Stemming/Stemming.java,
	Stemming/StemmingEN.java, util/NLPStreamTokenizer.java: Prepare NLP
	stuff for the upcoming 0.3.0-devel release. Specifically, add
	author/version/since tags everywhere. Correct/adjust/add more
	comments. Correct some formatting and clean up code a bit.
	Expand/clean up imports in most places.

2005-05-31 21:57  mokhov

	* src/marf/math/: Algorithms.java, Matrix.java: In preparation to
	the next 0.3.0-devel release correct some erroenous comments and
	document more. Fix some formatting.

2005-05-31 21:55  mokhov

	* src/marf/gui/util/BorderPanel.java: Add missing @param javadoc
	tag.

2005-05-31 21:54  mokhov

	* src/marf/MARF.java: Correct all javadoc warnings and document at
	least all public members.

2005-05-31 11:44  mokhov

	* src/marf/Storage/Loaders/: SineLoader.java, WAVLoader.java:
	Update javadoc comments. In SineLoader make updateSample() to
	resetArrayMark() of Sample. In WAVLoader override reset() of
	SampleLoader and add oByteArrayOutputStream reset there.  Document
	code a little more and fix a few formatting glitches.

2005-05-31 11:42  mokhov

	* src/marf/Storage/: Cluster.java, FeatureSet.java,
	ModuleParams.java, TrainingSet.java: Expand/clean up imports.

2005-05-31 11:39  mokhov

	* src/marf/Classification/Distance/: Distance.java,
	MahalanobisDistance.java: Remove redundant imports.

2005-05-31 08:54  mokhov

	* src/marf/Preprocessing/Preprocessing.java: Correct spelling of
	oObjectToSerialize and getAudioFormat().

2005-05-31 08:50  mokhov

	* src/marf/Preprocessing/: Preprocessing.java,
	PreprocessingException.java, Dummy/Dummy.java,
	Endpoint/Endpoint.java, FFTFilter/BandpassFilter.java,
	FFTFilter/FFTFilter.java, FFTFilter/HighFrequencyBoost.java:
	Prepare for the upcoming 0.3.0-devel release. Specifically:
	Implement rudimentaty dump()/restore() semantics based on the base
	implementations of such in StorageManager with BINARY and
	GZIP_BINARY methods for enclosing Sample object. Remove previously
	unimplemented stubs of dump()/restore() calls. Implement
	backSynchronizeObject() and mark some other than oSample data
	members as transient in case we would want to dump the modules
	themselves. Generate the dump file name for now based on Sample's
	class name, sample's file format, and preprocessing method used,
	followed by the ".sample" extension. This has a downside of only
	having max such a file per format per preprocessing, but that's a
	start. Otherwise prepare the author/version/since javadoc comments,
	correct formatting, and document a little more.

2005-05-31 08:43  mokhov

	* src/marf/Storage/StorageManager.java: Implement a logically
	missing constructor that takes only the Object to serialize
	argument.

2005-05-31 02:10  mokhov

	* src/marf/Storage/SampleLoader.java: Remove useless cast and
	replace it with coding conventions instead.

2005-05-31 02:07  mokhov

	* src/marf/Storage/: SampleLoader.java, Loaders/SineLoader.java: In
	SampleLoader allow derivatives to override updateSample(),
	getSampleSize(), and reset(). Overide the former two in SineLoader
	so no bogus errors are thrown out due to inability to update or
	prompt for a size a fictious sample. Observed (I think) by Shuxin
	while implementing TestLoaders.

2005-05-31 00:29  mokhov

	* src/marf/math/Algorithms.java: Add $Id: ChangeLog,v 1.5 2006/02/26 23:42:30 mokhov Exp $ and a <p> tag.

2005-05-31 00:26  mokhov

	* src/marf/gui/: Spectrogram.java, SpectrogramPanel.java,
	WaveGrapher.java, WaveGrapherPanel.java,
	util/ColoredStatusPanel.java, util/SmartSizablePanel.java:
	Primarily, expand imports. Add $Id: ChangeLog,v 1.5 2006/02/26 23:42:30 mokhov Exp $ where it was missing.

2005-05-31 00:22  mokhov

	* src/marf/FeatureExtraction/: FFT/FFT.java,
	MinMaxAmplitudes/MinMaxAmplitudes.java: Prepare for the next
	0.3.0-devel release. Specifically: In FFT replace too-specific
	reference to WAVLoader by more general SampleLoader given than the
	latter has the constant the former was referring to now. Implement
	toString() in MinMaxAmplitudes for further debugging.

2005-05-31 00:19  mokhov

	* src/marf/util/Arrays.java: Begin implementing new series of
	conversion methods from an array to a Vector -- arrayToVector(),
	which are not present in java.util.Arrays(). For now implement
	double[] -> Vector and int[] -> Vector. The implementation is not
	optimized.

2005-05-30 23:14  mokhov

	* src/: test.java, marf/Classification/NeuralNetwork/Layer.java:
	Add a stub for Neural Network Layer abtraction. Add it to the
	Revision Project.

2005-05-30 23:06  mokhov

	* src/test.java: Clean up unused/duplicate imports.

2005-05-30 15:25  mokhov

	* .classpath: Remove the extra output path for some reason set by
	Shuxin.

2005-05-30 09:53  mokhov

	* src/marf/Classification/Classification.java: Add missing import
	-- fell into the same pitfall again.

2005-05-30 09:51  mokhov

	* src/marf/: Storage/TrainingSet.java, util/MARFException.java,
	util/NotImplementedException.java: Correct formatting and some
	comments.

2005-05-30 09:25  susan_fan

	* .classpath, src/marf/Storage/SampleLoader.java,
	src/marf/Storage/TrainingSet.java,
	src/marf/util/InvalidSampleFormatException.java,
	src/marf/util/MARFException.java,
	src/marf/util/NotImplementedException.java: correct my mistake of
	getRevision().

2005-05-30 07:59  mokhov

	* src/marf/Classification/: Classification.java,
	ClassificationException.java, Distance/ChebyshevDistance.java,
	Distance/Distance.java, Distance/EuclideanDistance.java,
	Distance/MahalanobisDistance.java, Distance/MinkowskiDistance.java,
	Markov/Markov.java, NeuralNetwork/NeuralNetwork.java,
	NeuralNetwork/Neuron.java,
	RandomClassification/RandomClassification.java,
	Stochastic/Stochastic.java, Stochastic/ZipfLaw.java: Prepare
	Classification gang for the next 0.3.0-devel release. Specifically,
	Add debug() calls in Classification in dump()/restore() where
	oTrainingSet can be null or not null -- better be warned. Update
	javadoc comments in many places. Complete author/version/since tags
	for all classes. Add trailing periods where they were missing. Add
	missing @since for getRevision() API in places. Correct formatting
	and spacing in many places. Expand a few more imports. Trim
	trailing blanks. In NeuralNetwork artifically classify 2nd ID as +1
	from the 1st so they are not the same. This kludge will need be
	fixed at some point. In RandomClassification generate the filename
	based on preprocessing and feature extraction methods, so the
	training sets for it are clustered. Also, pick the minimum result
	from the two random results so that no two IDs are the same.
	Additionally, update toString() to display the filename. Apply more
	coding conventions in places. Remove redundant members present in
	the parent classes.

2005-05-29 20:20  mokhov

	* src/marf/Storage/TrainingSample.java: Should rethrow any
	IOException as StorageException.

2005-05-29 20:19  mokhov

	* src/marf/Classification/Classification.java: One more remnant
	setTrainingSetFile() call is gone.

2005-05-29 20:16  mokhov

	* src/marf/: Classification/Classification.java,
	Storage/TrainingSet.java: Get rid of setTrainingSetFile() API.

2005-05-29 20:10  mokhov

	* src/marf/Storage/TrainingSet.java: Get rid of remnant
	TrainingSetFile code and use what StorageManager provides.

2005-05-29 20:07  mokhov

	* src/marf/Storage/StorageException.java: Fix spelling of
	poException.

2005-05-29 20:05  mokhov

	* src/marf/Storage/ModuleParams.java: piModule should become
	piModuleType everywhere.

2005-05-29 20:03  mokhov

	* src/marf/Storage/StorageManager.java: Revert to the original
	coding of the default constructor and document why we do so --
	'this' has to exist before getClass() can be called.

2005-05-29 19:47  mokhov

	* src/marf/Storage/: Cluster.java, FeatureSet.java, IDatabase.java,
	ISampleLoader.java, IStorageManager.java, MARFAudioFileFormat.java,
	ModuleParams.java, Result.java, ResultSet.java, Sample.java,
	SampleLoader.java, StorageException.java, StorageManager.java,
	TrainingSample.java, TrainingSet.java, Loaders/SineLoader.java,
	Loaders/ULAWLoader.java: Prepare for the next 0.3.0-devel release.
	This includes: update of author/version/since javadoc comments,
	full documentation of StorageManager and IStorageManager, addition
	of the new API to IStorageManager/StorageManager of
	dump/restoreHTML/SQL() to fulfill the remaining constants
	enumeration.  Code clean up in Cluster, TrainingSet, and
	TrainingSample of removing extra imports/implements/data members,
	such as dump file name which already present in the parent classes.
	Also make the private data members protected in case there will be
	someone inheriting from these classes. Mark a few code TODO items.
	Clean up overall javadoc comments and add some missing parts and
	trailing periods that javadoc requires. Add INTERFACE_CODE_REVISION
	constants to IStorageManager, IDatabase, and ISampleLoader to
	maintain accessible code revision information as it is done for
	classes. Fix code formatting in places and trim trailing
	whitespace. Change a few Debug.debug() calls to
	System.err.println() to be always reported to the user
	independently on the debug flag in ModuleParams and other places. 
	Add missing @since tags for getRevision() API in a few older
	modules.  Make sure ResultSet is also Serializable, like Result or
	TrainingSet.  This commit makes some class structural changes (in
	particular to the TrainingSet class) that are likely to break
	previous training set dumps; retraining may be required. Apply some
	more coding conventions along the way.

2005-05-29 13:49  mokhov

	* src/marf/FeatureExtraction/LPC/LPC.java: Fix a bug in LPC I
	introduced when trying to optimze array updates replacing addition
	by simply copying. Revert that change.

2005-05-28 22:16  mokhov

	* src/marf/gui/: Spectrogram.java, WaveGrapher.java,
	util/ColoredStatusPanel.java, util/SmartSizablePanel.java: Update
	author/version/since tags and other javadoc comments.  Add trailing
	periods where they were missing. Apply coding conventions in
	places. Clean up formatting. All this in preparation to the next
	devel release.

2005-05-28 21:11  mokhov

	* src/: test.java, marf/gui/SpectrogramPanel.java,
	marf/gui/WaveGrapherPanel.java: Add two new GUI stubs for future
	containment of WaveGrapher and Spectogram. Add them to the Revision
	project.

2005-05-28 20:26  susan_fan

	* src/test.java: add import class and printout files

2005-05-28 18:59  susan_fan

	* src/marf/: MARF.java, Classification/Distance/Distance.java,
	Classification/Distance/MahalanobisDistance.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Preprocessing/FFTFilter/BandpassFilter.java, Storage/Cluster.java,
	Storage/FeatureSet.java, Storage/ModuleParams.java: Add import
	marf/util/Debug for the classes replaced Marf.debug() with
	Debug.debug()

2005-05-28 17:00  susan_fan

	* src/marf/: MARF.java, Classification/Distance/Distance.java,
	Classification/Distance/MahalanobisDistance.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Preprocessing/FFTFilter/BandpassFilter.java, Storage/Cluster.java,
	Storage/FeatureSet.java, Storage/ModuleParams.java,
	Storage/TrainingSet.java, gui/Spectrogram.java,
	gui/WaveGrapher.java: Replace MARF.debug() with Debug.debug()

2005-05-28 16:39  susan_fan

	* src/marf/: Storage/FeatureSet.java,
	Storage/MARFAudioFileFormat.java, Storage/ModuleParams.java,
	Storage/SampleLoader.java, Storage/StorageException.java,
	Storage/StorageManager.java, Storage/TrainingSample.java,
	Storage/TrainingSet.java, Stats/Observation.java,
	Stats/ProbabilityTable.java, Stats/StatisticalObject.java,
	Stats/WordStats.java, gui/Spectrogram.java, gui/WaveGrapher.java,
	math/Algorithms.java: Add getRevision()

2005-05-28 16:33  susan_fan

	* src/marf/util/: Arrays.java, ByteUtils.java,
	InvalidSampleFormatException.java, MARFException.java,
	NotImplementedException.java, SortComparator.java,
	comparators/FrequencyComparator.java,
	comparators/ResultComparator.java: add getRevision()

2005-05-28 13:17  mokhov

	* src/tools/revision-check.sh: Implement rudimentary check of
	missing printouts in test.java.

2005-05-28 12:56  mokhov

	* src/tools/revision-check.sh: Escape properly dots in expressions
	as they are treated as special characters otherwise causing
	filtering out a bit more than enough.  This gives us back
	ChebyshevDistance, per report from Shuxin.

2005-05-28 12:17  mokhov

	* src/tools/revision-check.sh: Account for # and ~ backup files.

2005-05-27 22:31  mokhov

	* doc/src/tex/apps.tex: Add (for now commented out) inputs for the
	three NLP apps. Commented out because I haven't completed work on
	them yet. This I think is not necessary for a -devel release.

2005-05-27 22:27  mokhov

	* src/marf/: Makefile, Classification/Makefile,
	Classification/Distance/Makefile, Classification/Markov/Makefile,
	Classification/NeuralNetwork/Makefile,
	Classification/RandomClassification/Makefile,
	Classification/Stochastic/Makefile, FeatureExtraction/Makefile,
	FeatureExtraction/Cepstral/Makefile, FeatureExtraction/F0/Makefile,
	FeatureExtraction/FFT/Makefile, FeatureExtraction/LPC/Makefile,
	FeatureExtraction/MinMaxAmplitudes/Makefile,
	FeatureExtraction/RandomFeatureExtraction/Makefile,
	FeatureExtraction/Segmentation/Makefile, Preprocessing/Makefile,
	Preprocessing/Dummy/Makefile, Preprocessing/Endpoint/Makefile,
	Preprocessing/FFTFilter/Makefile, Stats/Makefile,
	Stats/StatisticalEstimators/Makefile, Storage/Makefile,
	Storage/Loaders/Makefile, gui/Makefile, gui/util/Makefile,
	math/Makefile, nlp/Makefile, nlp/Collocations/Makefile,
	nlp/Parsing/Makefile, nlp/Parsing/GrammarCompiler/Makefile,
	nlp/Stemming/Makefile, nlp/util/Makefile, util/Makefile: Add
	Makefile placeholders throughout MARF directories.

2005-05-27 22:26  mokhov

	* src/marf/Storage/Database.java: Change @exception to @throws.

2005-05-27 21:41  mokhov

	* src/tools/make-test.sh: Add gmake/make test utility script.

2005-05-27 19:33  mokhov

	* src/marf/Classification/Classification.java: Use less clumsy
	instance method to determine file extension.

2005-05-27 19:32  mokhov

	*
	src/marf/FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java:
	Document what needs to be done to improve the performance of this
	feature extraction module.

2005-05-27 19:30  mokhov

	* src/marf/Classification/Distance/DiffDistance.java: Improve
	performance of the distance classifier again now its best
	peformance is better than other configurations with normalization
	and FFT.

2005-05-27 09:56  mokhov

	* src/marf/Classification/Distance/DiffDistance.java: Achieve the
	best case classification performance to be at least as good as
	other distance classifiers.

2005-05-27 00:54  mokhov

	* src/tools/revision-check.sh: Complete first revision check tool.

2005-05-26 20:02  mokhov

	* src/tools/revision-check.sh: Add initial version of the revision
	check tool to see if all the public classes were "inventoried" with
	getRevision().

2005-05-24 23:37  mokhov

	* src/marf/Classification/Distance/DiffDistance.java: Implement
	much more realistic diff-distance. There is one kludge in place --
	uncondtional sorting of the two vectors. Ideally, this should be
	avoided and work in a way similar to the diff Unix utility. The
	performance is yet to be tested. Document the code a little. This
	implementation requires more testing.

2005-05-24 23:33  mokhov

	*
	src/marf/Classification/RandomClassification/RandomClassification.java:
	Correct a possible bug that caused very frequent dupes in the
	results when oIDs.size() is 0. Add a kludge that guarantees the
	iSecondID is different from iFirstID. Rethink the decision of
	super(null) in the constructor for future pipelined processing.
	Make use of Debug.debug().  Add some more debug code and comments.
	Add new toString() method for internal textual representation.

2005-05-24 22:04  mokhov

	* src/marf/math/MathException.java: The entire class appeared in
	0.3.0, not just getRevision().

2005-05-24 21:49  mokhov

	* src/marf/math/Algorithms.java: Get rid of the
	FeatureExtractionException entirely and replace it with
	MathException.

2005-05-24 21:46  mokhov

	* src/marf/: FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/FFT/FFT.java, FeatureExtraction/LPC/LPC.java,
	Preprocessing/FFTFilter/FFTFilter.java, math/Algorithms.java:
	Finally, I bit the bullet and created an initial version of the
	marf.math.Algorithms class, which is a collection of a few
	important algorithms in MARF, such as LPC, FFT, Hamming, etc. This
	enables decoupling of algorithms and modules that use them as one
	algorithm might be used in several module types, e.g. the FFT
	algorithm is used in both preprocessing and feature extraction.
	This also reduces kludgy module coupling. Not all agorithms can be
	that easily split, but it's okay for now, and in the marf.math
	package we will collect most of our module-independent math.

2005-05-24 20:48  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	Cepstral/Cepstral.java, F0/F0.java, FFT/FFT.java, LPC/LPC.java,
	MinMaxAmplitudes/MinMaxAmplitudes.java,
	RandomFeatureExtraction/RandomFeatureExtraction.java,
	Segmentation/Segmentation.java: Implement backSynchronizeObject()
	API from StorageManager in FeatureExtraction, which allows
	previously unimplemented dump() and restore() to work for all
	feature extraction modules at least for DUMP_BINARY and
	DUMP_GZIP_BINARY cases. This is achieved by simply removing the
	unimplemented stubs in the concrete modules. Apply more coding
	conventions and clean up comments in few places along the way.
	NOTICE, the dump()/restore() of FE was not tested at the time of
	this commit.

2005-05-24 19:37  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	MinMaxAmplitudes/MinMaxAmplitudes.java: Apply coding conventions
	and clean up more comments. Document constants in MinMaxAmplitudes
	and raise their values for now to 50, to see if it helps.

2005-05-24 19:35  mokhov

	* src/marf/math/: Matrix.java, Vector.java: Perform additional
	minor clean up review.

2005-05-24 19:34  mokhov

	* src/marf/FeatureExtraction/FeatureExtractionException.java: Add
	all parent's constructors and clean up a bit.

2005-05-24 19:32  mokhov

	* src/: test.java, marf/math/MathException.java: Add MathException
	for future use and add it to the Revision Project.  Clean up
	formatting a bit more in test.java.

2005-05-23 23:29  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: While browsing commit
	diffs online, I have spotted a bug I inadvertedly introduced via
	copy-paste while applying naming conventions -- replaced one
	variable with another. This may account for the recent FFT
	breakage.

2005-05-23 23:27  mokhov

	* src/marf/Storage/StorageManager.java: Implement
	getDefaultExtension() instance menthod based on the current dump
	type. Begin documenting new StorageManager and applying coding
	conventions.

2005-05-23 23:24  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: GrammarCompiler.java,
	ProbabilisticGrammarCompiler.java: Apply a few more cosmetic fixes.
	Change a few error outputs to go to System.err.

2005-05-23 16:21  mokhov

	* src/marf/Storage/ISampleLoader.java: Correct spelling in
	comments.

2005-05-23 15:19  mokhov

	* src/: test.java, marf/Storage/Database.java,
	marf/Storage/IDatabase.java, marf/Storage/ISampleLoader.java,
	marf/Storage/MARFAudioFileFormat.java,
	marf/util/NotImplementedException.java: Make sure that IDatabase,
	Database, ISampleLoader, and MARFAudioFileFormat stubs compile. Add
	Database to the Revision Project. Adjust NotImplementedException to
	have a default constructor.

2005-05-23 14:47  mokhov

	* src/marf/Storage/Loaders/WAVLoader.java: Correct formatting.

2005-05-23 14:44  mokhov

	* src/Makefile: Teach makefile about
	marf/FeatureExtraction/MinMaxAmplitudes.

2005-05-23 14:42  mokhov

	* src/marf/Storage/ISampleLoader.java: Correct an error of not
	having a return type.

2005-05-23 14:26  mokhov

	*
	src/marf/Classification/RandomClassification/RandomClassification.java:
	Perform minor code clean up.

2005-05-23 14:24  mokhov

	* src/marf/: MARF.java, Storage/Sample.java,
	Storage/Loaders/AIFFCLoader.java, Storage/Loaders/AIFFLoader.java,
	Storage/Loaders/AULoader.java, Storage/Loaders/MIDILoader.java,
	Storage/Loaders/SNDLoader.java: Add stub loaders for Java-supported
	formats some of which we intend to implement for 0.3.0. These
	include AIFF, AIFFC, AU, SND, and MIDI.

2005-05-23 14:22  mokhov

	* src/marf/Storage/MARFAudioFileFormat.java: Add our own
	MARFAudioFileFormat as an extension of what Java provides as we
	intend to support more loaders. This is still a stub, to be
	implemented.

2005-05-23 14:20  mokhov

	* src/marf/Storage/Loaders/MP3Loader.java: Clean up code and
	comments a bit to use as a stub-template.

2005-05-23 14:18  mokhov

	* src/marf/Storage/Loaders/WAVLoader.java: Perform minor class
	comments clean up.

2005-05-23 14:16  mokhov

	* src/marf/Storage/: ISampleLoader.java, SampleLoader.java: In
	ananalogy to IStorageManager and as a good practice add
	ISampleLoader and move most of the abstract API to the interface
	and one shared constant.  Perform minor clean ups along the way.

2005-05-23 14:07  mokhov

	* src/marf/Storage/StorageManager.java: Apply more coding
	conventions and perpform some minor code clean up.

2005-05-23 14:05  mokhov

	* src/marf/Storage/: IDatabase.java, Database.java: Add initial
	stubs of IDatabase and Database modules -- an initial step to move
	subject database functionality into MARF from applications. 
	Inspired by SpeakersIdentDb.

2005-05-22 13:18  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: Rename
	MyErrorHandler to NeuralNetworkErrorHandler. Fix formatting a
	little more. Redirect some error output to System.err.

2005-05-22 13:14  mokhov

	* src/marf/Classification/Classification.java: Revert earlier
	decision of replacing save/loadTrainingSet() calls by
	dump()/restore() and document why it is wrong to do so. Discovered
	while doing full testing with all classifiers and NeuralNetwork
	failed.

2005-05-22 13:10  mokhov

	* src/marf/Storage/: StorageManager.java, TrainingSet.java:
	Refactor TrainingSet a bit my removing iDumpMode in favour of
	iCurrentDumpMode in StorageManager, and also by moving
	getDumpMode() and setDumpMode() to StorageManager, where they now
	naturally belong.  Some comment fixes along the way.

2005-05-21 14:40  mokhov

	* src/test.java: Add DiffDistance, MinMaxAmplitudes Correct
	formatting and ordering.

2005-05-21 14:40  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/Terminal.java: Correct
	formatting.

2005-05-21 14:40  mokhov

	* src/marf/MARF.java: Officially add RAW preprocessing,
	MIN_MAX_AMPLITUDES feature extraction, and DIFF_DISTANCE
	classification entries.  Expand imports at last. Mark MARF.DEBUG
	and MARF.debug() as deprecated. Begin use of Debug.debug() instead.
	Clean up obsolete / incorrect comments. Change "normalized" to
	"initial" WaveGraph name as it's no longer normalized upon
	construction.

2005-05-21 14:39  mokhov

	* src/marf/Classification/: Classification.java,
	Distance/ChebyshevDistance.java, Distance/DiffDistance.java: Update
	more comments. Adjust some code according to coding conventions.
	Add initial implementation of the DiffDistance classifier.

2005-05-21 14:38  mokhov

	* src/marf/FeatureExtraction/: FFT/FFT.java, LPC/LPC.java,
	MinMaxAmplitudes/MinMaxAmplitudes.java: Implement initial version
	of the MinMaxAmplitudes feature extraction.  Begin use of
	Debug.debug() in places instead of deprecated MARF.debug(). Format
	code a little more. Apply more coding conventions. Expand some
	unexpanded imports. Update javadoc comments overall.

2005-05-21 14:38  mokhov

	* src/marf/Preprocessing/: Preprocessing.java, Dummy/Dummy.java,
	Dummy/Raw.java, Endpoint/Endpoint.java, FFTFilter/FFTFilter.java,
	FFTFilter/HighFrequencyBoost.java, FFTFilter/HighPassFilter.java,
	FFTFilter/LowPassFilter.java: Work more on preprocessing and
	filters. Correct Raw to pass the poSample paramter to the super
	class.	Begin use of Debug.debug() in places instead of deprecated
	MARF.debug(). Format code a little more. Apply more coding
	conventions. Extract new API of sqrtHamming() in FFTFilter that was
	used there twice -- will eventually move to algos.  Correct
	HighFrequencyBoost.preprocess() to report changes properly. Correct
	normalize(int, int) to actually use the params in the code.

2005-05-21 14:38  mokhov

	* src/marf/util/: Arrays.java, Debug.java: Implement
	Arrays.sort(double[]). Add Debug.enableDebug().  Apply some more
	coding conventions.

2005-05-20 16:45  susan_fan

	* src/test.java: Cut unnecessary part of class.getName()

2005-05-20 03:00  susan_fan

	* src/: test.java, marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/FeatureExtractionException.java,
	marf/FeatureExtraction/Cepstral/Cepstral.java,
	marf/FeatureExtraction/F0/F0.java,
	marf/FeatureExtraction/FFT/FFT.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	marf/FeatureExtraction/Segmentation/Segmentation.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/Endpoint/Endpoint.java,
	marf/Preprocessing/FFTFilter/BandpassFilter.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/Preprocessing/FFTFilter/HighPassFilter.java,
	marf/Preprocessing/FFTFilter/LowPassFilter.java,
	marf/Storage/Loaders/MP3Loader.java,
	marf/Storage/Loaders/SineLoader.java,
	marf/Storage/Loaders/ULAWLoader.java,
	marf/Storage/Loaders/WAVLoader.java: Add Preprocessing,
	FeatureExtraction, and Loaders getRevision() in revision().

2005-05-20 01:42  susan_fan

	* src/test.java: make all println use .class.getName() inside
	revision() method.

2005-05-20 00:35  susan_fan

	* src/: test.java, marf/Preprocessing/PreprocessingException.java,
	marf/Stats/StatisticalEstimators/StatisticalEstimator.java,
	marf/nlp/util/NLPStreamTokenizer.java: Add classes into revision()
	method.

2005-05-20 00:13  susan_fan

	* src/marf/nlp/Parsing/: CompilerError.java,
	GenericLexicalAnalyzer.java, LexicalAnalyzer.java,
	LexicalError.java, SymDataType.java, SymTabEntry.java,
	SymbolTable.java, SyntaxError.java, Token.java, TokenSubType.java,
	TokenType.java, TransitionTable.java, GrammarCompiler/Grammar.java,
	GrammarCompiler/GrammarAnalyzer.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/GrammarElement.java,
	GrammarCompiler/GrammarTokenType.java,
	GrammarCompiler/NonTerminal.java,
	GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	GrammarCompiler/ProbabilisticGrammarTokenType.java,
	GrammarCompiler/ProbabilisticRule.java, GrammarCompiler/Rule.java,
	GrammarCompiler/SemanticToken.java, GrammarCompiler/Terminal.java:
	Add getRevision()

2005-05-19 19:57  mokhov

	* src/marf/Preprocessing/FFTFilter/HighFrequencyBoost.java:
	Implement HighFrequencyBoost more properly by re-normalizing only
	the part that's changed. Pull out hardcoded values of the default
	frequency cut-off and the base coefficient to constants. This is an
	incompatible change to the previous version of the class and has to
	be extensively tested.

2005-05-19 10:15  mokhov

	* src/marf/Preprocessing/Preprocessing.java: Update some javadoc
	comments and add getRevision().

2005-05-19 10:06  mokhov

	* src/marf/Preprocessing/: Preprocessing.java, Dummy/Raw.java:
	Document the two new API normalize(int) and normalize(int, int)
	methods, a flexible extension of the original normalize() method.
	Correct an off-by-one bug in normalize(int) at the last index. Add
	getRevision() API to Raw along the way.

2005-05-19 09:41  mokhov

	* src/marf/Preprocessing/Dummy/Raw.java: Disambiguate parent
	constructor call.

2005-05-19 08:22  mokhov

	* src/marf/: Classification/Distance/DiffDistance.java,
	Preprocessing/Preprocessing.java, Preprocessing/Dummy/Dummy.java,
	Preprocessing/Dummy/Raw.java,
	Preprocessing/FFTFilter/FFTFilter.java: Move normalize() call out
	of Preprocessing constructor due to induced inflexibility. Instead
	the derivatives must call it themselves. Implement Raw preprcessing
	module for experiments to bypass normalization.  Add a blank stub
	of DiffDistance classifier.

2005-05-19 08:10  mokhov

	*
	src/marf/FeatureExtraction/MinMaxAmplitudes/MinMaxAmplitudes.java:
	Add new blank stub for a new feature extraction module.  Will
	implement later/in school, so just not to forget.

2005-05-18 01:14  mokhov

	* doc/src/tex/report.bib: Convert all \bibitems to @books for now.

2005-05-17 23:58  mokhov

	* doc/src/tex/report.bib: Resync with my main Bibliography. Update
	some .cse URLs, correct some names, remove duplicate of marf, begin
	conversion of NLP \bibitems to proper @item entries.

2005-05-17 19:33  mokhov

	* src/test.java: In the Revision Project make slightly more proper
	name of fetching fully-qualified class names, a lot better than
	hardcoding them.

2005-05-17 18:56  mokhov

	* Makefile: Add backup files trimming in maintainer-clean. Add some
	verbosity in the install target.

2005-05-17 12:21  susan_fan

	* doc/src/tex/: apps.tex, test-wave-loader.tex: Complete a short
	description of test-wave-loader.tex.

2005-05-17 11:00  mokhov

	* src/marf/MARF.java: Add another preprcessing method:
	HIGH_PASS_BOOST_FILTER, which is implemented to use the new
	Preprocessing(Preprocessing) API. Correct some comments. Clean up
	extraneous exception handling since the methods such as train() or
	recognize() have been declared to throw MARFException, we just
	propagate them along.

2005-05-17 10:53  mokhov

	* src/marf/Storage/Sample.java: Correct naming of a parameter
	variable.

2005-05-17 10:45  mokhov

	* src/marf/Preprocessing/: Preprocessing.java, Dummy/Dummy.java,
	Endpoint/Endpoint.java, FFTFilter/BandpassFilter.java,
	FFTFilter/FFTFilter.java, FFTFilter/HighFrequencyBoost.java,
	FFTFilter/HighPassFilter.java, FFTFilter/LowPassFilter.java: Add a
	Preprocessing(Preprocessing) constructor and its derivatives to
	allow some preprocessing modules chaining in the form of "new
	HighFrequencyBoost(new HightPassFilter(poSample))". This allows
	implementing combinations of preprocessing modules. Correct initial
	max value of 0.0 to the absolute minimum Double.MIN_VALUE to avoid
	any possibilities of not getting the maximum right. In the
	FFTFilter add a new API of genereateResponseCoefficients() that
	derivatives must implement in order to create the multiplication
	coefficients for frequency respons and in the actual filters move
	the code that used to do that from their constructors to
	genereateResponseCoefficients().  Use an updated conding
	standards-compliant FFT API.  Correct some more javadocs.

2005-05-17 10:37  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: Expand imports. Apply
	coding conventions to the API.	Correct/update some javadocs.
	Format the code a little better in places.

2005-05-16 21:08  mokhov

	* src/marf/Storage/: IStorageManager.java, StorageManager.java:
	Clean up the IStorageManager code abit by removing redundant
	hangover-time declarations of 'static final' and 'abstract' that
	are implied in any interface type.  Clean up existing javadoc
	comments. Will need to document more. Push Serializable from the
	StorageManager class to the IStorageManager interface. Add mapping
	between serialization types and filename extensions. Expand some
	imports. Format code a little. Add getDefaultExtension() API to
	retrieve filename extension based on the dump type or ".unknown" if
	the type out of the range.

2005-05-16 21:02  mokhov

	* src/marf/Classification/: Classification.java,
	Distance/Distance.java: Remove the iDumpMode variable from
	Classification in favour of the iCurrentDumpMode in StorageManager.
	 Make use of the new API of getDefaultExtension() from
	StorageManager and not limit us only to ".gzbin" or ".csv".  Format
	code a little. Remove some dead code.  Update/correct comments in
	places.

2005-05-16 19:11  mokhov

	* TODO: Clean up Preprocessing section a bit and add the MIDI
	format to the TODO.

2005-05-16 13:36  mokhov

	* src/marf/Preprocessing/: Preprocessing.java, Dummy/Dummy.java,
	Endpoint/Endpoint.java, FFTFilter/BandpassFilter.java,
	FFTFilter/FFTFilter.java, FFTFilter/HighFrequencyBoost.java,
	FFTFilter/HighPassFilter.java, FFTFilter/LowPassFilter.java: Have
	the main Preprocessing(Sample) throwing PreprocessingException and
	propagate it further instead of catching all the exception itself. 
	This clean us some exception handling code in all preprocessing
	modules.  Apply coding conventions mosty to all of the
	Preprocessing.	Add version and author information of all of
	Preprocessing.	Document the code more and correct some outstanding
	javadoc comments.  Expand bulk imports to individual classes. This
	is preliminay cleanup commit before I begin work on so-called
	"preprocessing pipeline" that allows chain multiple preprocessing
	modules, one after another, before the sample gets delivered to the
	Feature Extraction department. This will make things like High-pass
	High Frequency Boost preprocessor possible.

2005-05-14 00:43  mokhov

	* TODO: Add TestLoaders and a few more TODOs for exsiting apps and
	modules.

2005-05-14 00:33  mokhov

	* doc/src/tex/: history.tex, intro.tex: Account for dangling
	history.tex and write up a tad bit more of the history.  Add Shuxin
	to the list of the current maintainers and re-arrange contact
	information a bit. Write more relevant stuff in the "What is MARF?"
	section.  This begins docs review and preparation for the next
	0.3.0-devel release.

2005-05-14 00:31  mokhov

	* TODO: Update TODO with things done and more TODO :).

2005-05-13 22:20  mokhov

	* src/Makefile: Correct some obsolete information in the Makefile. 
	Make sure COPYRIGHT is added in all jar builds.  Split the warning
	options into a separate variable and make provision for the
	unchecked exception for future fixing -- for now we'll have to live
	with them.

2005-05-13 21:59  mokhov

	* src/: test.java, marf/Storage/Cluster.java,
	marf/Storage/Result.java, marf/Storage/ResultSet.java: Clean up the
	Result code and document it. Make Result Serializable in case we
	want later dump it to the disk, as TrainingSet, Cluster, ResultSet
	are already Serializable. Advance the Revision Project to Result,
	ResultSet, and Cluster. Clean up some comments in Cluster along the
	way.

2005-05-12 11:40  mokhov

	* src/: test.java, marf/nlp/Collocations/ChiSquareTest.java,
	marf/nlp/Collocations/CollocationWindow.java,
	marf/nlp/Collocations/TTest.java,
	marf/nlp/Parsing/ClassSymTabEntry.java,
	marf/nlp/Parsing/CodeGenerator.java,
	marf/nlp/Parsing/CompilerError.java,
	marf/nlp/Parsing/FuncSymTabEntry.java,
	marf/nlp/Parsing/SemanticAnalyzer.java,
	marf/nlp/Parsing/SemanticError.java,
	marf/nlp/Parsing/VarSymTabEntry.java,
	marf/nlp/Stemming/Stemming.java, marf/nlp/Stemming/StemmingEN.java,
	marf/util/Logger.java: Advance Revision Project so that all .java
	files get compiled. This is the necessary minimum to do it from
	make as IDEs get the stuff compiled anyways. Have CompilerError be
	extension of MARFException to integrated compiler code further.
	Some cosmetic and javadoc improvements along the way.

2005-05-12 10:05  mokhov

	* src/: test.java, marf/Stats/Ngram.java,
	marf/Stats/StatsCollector.java,
	marf/Stats/StatisticalEstimators/GLI.java,
	marf/Stats/StatisticalEstimators/KatzBackoff.java,
	marf/Stats/StatisticalEstimators/MLE.java,
	marf/Stats/StatisticalEstimators/SLI.java,
	marf/Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	marf/Stats/StatisticalEstimators/Smoothing/AddOne.java,
	marf/Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	marf/Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	marf/Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	marf/util/comparators/RankComparator.java: Advance the Revision
	Project further -- add all stats. estimators, StatsCollector,
	Ngram, and RankComparator.

2005-05-11 10:18  mokhov

	* src/test.java: Certainly MARF did not exist in 1005, so correct
	that year and also fix a thinko of mine of throwing the
	RuntimeException regardless whether COPYRIGHT found or not.

2005-05-10 22:20  mokhov

	* src/test.java: Make sure we display the basic copyright if the
	.jar file doesn't have the COPYRIGHT file.

2005-05-10 18:34  mokhov

	* src/: test.java, marf/nlp/Parsing/Compiler.java,
	marf/nlp/Parsing/ProbabilisticParser.java,
	marf/nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java:
	Make sure most of the marf.nlp.Parsing gets compiled with make and
	add getRevision() API to some of the parsers/compilers along the
	way.  The former is needed for the ProbabilisticParsingApp to work.

2005-05-10 18:11  mokhov

	* COPYRIGHT: Add our URL.

2005-05-10 18:02  mokhov

	* src/: Makefile, test.java, marf/Storage/Sample.java,
	marf/gui/util/BorderPanel.java,
	marf/gui/util/ColoredStatusPanel.java,
	marf/gui/util/SmartSizablePanel.java, marf/math/Matrix.java,
	marf/math/Vector.java, marf/nlp/Parsing/Parser.java,
	marf/util/BaseThread.java, marf/util/Debug.java,
	marf/util/ExpandedThreadGroup.java, marf/util/FreeVector.java,
	marf/util/Matrix.java: Advance the Revision Project. Get rid of all
	useless code in test.java and add a lot more useful one. This
	includes a --copyright option, making constants for all options,
	splitting option-handling functionality into separate methods, and
	adding getRevision() API to test itself. For copyright, we attempt
	first extract it from the marf.jar file, if we do not succeed, just
	display a generic shorter one with the URL to MARF's website. Make
	sure that the Makfile adds the COPYRIGHT file into the .jar as
	well.
	
	Implement the getRevision() API for all the classes test was
	referencing before and also marf.math.Matrix.
	
	Clean up some comments in some of the visited classes by adding
	trailing periods, @version and @since tags, TODOs, and a few
	clarifications. Perform cosmetic clean up otherwise.

2005-05-10 14:12  mokhov

	* src/test.java: Expand imports. Advanced the Revision Project.
	Document the code more properly.

2005-05-09 12:42  mokhov

	* src/marf/Classification/Stochastic/ZipfLaw.java: Clean up imports
	a little and so the rest of the code. Remove the need for
	RandomFeaureExtraction, just call super(null) for now.

2005-05-09 12:38  mokhov

	* src/marf/Classification/Stochastic/MaxProbabilityClassifier.java:
	Document the code a little. Remove RandomFeatureExtraction kludge. 
	Clean up some imports. Invent the init() API and make sure both
	constructors call it.

2005-05-09 12:35  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: Add a
	kludge to cope with the 2nd best case as an indetical to the 1st
	for now. This should prevent ArrayIndexOutOfBoundsExceptions to be
	thrown around from the neural net. Do a light passage over the code
	and correcting some comments and style. Light application of coding
	conventions.

2005-05-09 11:50  mokhov

	* src/marf/Storage/ResultSet.java: Correct getRandomResult() to
	always pick from the original oResultSet vector, as no sorting is
	ever assumed. A similar fix was applied earlier to getRandomID(),
	but this one escaped, so correct it now. Discovered while running
	all of the testing.sh where RandomClassification was throwing
	NullPointerException.

2005-05-08 18:35  mokhov

	* manifest.mf: Make test.class inside marf.jar runnable as java
	-jar marf.jar [option] by providing the Class-Path in the manifest
	file.

2005-05-08 18:19  mokhov

	* src/marf/util/comparators/ResultComparator.java: Clean up code,
	imports, and javadoc comments. Document more.

2005-05-08 18:17  mokhov

	* src/marf/util/SortComparator.java: Clean up imports and javadoc
	comments. Document more.  Add more robust argument processing.

2005-05-08 18:12  mokhov

	* src/marf/util/Arrays.java: Implement sort(Object[], Comparator)
	wrapper we were lacking.  Clean up imports and javadoc comments.
	Document more.

2005-05-08 18:10  mokhov

	* src/marf/Storage/ResultSet.java: Fully fix and implement all the
	needed functionality of the ResultSet class so SpeakerIdentApp
	works as before WRT the 2nd best classification. This corrects
	picking IDs and results from an incorrect unsorted source for
	mostly minimum and average results (for max it worked fine).  More
	or less finalize the older API and implement some new API as well.
	Older API changes include: getMin() -> getMininumID(),
	getSecondMin() -> getSecondMininumID(), getMax() -> getMaximumID(),
	getSecondMax() -> getSecondMaximumID(), getMinResult() ->
	getMinimumResult(), getMaxResult() -> getMaximumResult().  The new
	API includes getAverageID(), getRandomID(), addResult(int, double),
	getAverageResult(), getRandomResult(), overridden toString() and
	a-la collections size().  Make use of our own Arrays for sorting. 
	getSecondClosestID() had a bug and was in fact same as getMin()/.
	It will have to be updated WRT to min/max desired closest result. 
	Clean up dead code.  Clean up imports and javadoc comments.
	Document more.	Clean up exception handling and make the code more
	robust when accepting input arguments.

2005-05-08 17:58  mokhov

	* src/marf/Classification/Stochastic/:
	MaxProbabilityClassifier.java, Stochastic.java, ZipfLaw.java: Make
	MaxProbabilityClassifier and ZipfLaw subclass Stochastic, which
	seems more logical of an approach a-la Distance-based classifiers.
	This is continuation of frameworking these two classifiers of the
	NLP origin into MARF.  Make full use of the new ResultSet. Change
	the default .bin extension to .gzbin for dump files.  Implement the
	getResult() API that picks a maximum (probability) result from the
	ResultSet.  Clean up dead code.  Clean up imports and javadoc
	comments.  Clean up exception handling.

2005-05-08 17:51  mokhov

	*
	src/marf/Classification/RandomClassification/RandomClassification.java:
	Make full use of the new ResultSet. Change the default .bin
	extension to .gzbin for dump files.  Implement the getResult() API
	that picks a random result from the ResultSet.	Clean up dead code.
	 Clean up imports and javadoc comments.  Clean up exception
	handling.

2005-05-08 17:39  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: Rename
	the outputEncoding constant to OUTPUT_ENCODING to comply with the
	coding standards. Implement the new getResult() API to pick the
	minimum result for now. Will have to be revised.  Clean up the code
	a bit and indentation.	Clean up imports and javadoc comments. 
	Clean up exception handling.

2005-05-08 17:34  mokhov

	* src/marf/Classification/Markov/Markov.java: Make Markov as an
	extension of Stochastic rather than directly Classification as it
	seems more of a Stochastic method.  Clean up imports and javadoc
	comments.

2005-05-08 17:24  mokhov

	* src/marf/Classification/Distance/MahalanobisDistance.java: Clean
	up javadoc comments and make the debug message more clear.

2005-05-08 17:21  mokhov

	* src/marf/Classification/Distance/Distance.java: Implement the new
	getResult() API to always return the minimum-distance result. 
	Clean up some code, javadocs, and imports.

2005-05-08 17:19  mokhov

	* src/marf/Classification/Classification.java: Get rid of the inner
	reference to Result entirely, as we are using now the ResultSet
	class. Make getResult() abstract in order to force the underlying
	modules to implement it. The reason is that a Result is essentially
	an ID and an observation. The observation can mean either
	probability or distance. In the former case we are interested in
	the maximum result as a classification outcome from the result set,
	and in the minimum in the latter case. There are other cases as
	well such as random or average (not used yet, but is there). 
	Change the dump/restore file extension from .bin to .gzbin to
	reflect the reality. The .bin will be reused for uncompressed
	binary data.  Clean up some code and more javadocs. Clean up some
	exception handling.

2005-05-08 17:12  mokhov

	* src/marf/MARF.java: Get rid of internal ResultSet entirely;
	instead rely on what Classification gives us. This is important now
	when getting a single result as a concrete Classification module
	has to decide whether it gives us a maximum (more probable, for
	Stochastic-based classifiers) probability, minimum distance (for
	Distance-based classifiers and most others), random (for random
	classification only), or otherwise. A the MARF's level we can no
	longer make such a decision.  Make MAX_FEATUREEXTRACTION_METHOD,
	MIN_FEATUREEXTRACTION_METHOD, MAX_CLASSIFICATION_METHOD, and
	MIN_CLASSIFICATION_METHOD public in case someone needs them like I
	did earlier for preprocessing methods.	Clean up more javadocs.

2005-05-08 01:05  mokhov

	* src/test.java: Was too fast with the previous commit. Add usage()
	and correct a few errors. Now it all works, soon all the useless
	code can be removed as soon as all the classes implement
	getRevision() and get added here.

2005-05-07 20:23  mokhov

	* src/: test.java, marf/MARF.java,
	marf/Classification/Classification.java,
	marf/Classification/ClassificationException.java,
	marf/Classification/Distance/ChebyshevDistance.java,
	marf/Classification/Distance/Distance.java,
	marf/Classification/Distance/EuclideanDistance.java,
	marf/Classification/Distance/MahalanobisDistance.java,
	marf/Classification/Distance/MinkowskiDistance.java,
	marf/Classification/Markov/Markov.java,
	marf/Classification/NeuralNetwork/NeuralNetwork.java,
	marf/Classification/NeuralNetwork/Neuron.java,
	marf/Classification/RandomClassification/RandomClassification.java,
	marf/Classification/Stochastic/MaxProbabilityClassifier.java,
	marf/Classification/Stochastic/Stochastic.java,
	marf/Classification/Stochastic/ZipfLaw.java,
	marf/util/OptionProcessor.java: Begin a so-called "Revision
	Project". In it, make test.java even more useful by outputting
	MARF's classes' revision information in the --verbose mode. Make
	full use of OptionProcessor there and accept options such as
	--help/-h, --version (was there previously) and --verbose. Add
	trial attempts of the getRevision() method to all Classification
	classes, later will expand to all. Massage more code and comments
	otherwise and remove trailing blanks.

2005-05-04 18:24  mokhov

	* src/marf/Classification/: Classification.java,
	ClassificationException.java, Distance/ChebyshevDistance.java,
	Distance/Distance.java, NeuralNetwork/NeuralNetwork.java,
	RandomClassification/RandomClassification.java,
	Stochastic/MaxProbabilityClassifier.java: Begin using ResultSet
	instead of Result in all Classification modules.  I preserved most
	of the older API except for Result.getSecondClosestID() via the
	ResultSet object. getSecondClosestID() is also now defined in
	ResultSet -- a collection of results. This code compiles well, but
	is *very* experimental and a thorough testing is required. There is
	still some dead leftover code that will be cleaned up during
	testing.  This is an incompatible change.
	
	Change protection status of iDumpMode in Classification to
	protected so the derivatives can play with it if the need to.
	
	Start integrating MaxProbabilityClassifier under the Classification
	framework. Document it a little and disactive obsolete code. 
	LangIdentApp still compiles.
	
	Add two MARFException-inherited constructors to
	ClassificationException, so it can take Exception object as an
	argument.
	
	Clean up imports in places.  Fix some javadoc comments in some
	related code.

2005-05-04 18:10  mokhov

	* src/marf/MARF.java: Begin using ResultSet instead of Result in
	MARF, which is a lot better and flexible way managing multiple
	results and specifically 2nd best. Preserve some of the older API
	of getting the best result out of the set and add new
	getResultSet() call. Update other methods that used Result member
	to use ResultSet. As a result remove the soResult member (actually
	replace it with soResultSet).  This is fundamental and incompatible
	change, hoepfully for the better.
	
	Lift private restrictions on constants MAX_PREPROCESSING_METHOD and
	MIN_PREPROCESSING_METHOD in case someone externally wants to use
	them.
	
	Massage javadoc comments according to the above changes as well as
	some minor editorialization.

2005-05-03 11:23  mokhov

	* doc/src/tex/: apps.tex, test-fft.tex: Remove RTF junk from
	test-filters.tex. Run dos2unix on it. Wrap long lines. Perform
	maginal editorialization. Add test-fft.tex to the report build.

2005-05-02 23:59  susan_fan

	* doc/src/tex/test-fft.tex: Add initial cut on the TestFFt app
	document.

2005-05-02 18:32  mokhov

	* doc/src/tex/test-lpc.tex: Complete a short description of
	TestLPC.

2005-05-02 18:08  mokhov

	* src/marf/Classification/Classification.java: Clean up imports and
	comments. Lift the 'private final' restriction on the
	getTrainingSetFilename() method and make it available for the
	derivatives to override if they need to. Will need to add ResultSet
	to the classification instead of Result, but this is a major change
	and requires some thought.

2005-05-02 17:42  mokhov

	* src/marf/FeatureExtraction/FeatureExtraction.java:
	Cleanup/correct comments and imports.

2005-05-02 17:35  mokhov

	* src/marf/Preprocessing/Preprocessing.java: Clean up/correct
	comments, imports, and the use of NotImplementedException.

2005-05-01 02:21  mokhov

	* src/marf/Storage/: SampleLoader.java, Loaders/MP3Loader.java,
	Loaders/SineLoader.java, Loaders/ULAWLoader.java,
	Loaders/WAVLoader.java: Update SampleLoader API to throw our own
	StorageException, just like StorageManager does it, instead of
	Exception. Update imports and correct/update comments along the
	way. Apply coding conventions.

2005-05-01 02:19  mokhov

	* src/Makefile: Include test.class into the .jar file.

2005-04-30 19:23  mokhov

	* src/marf/util/OptionProcessor.java: Greatly enhance the
	robustness and friendliness of the OptionProcessor.  Make the
	OptionProcessor(Hashtable) not take its argument if its null -- we
	don't want to deal too much with NullPointerExceptions all over. In
	addActiveOption() make sure the added option also becomes valid, as
	a set of all all active options should be a proper subset of the
	valid options.	Improve getOption() to cope with the situations
	when the requested option is either invalid, valid but not active,
	or simply isn't there.	Add a hint to the exceptions thrown in
	these two latter cases.  Add toString() API to report the inner
	state of the OptionProcessor object instnace for debugging. 
	Correct obsolete/incorrect comments. Comply with coding
	conventions.

2005-04-29 01:20  mokhov

	* doc/src/tex/data.tex: Fix a few ancient spelling and English
	mistakes. Add revision information.

2005-04-29 00:13  mokhov

	* doc/src/tex/apps.tex: Fix a typo in the comment.

2005-04-29 00:06  mokhov

	* doc/src/tex/: apps.tex, test-filters.tex: Complete first round of
	editorializing of the TestFilters section and make it compile.

2005-04-28 14:14  mokhov

	* src/marf/util/ExpandedThreadGroup.java: Some cosmetic clean up of
	trailing blanks.

2005-04-28 14:11  mokhov

	* src/marf/util/BaseThread.java: Add two more contructors to
	logically complement similar ones for ThreadGroup. The new
	constructors BaseThread(ExpandedThreadGroup, Runnable) and
	BaseThread(ExpandedThreadGroup, Runnable, String) add similat
	functionality with ExpandedThreadGroup.  The Runnable target was
	needed by the GIPSY, so I added these constructors for completness.

2005-04-28 09:31  mokhov

	* doc/src/styles/styles.tex: Add a few more usful commands ported
	from my thesis.

2005-04-28 09:30  mokhov

	* doc/src/tex/: apps.tex, test-filters.tex: Begin converting
	TestFilter's description to LaTeX (not done  yet, but don't want to
	hold at home). Include the section into the Applications chapter.
	Add revision.

2005-04-28 00:00  susan_fan

	* doc/src/tex/test-filters.tex: Add initial cut on the TestFilters
	app documentation

2005-04-27 08:52  mokhov

	* doc/src/tex/: apps.tex, report.tex, test-lpc.tex: Add a yet-mini
	Applications Chapter. Will elaborate as we go. When my NLP apps are
	in, they will add a lot of info in the manual.

2005-04-24 22:28  mokhov

	* src/marf/util/Logger.java: Add a Logger utility, borrowed from
	ChatIN. Logger can be a thread or just an object and allows
	redirection of STDIN, STDOUT, and STDERR in a variety of ways,
	including to the file and has a timestamp.

2005-04-24 22:26  mokhov

	* src/marf/util/ExpandedThreadGroup.java: Correct coding style and
	documentation of enumerate().

2005-04-24 17:33  mokhov

	* src/marf/nlp/Parsing/: ClassSymTabEntry.java, CodeGenerator.java,
	Compiler.java, CompilerError.java, FuncSymTabEntry.java,
	GenericLexicalAnalyzer.java, LexicalAnalyzer.java,
	LexicalError.java, Parser.java, ProbabilisticParser.java,
	SemanticError.java, SymDataType.java, SymTabEntry.java,
	SymbolTable.java, SyntaxError.java, Token.java, TokenSubType.java,
	TokenType.java, TransitionTable.java, VarSymTabEntry.java,
	GrammarCompiler/Grammar.java, GrammarCompiler/GrammarAnalyzer.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/GrammarElement.java,
	GrammarCompiler/GrammarTokenType.java,
	GrammarCompiler/NonTerminal.java,
	GrammarCompiler/ProbabilisticGrammarTokenType.java,
	GrammarCompiler/ProbabilisticRule.java, GrammarCompiler/Rule.java,
	GrammarCompiler/SemanticToken.java: Make a light passage passage
	over javadoc comments in nlp.Parsing.* by correcting some English
	and adding trailing periods and removing incorrect javadocs. This
	alone should eliminate a lot of javadoc warning when generating API
	reference pages. At some point I will *REALLY* need to revisit all
	this compiler code and refactor it.

2005-04-24 17:01  mokhov

	* src/marf/gui/util/BorderPanel.java: Apply coding conventions.
	Document the class. Make sure the border is created in all cases.
	Treat null border title as empty string.

2005-04-24 16:45  mokhov

	* src/marf/util/BaseThread.java: Add a constructor that accepts
	just a name as an argument. Proved to be useful in GIPSY.

2005-04-23 18:17  mokhov

	* src/marf/Storage/Loaders/: MP3Loader.java, SineLoader.java,
	ULAWLoader.java: In SineLoader make writeAudioData() more robust
	and resistant to an invalid input. Improve javadoc comments and put
	trailing periods where necessary as javadoc requires.

2005-04-20 00:22  mokhov

	* src/marf/Storage/Sample.java: Make sure we can still compile with
	Java 1.4.

2005-04-16 18:53  mokhov

	* src/marf/Storage/Loaders/SineLoader.java: Correct wrong comment.

2005-04-16 18:49  mokhov

	* src/marf/Storage/Loaders/SineLoader.java: Make sure we don't
	choke on non-existent files by overriding some assumptions made by
	the SampleLoader when having a filename as an argument.

2005-04-16 17:48  mokhov

	* src/marf/: MARF.java, Storage/Sample.java,
	Storage/SampleLoader.java, Storage/Loaders/SineLoader.java,
	Storage/Loaders/WAVLoader.java: Implement a testing dummy "loader"
	that simply loads a sine wave into a sample. Since the sine wave
	was popularly used by our apps, it's seems like a worthy test
	module that complies with the SampleLoader interface. Now, all the
	apps should be using this for test waves.  The addition prompted to
	do some review of the related code in other classes and correct
	javadoc comments and API. Sample class got new setSampleSize() call
	and some of the WAVLoader's constants were pushed up to the
	SampleLoader class as they are used now also by the SineLoader.
	Make more code compliant with the coding conventions.

2005-04-03 19:48  mokhov

	* doc/src/tex/report.bib: Synch Bibliography with my master copy.
	Re-arrange GIPSY stuff, add Dijkstra and other references.

2005-04-03 01:44  mokhov

	* src/marf/MARF.java: Was too quick with the previous commit and
	omitted a few unchanged places with variable renaming. Fix that and
	also replace Header with Id, Revision, and Date.

2005-04-03 01:41  mokhov

	* src/marf/MARF.java: Fix a bug when setting any other
	preprocessing method than Dummy (normalization) would throw an
	exception. It was there for quite some time and I noticed it just
	now when running SpeakerIdentApp against 0.3.0-devel-20040614... 
	Too bad such an obvious error's gone there untested :-(. Need to
	make another -devel release soon enough with this correction. Also,
	while there correct javadoc comments so javadoc emits less warnings
	about missing "." for the first sentence. Additionally, apply
	coding conventions to all class variables.

2005-04-02 19:43  mokhov

	* src/marf/Classification/NeuralNetwork/Neuron.java: Lay down a
	path towards Neuron being a thread to maximaze parallel evaluation
	of the network when possible. This commit just adds stubs and
	imports and corrects javadocs.

2005-04-02 16:33  mokhov

	* src/marf/gui/util/: BorderPanel.java, ColoredStatusPanel.java,
	SmartSizablePanel.java: Massage gui.util code as it's being used in
	some outside apps.  Add all parent's constructors to BorderPanel as
	some apps require it.  Will need to do more corrections and
	code-fixing as well as documentation in the very near future.

2005-04-02 16:30  mokhov

	* manifest.mf: Add some Bundle-* headers with Eclipse.

2005-03-27 02:16  mokhov

	* doc/src/tex/legal.tex: Update years.

2005-03-24 01:23  mokhov

	* Makefile, manifest.mf, src/Makefile: Improve the Build System by
	including the NetBeans project files into the distro and use our
	new manifest.mf file in the Makefile build. Fill in some meaningful
	contents in the manifest.

2005-03-23 23:12  mokhov

	* src/test.java: Make sure the dummy code never actually executes
	for nothing.

2005-03-21 15:10  susan_fan

	* build.xml, manifest.mf, nbproject/genfiles.properties,
	nbproject/project.properties, nbproject/project.xml: Add NetBeans
	project files to the Build System

2005-03-21 03:19  mokhov

	* src/marf/util/NotImplementedException.java: Add a constructor
	that takes object and method name and derives message from it. Fix
	javadocs. This is essentially a sync with GIPSY sources, which got
	this class of mine derived.

2005-03-20 20:59  mokhov

	* src/marf/util/BaseThread.java: Add forgotten trailing period.

2005-03-20 20:56  mokhov

	* src/marf/util/OptionProcessor.java: Document OptionProcessor.
	Clean up imports.

2005-03-20 20:36  mokhov

	* src/marf/util/: BaseThread.java, ExpandedThreadGroup.java:
	Complete/fix javadoc comments in ExpandedThreadGroup. Add $Id: ChangeLog,v 1.5 2006/02/26 23:42:30 mokhov Exp $ in
	BaseThread.

2005-03-20 20:20  mokhov

	* src/marf/util/BaseThread.java: Fix/complete javadoc documentation
	of BaseThread.

2005-03-20 19:58  mokhov

	* src/marf/util/FreeVector.java: Document all of the FreeVector
	with javadocs.	Add all parent's constructors. Fix a few typos. 
	Add TODOs.

2005-03-20 12:46  mokhov

	* TODO: Expand THE APPS section of TODO inspired by recent
	conversation with Shuxin.

2005-03-17 01:39  mokhov

	* src/Makefile: Make sure javadoc picks up marf.util.comparators
	and marf.Stats.SatisicalEstimators.  Make sure the distro dir
	exists in sub-make.

2005-03-16 19:54  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Classification/Stochastic/ZipfLaw.java, Stats/Ngram.java,
	Stats/ProbabilityTable.java, Stats/WordStats.java,
	Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	Storage/ResultSet.java, util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java,
	util/comparators/ResultComparator.java: Complete basic source code
	integration of NLP-related/induced changes. This commit corrects
	remaining compile issues after the SF staff imported Take II of the
	ex-NLP sources. All of the references to MARF, Arrays, Stats.*.*,
	StorageException and some unimplemented chunks have been adjusted.
	MARF now compiles entirely again. Now we can start working on
	cleaning up the integrated code, documenting and testing. Then,
	prepare and integrate the NLP-related apps, but first make sure
	thant nothing that worked before broke. Remove unused imports and
	add some more javadocs.

2005-03-15 02:02  mokhov

	* doc/src/tex/report.bib: Sync Bibliography with my master one. Add
	MARF itself :-) and a few other refs.

2005-03-14 13:39  mokhov

	* src/marf/: Classification/Distance/Distance.java,
	Classification/Stochastic/Stochastic.java,
	FeatureExtraction/LPC/LPC.java, nlp/Parsing/ClassSymTabEntry.java,
	nlp/Parsing/FuncSymTabEntry.java, nlp/Parsing/LexicalAnalyzer.java,
	nlp/Parsing/SymbolTable.java, nlp/Parsing/Token.java,
	nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/Terminal.java: Fix one more undetected
	compile error in ProbabilisticGrammarCompiler related to recent
	StorageManager changes, i.e. dump() and StorageException
	propagation.  Clean up a pack of unused imports. Clean up many
	places in nlp.Parsing that used instance variable to access static
	members.

2005-03-13 15:32  mokhov

	*
	src/marf/nlp/Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java:
	Access static members using class name instead of instance name,
	per Java's recommendation.

2005-03-13 15:29  mokhov

	* src/marf/: Classification/Classification.java,
	nlp/Parsing/Compiler.java, nlp/Parsing/ProbabilisticParser.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	nlp/Stemming/StemmingEN.java, util/Matrix.java: Fix more Debug- and
	NLP-integration-related errors, reported by Eclipse.  Also fix a
	bit more more javadocs. All the other errors are to be resolved
	when SF staff puts the pertinent files directly to the repository.

2005-03-13 00:15  mokhov

	* src/test.java: Make sure OptionProcessor builds. Will need to
	actually make use of it in test.

2005-03-12 22:44  mokhov

	* src/marf/: Classification/Classification.java,
	Classification/Distance/Distance.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/NeuralNetwork/Neuron.java,
	Classification/RandomClassification/RandomClassification.java,
	Classification/Stochastic/Stochastic.java,
	FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/Cepstral/Cepstral.java,
	FeatureExtraction/F0/F0.java, FeatureExtraction/FFT/FFT.java,
	FeatureExtraction/LPC/LPC.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	FeatureExtraction/Segmentation/Segmentation.java,
	Preprocessing/Preprocessing.java, Preprocessing/Dummy/Dummy.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/HighFrequencyBoost.java,
	Preprocessing/FFTFilter/HighPassFilter.java, Storage/Result.java,
	Storage/StorageException.java, Storage/StorageManager.java,
	Storage/TrainingSet.java, gui/Spectrogram.java,
	gui/WaveGrapher.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	util/MARFException.java: Peform major rewrite of Storage-related
	business. A IStorageManager is the interface now, and
	StorageManager its most common implementation all concrete storage
	managers must obey. In passing fix some javadocs and oldes DOS
	EOLs. This is Phase II of the NLP integration. Fix a few errors in
	the compiler related to static vars that prevented it from
	compilations as reported by Shuxin. Only part remains, is to
	physically add to the repository missing part of the integration. 
	This includes the IStorageManager, ResultSet, Stats classes
	(including StatisticalEstimators), some Classification.Stochastic.
	This will be done through SF, in Phase III of NLP integration. Then
	follow the apps.  Current fresh checkout will be broken, but the
	stuff compiles locally here (though not all the modules tested).

2005-03-12 20:30  mokhov

	* src/marf/Classification/Stochastic/MaxProbabilityClassifier.java:
	Advance towards integration with MARF.

2005-03-12 19:53  mokhov

	* src/marf/: Classification/Stochastic/ZipfLaw.java,
	Stats/Observation.java, Stats/WordStats.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	util/comparators/FrequencyComparator.java: Take final decision on
	placement of WordStats, Observation, and Ngram under marf.Stats.

2005-03-12 19:30  mokhov

	* src/marf/Stats/ProbabilityTable.java: Move ProbabilityTable to
	Stats.

2005-03-12 19:04  mokhov

	* src/marf/: Stats/ProbabilityTable.java, Storage/ResultSet.java:
	Apply more missed integration word. Nearly ready.

2005-03-12 18:59  mokhov

	* src/marf/util/comparators/: FrequencyComparator.java,
	RankComparator.java, ResultComparator.java: Apply final decision
	that specific sort comparators move to marf.util.comparators.

2005-03-12 18:51  mokhov

	* src/marf/Stats/StatisticalEstimators/: GLI.java,
	KatzBackoff.java, MLE.java, SLI.java, StatisticalEstimator.java,
	Smoothing/AddDelta.java, Smoothing/AddOne.java,
	Smoothing/GoodTuring.java: Apply final decision that
	StatisticalEstimators move under Stats.

2005-03-12 18:47  mokhov

	* src/marf/Stats/StatisticalEstimators/: GLI.java,
	KatzBackoff.java, MLE.java, SLI.java, StatisticalEstimator.java,
	Smoothing/AddDelta.java, Smoothing/AddOne.java,
	Smoothing/GoodTuring.java, Smoothing/Smoothing.java,
	Smoothing/WittenBell.java: Advance integration of
	SatisticalEstimators with MARF.

2005-03-12 18:09  mokhov

	* src/marf/: Stats/StatisticalObject.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java,
	util/comparators/ResultComparator.java: Advance closer to MARF
	integration package-wise.  The comparator gang should probably move
	to util or elsewhere, but they don't belong to Stats.  The
	StatisticalObject should obviously remain in Stats.

2005-03-12 17:58  mokhov

	* src/marf/: Stats/Ngram.java, Stats/Observation.java,
	Stats/ProbabilityTable.java, Stats/WordStats.java,
	Storage/ResultSet.java: Advance adaptation to MARF. Not final yet.

2005-03-12 14:46  mokhov

	* src/: test.java, marf/nlp/Parsing/LexicalAnalyzer.java,
	marf/nlp/Parsing/Parser.java,
	marf/nlp/Parsing/TransitionTable.java,
	marf/nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	marf/nlp/Parsing/GrammarCompiler/GrammarCompiler.java: Make sure
	the Debug-related code in Parser, LexicalAnalyzer, TransitionTable,
	GrammarAnalyzer, and GrammarCompiler compiles, per gripe from
	Shuxin.  Update some outdated/incorrect javadoc comments and make
	them more standard-compliant.

2005-03-02 00:12  mokhov

	* src/marf/nlp/Stemming/Stemming.java: Class defining an abstract
	method should be abstract. Per report from Shuxin.

2005-03-01 09:16  mokhov

	* src/marf/Storage/Result.java: Begin integration of MARF and NLP
	Storage.

2005-03-01 09:14  mokhov

	* src/marf/Storage/: IStorageManager.java, ResultSet.java: On the
	road of integration of NLP and MARF's Storage.	Preliminary touch
	ups.

2005-02-27 13:43  mokhov

	* src/: test.java, marf/util/Debug.java: Take care of the variable
	rename fully obeying coding conventions.  Make sure Debug is
	compilable :), per gripe from Shuxin.

2005-02-27 13:29  mokhov

	* src/marf/nlp/Parsing/: Compiler.java, LexicalAnalyzer.java,
	Parser.java, ProbabilisticParser.java, TransitionTable.java,
	GrammarCompiler/GrammarAnalyzer.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/ProbabilisticGrammarAnalyzer.java: Rename all
	CPMCDebug to Debug, per report from Shuxin.  One will have to add
	missing import marf.util.Debug where appropriate.

2005-02-27 13:18  mokhov

	* src/: test.java, marf/util/FreeVector.java: Make sure FreeVector
	and marf.util.Matrix compile. Fix another round of copy-paste and
	other mistakes. Per report from Shuxin.

2005-02-27 13:07  mokhov

	* src/marf/nlp/Stemming/Stemming.java: Abstract and final modifiers
	are not allowed together. Fix another piece of a yet-dead code. I
	really need to add makefiles all over to make sure they get to
	compile all classes and this sort of errors do not reccur :( Per
	report from Shuxin.

2005-02-26 19:59  mokhov

	* doc/src/tex/: intro.tex, notation.tex, results.tex, sources.tex:
	Fix two spelling mistakes, per report from Shuxin. Also spell out
	Intro as Introduction to be a bit more formal. Add \index{} entries
	to the introductory material. Also fix/add revision information in
	the scope where it was missing/incorrect. Fix the tild in the
	formatting section to appear in the document (as it was not
	properly escaped).

2005-02-26 15:47  mokhov

	* doc/src/tex/report.bib: Sync with my master bibliography.

2005-02-25 16:06  mokhov

	* src/marf/nlp/: Collocations/ChiSquareTest.java,
	Parsing/SemanticAnalyzer.java, Stemming/StemmingEN.java: Fix a few
	more apparent bogus places in the newly imported code that were not
	caught earlier -- typos and mispellings in the class names not
	corresponding to the file names and vice versa. Strangely enough we
	only see them now.

2005-02-25 15:56  mokhov

	* src/marf/util/FreeVector.java: Fix bogus parameter propagation.
	We really need tests for this and Matrix class to make sure the
	code works.

2005-02-25 15:50  mokhov

	* src/marf/util/: FreeVector.java, Matrix.java: Fix a couple of
	idiocracies in the apparently broken code :(

2005-02-25 15:25  mokhov

	* src/Makefile: GrammarCompiler is under nlp.Parsing, not nlp.

2005-02-25 15:23  mokhov

	* src/Makefile: Uh, nlp/ itself doesn't have any .java files, so
	javadoc fails.

2005-02-25 14:56  mokhov

	* src/Makefile: Add nlp/* to MARFDIRS so javadoc can find new
	stuff.	Keep test.class in marf*.jar files in distro, so there is
	somthing runnable and the apps can use it to test the version.	Fix
	copyright year.

2005-02-23 20:40  mokhov

	* doc/src/tex/: Makefile, report.tex: Remove draft mode in the
	report. Update coopyright year in the makefile.

2005-02-23 14:01  mokhov

	* TODO: Update TODO WRT NLP and the Build System.

2005-02-23 13:00  mokhov

	* src/marf/MARF.java: Extract enumerations of N-gram models and
	Statistical Estimators into separate interfaces. This is an alpha
	API which is a huge subject to change as the rest of the NLP stuff
	gets imported.

2005-02-22 20:01  mokhov

	* src/marf/Storage/IStorageManager.java: Rename
	StorageManagerInterface to IStorageManager per coding conventions.

2005-02-22 18:58  mokhov

	* src/marf/MARF.java: Begin integration of my NLP sources into
	MARF. This particular change makes the used-to-be stanalone
	NLP.java file a part of the MARF.java as an inner class, so
	everything is brokered through MARF now. There won't bee too many
	commits related to the NLP integration as some CVS files (,v) with
	their existing histories will be directly added to the repository.

2005-02-22 18:54  mokhov

	* TODO: Add legend about what TODO entries mean. Clarify or expand
	some of the TODOs (very few) after a long time not being updated.

2005-02-22 17:35  mokhov

	* src/marf/nlp/Parsing/: ClassSymTabEntry.java, CodeGenerator.java,
	Compiler.java, CompilerError.java, FuncSymTabEntry.java,
	GenericLexicalAnalyzer.java, LexicalAnalyzer.java,
	LexicalError.java, Parser.java, ProbabilisticParser.java,
	SemanticAnalyzer.java, SemanticError.java, SymDataType.java,
	SymTabEntry.java, SymbolTable.java, SyntaxError.java, Token.java,
	TokenSubType.java, TokenType.java, TransitionTable.java,
	VarSymTabEntry.java, GrammarCompiler/Grammar.java,
	GrammarCompiler/GrammarAnalyzer.java,
	GrammarCompiler/GrammarCompiler.java,
	GrammarCompiler/GrammarElement.java,
	GrammarCompiler/GrammarTokenType.java,
	GrammarCompiler/NonTerminal.java,
	GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java,
	GrammarCompiler/ProbabilisticGrammarTokenType.java,
	GrammarCompiler/ProbabilisticRule.java, GrammarCompiler/Rule.java,
	GrammarCompiler/SemanticToken.java, GrammarCompiler/Terminal.java:
	Fix package names to include the compiler code under MARF. This
	this needed for Natural Language parsing to work. Remove DOS EOLs
	from some files.

2005-02-22 16:42  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Update package info
	for integration into MARF.

2005-02-22 16:41  mokhov

	* src/marf/nlp/Stemming/: Stemming.java, StemmingEN.java: Update
	package names for integration into MARF.

2005-02-22 16:40  mokhov

	* src/marf/nlp/Collocations/: ChiSquareTest.java,
	CollocationWindow.java, TTest.java: Change package to
	marf.nlp.Collocations for integration.

2005-02-22 16:35  mokhov

	* src/marf/util/: Debug.java, FreeVector.java, Matrix.java,
	OptionProcessor.java, SortComparator.java: Update the package to be
	marf.util for integration.

2005-02-15 04:32  mokhov

	* doc/src/tex/report.bib: bibtext doesn't seem to like @ inside a
	comment in the .bib file.

2005-02-10 13:59  mokhov

	* Makefile: Enhance maintainer-clean target, so it really cleans
	all of it.

2005-02-10 13:14  mokhov

	* COPYRIGHT, Makefile: Update copyright year.

2005-01-25 02:25  mokhov

	* doc/src/tex/report.bib: Update bibliography with my new items
	from 3D advanced rendering and animation.

2004-11-18 02:50  mokhov

	* Makefile: 
	Make sure the bin/ dir is removed with maintainer-clean. The dir is
	created by Eclipse or JBuilder.

2004-10-31 23:55  mokhov

	* doc/src/tex/Makefile: 
	Add .bbl and .blg extensions of files to be removed in
	maintainer-clean mode. Apparently, these were long-time missed out.

2004-10-31 23:47  mokhov

	* src/Makefile: 
	Since we dropped 1.3.* support, remove kludgery associated with
	extension dirs for JAXP (that's built-in in JDK 1.4 +).

2004-10-31 23:46  mokhov

	* src/test.java: 
	Add SmartSizablePanel and ColoredStatusPanel instances to test
	whether they can compile in MARF.

2004-10-31 23:42  mokhov

	* src/marf/gui/util/SmartSizablePanel.java: 
	Forgot a semicolon in package name.

2004-10-31 23:35  mokhov

	* src/marf/gui/util/: ColoredStatusPanel.java,
	SmartSizablePanel.java: 
	Add SmartSizablePanel and ColoredStatusPanel GUI utility classes
	off my GWCC project of year 2000... Will need to adjust them
	according today's standards. Remove DOS EOLs.

2004-08-06 17:30  mokhov

	* src/marf/util/Arrays.java: Add some comments and TODO items while
	at it.

2004-08-06 17:17  mokhov

	* src/marf/util/ByteUtils.java: Document existings methods.

2004-08-05 17:26  mokhov

	* src/marf/: MARF.java, Storage/TrainingSet.java,
	util/ByteUtils.java: Add a couple more functionw to ByteUtils to
	convert an int to byte[] and a String to byte[]. Clean up a bit a
	couple TODO items elsewhere.

2004-08-03 23:30  mokhov

	* src/marf/Storage/StorageManager.java: Add _SQL and _HTML options
	we might consider implementing one day.

2004-08-03 23:29  mokhov

	* src/marf/Storage/Result.java: Fix error handling using Java way
	with exceptions.

2004-06-16 20:42  mokhov

	* Makefile, TODO, marf.spec: Add initial, untested version of the
	RPM .spec file.

2004-06-13 13:11  mokhov

	* Makefile: Bump copyright to 2004.

2004-06-10 19:13  mokhov

	* src/marf/: Storage/Loaders/WAVLoader.java, util/ByteUtils.java:
	Add ByteUtils to convert some common data types (such as String,
	int, and short for the time being) from a raw array of bytes. Make
	use of one of these routines in WAVLoader.java. Others are used
	elsewhere and might become useful for MARF when I get around to add
	NLP stuff. Clean up WAVLoader a bit along the way.

2004-06-10 14:26  mokhov

	* src/test.java: Make sure we can test for BaseThread and
	ExpandedThreadGroup as well as for BorderPanel. This insuress
	addition of the corresoponding .class files to the tarball. This
	may also fix the javadoc issues for those classes not appearing in
	the API spec.

2004-06-10 13:34  mokhov

	* src/Makefile: Re-add marf/util to the dirs omitted by mistake.
	Add marf/gui/util.

2004-06-10 01:23  mokhov

	* README: Document more contents of this dir.  Reformat README a
	little.

2004-06-06 10:35  mokhov

	* TODO: Light passage over TODO.

2004-05-30 02:40  mokhov

	* doc/src/tex/: conclusions.tex, fft-filter.tex, intro.tex,
	nnet.tex, report.bib: Update the Bibliography from my common
	source.  Add \cite's along the way for all preious entries to
	re-appear.

2004-05-24 20:44  mokhov

	* doc/src/tex/: Makefile, references.tex, report.bib: Build
	Bibliography properly. Merge it with my global one.  Need to
	reference more our past bibitems in the text for them to re-appear
	in the Bibliography section. This addition will allow to use any
	bibitems in the future as we see fit, the unused ones won't show
	up. This will also ease up Bibliography maintenance.

2004-05-24 19:52  mokhov

	* src/marf/math/Matrix.java: Commit uncommitted comments.

2004-05-21 01:12  mokhov

	* TODO: Put a blank.

2004-05-03 18:14  mokhov

	* src/: test.java, marf/MARF.java, marf/util/Arrays.java: Document
	a bit more Arrays.java.  Add boundaries check for the valid range
	of preprocessing, feature extraction, and classification methods.

2004-05-03 17:18  mokhov

	* src/marf/MARF.java: Add synonyms or aliases for Chebyshev
	distance for those who are used to other frequently-used names of
	the same concept.

2004-04-28 15:08  mokhov

	* src/marf/gui/util/BorderPanel.java: Add some initial code for the
	gui.util package.

2004-04-21 15:57  mokhov

	* src/marf/util/: BaseThread.java, ExpandedThreadGroup.java: Test
	and make them actually work. Needed an extra Vector to hold
	references to the added threads to be able to start() them within a
	group, else ThreadGroup.enumerate(threads[]) would return 0
	enumerted threads if none has started yet :-(, so we take 'em from
	the vector. This couples a bit BaseThread and ExpandedThreadGroup,
	but makes ExpandedThreadGroup more like a group. Add a few more
	constructors to the BaseThread mimicking those of Thread a long the
	way since these may be useful, but constructors are not inherited.
	Need to polish a bit more and add a few extra comments still.

2004-04-21 13:37  mokhov

	* src/marf/util/BaseThread.java: Add a few extra accessors and make
	siNextTID protected rather than public.  Modify the
	BaseThread(piTID) constructor to reset the sequencing of the follow
	up TIDs based on piTID. This is *not* a backwards-incompatible
	change *unless* one always relies on TIDs start from 1 regardless
	whatever piTID is.

2004-04-20 14:49  mokhov

	* Makefile, src/Makefile: Add dev. version. Will release more often
	that way.

2004-04-20 13:58  mokhov

	* src/marf/util/: BaseThread.java, ExpandedThreadGroup.java: Add
	thread utility classes, as extension of Thread and ThreadGroup of
	java.lang. Planned to be used in GUI and some algos that are
	naturally parallel (eg. NeuralNetwork and actually most of them).

2004-04-20 12:38  mokhov

	* src/marf/: MARF.java, Classification/Classification.java,
	Classification/Distance/ChebyshevDistance.java,
	Classification/Distance/EuclideanDistance.java,
	Classification/Distance/MinkowskiDistance.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/RandomClassification/RandomClassification.java,
	Classification/Stochastic/Stochastic.java,
	FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/Cepstral/Cepstral.java,
	FeatureExtraction/F0/F0.java, FeatureExtraction/FFT/FFT.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	FeatureExtraction/Segmentation/Segmentation.java,
	Preprocessing/Dummy/Dummy.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/BandpassFilter.java,
	Storage/FeatureSet.java, Storage/Sample.java,
	Storage/StorageManager.java, Storage/TrainingSet.java,
	gui/WaveGrapher.java, math/Matrix.java: Perform some clean up: rid
	of unused imports, add @author in places, split some long lines
	with throws in them. Fix a bug in TrainingSet:
	setPreprocessingMethod() was setting the member variable to itself.

2004-04-20 12:09  mokhov

	* .classpath, .project: Add Eclipse project files.

2003-12-13 13:25  mokhov

	* src/marf/math/Matrix.java: Next round of revision. Mostly
	comments.

2003-09-01 16:07  mokhov

	* src/marf/math/Matrix.java: Implement isNearlyIdentity() methods
	of Matrix to be able to cope with the situations when matrices are
	almost identity but not exactly due to errors with floating-point
	arithmetic.

2003-08-31 22:20  mokhov

	* src/marf/math/Matrix.java: Put loadRow() back in since Arrays'
	copy() is now working.

2003-08-31 11:58  mokhov

	* src/marf/math/: Matrix.java, Vector.java: Apply coding style
	guide. Clean up and document the code a little. Disallow operators
	returning a new matrix object when multiplying or dividing a matrix
	by a constant. Those who need a copy, clone() it before hand. Not
	sure whether that should still apply to matrix muplitplication,
	addition, substracion with another matrix...

2003-08-31 01:35  mokhov

	* src/marf/: MARF.java, math/Matrix.java: Since super.clone() does
	a shallow copy of the object we don't want that, so perform our own
	clone() implementation with 'deep' cloning.  This was a cause of a
	subtle bug making transpose() not working (matrix was becoming
	symmetrical simply because we operated on the same exact object).

2003-08-27 21:54  mokhov

	* src/marf/math/Matrix.java: Avoid extra method calls.

2003-08-27 21:47  mokhov

	* src/marf/: math/Matrix.java, util/Arrays.java: Fix Array's copy()
	and improve it's performance a bit.  Matrix source code
	improvements for testing.

2003-08-27 18:47  mokhov

	* src/marf/math/Matrix.java: Add operation of division of a matrix
	by a scalar.

2003-08-27 18:29  mokhov

	* src/marf/Classification/: Classification.java,
	Distance/MahalanobisDistance.java: Cosmetix fixes. Review before
	begin the implementation of train() for MahalanobisDistance.

2003-08-22 13:22  mokhov

	* src/marf/Storage/: Cluster.java, FeatureSet.java,
	TrainingSample.java, TrainingSet.java: Move cluster-specific
	functionality to Cluster.java (recomputation of the mean); yet not
	complete. Make more appropriate and uptodate comments after the
	split. Apply in part coding standards guide.  Logically re-arrange
	the code in places.

2003-08-22 11:04  mokhov

	* src/marf/Storage/StorageException.java: Fix omission that we
	belong to the marf.Storage package.

2003-08-22 10:54  mokhov

	* src/marf/Storage/StorageException.java: Add StorageException for
	the Storage package. This is to be consistent with other modules,
	such as Preprocessing, FeatureExtraction, and Classification.

2003-08-22 10:41  mokhov

	* src/Makefile: Make sure the newer .java files are noticed and
	older .class files are not used. This will ensure that if there
	were any actual changes to any of the .java files, recompile will
	happen and javac won't pick up any existing but older .class files
	for linking.  This is not the best way of doing it, but the
	simplest so far.  A better way would be to have a Makefile per
	directory.

2003-08-16 22:00  mokhov

	* src/marf/Storage/FeatureSet.java: Vacuum major dust.

2003-08-16 21:45  mokhov

	* src/marf/: Classification/Distance/Distance.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Storage/Cluster.java, Storage/FeatureSet.java,
	Storage/TrainingSample.java, Storage/TrainingSet.java: Implement
	first step of the FeatureSet stuff . What was TrainingSample within
	TrainingSet is now ripped out and put into CLuster.java because
	that's what it essentially is -- a cluster with the mean and
	everyhting.  TrainingSample.java has a common superset of what the
	Cluster is using and extending from. FeatureSet is yet to be
	finished, but essentially it is what TrainingSet used to be when
	Steve first implemented it.  FeatureSet is needed for those
	classifiers that play with features instead of clusters, such as
	MahalanobisDistance. Update places where clusters are being used
	(Distance and NeuralNetwork).  Of course, this, and subsequent
	changes will require retraining.

2003-08-16 19:16  mokhov

	* src/marf/Storage/TrainingSet.java: Excplicitly indicated
	IOException. For consistency.

2003-08-16 18:57  mokhov

	* src/marf/Storage/TrainingSet.java: Add two missing cases in
	dump() so that it doesn't erroneously report unknown dump mode.

2003-08-16 16:54  mokhov

	* TODO, src/test.java: Spelling fixes in comments and TODO.
	Long-time forgotten commit.

2003-07-16 19:23  mokhov

	* .cvsignore: Add .cvsignore to remove annoying varning of certain
	files that are generated but never added to the CVS.

2003-07-16 19:21  mokhov

	* marf.jpx: Update JBuilder project files with JBuilder 8.

2003-07-01 11:12  mokhov

	* README, TODO: Update TODO with my PDA version and somewhat fresh
	ideas.	Fix a typo in README and make web update script more
	robust.  Hopefully.

2003-06-23 11:35  mokhov

	* src/marf/util/Debug.java: Rename class CPMDebug to Debug. Add
	class' javadoc.  Make use of 'final'

2003-06-03 18:29  mokhov

	* doc/src/tex/Makefile: Add *.ind *.ilg to maintainer-clean

2003-06-03 18:22  mokhov

	* doc/src/tex/: intro.tex, notation.tex, sources.tex: Account for
	notation.tex and sources.tex. Remove most of the traces to its PG
	origine. Still requires quite some tweaking.

2003-06-02 15:57  mokhov

	* doc/src/tex/cvs.tex: Update CVS URL.

2003-05-30 17:45  mokhov

	* TODO: Update TODO WRT recent docs changes.

2003-05-30 17:44  mokhov

	* doc/src/tex/storage.tex: Fix few typos.

2003-05-30 17:13  mokhov

	* doc/src/tex/: Makefile, methodology.tex, report.tex, storage.tex,
	toc.tex: Update doc Makefile to capture all the *.tex files in the
	dependencies. Split out the date built. Add makeindex call.  Revise
	toc.tex for the TOC to have Roman numbers. Change report title to
	MARF and Applications. Add section /Revisisons/ in places. 
	Cosmetic and wording changes otherwise.

2003-05-30 15:01  mokhov

	* doc/src/tex/: f0.tex, feature-extraction.tex, lpc.tex,
	report.tex: Account for dangling f0.tex. Add a couple of index
	entries.  Remove for now the draft mode.

2003-05-30 14:01  mokhov

	* TODO: Update TODO for F0

2003-05-21 18:00  mokhov

	* doc/src/tex/: appendix.tex, cvs.tex: Fix Appendix sectionning.

2003-05-21 17:32  mokhov

	* doc/src/tex/hamming.tex: Fix a formula (proper left brace and
	formatting)

2003-05-06 23:50  mokhov

	* TODO: Add a tiny idea of graphing % vs. samples used, etc,

2003-05-06 20:33  mokhov

	* src/marf/Storage/TrainingSet.java: Make dump mode transient, so
	that it's not stored as it is reduntant.

2003-05-06 10:58  mokhov

	* src/marf/Classification/Distance/MahalanobisDistance.java: Clean
	up Mahalanobis Distance. It's proven now it's working correctly
	using raw Matrix operations according to the distance definition.
	TODO: learning of the Covariance Matrix (i.e. override train())

2003-05-05 21:32  mokhov

	* doc/src/tex/cvs.tex: Replace -z9 with -z3. Looks like the most
	common and reasonable compromise.

2003-05-05 10:30  mokhov

	* TODO: Add few more thoughts... mostly on integration of my NLP
	package and some util stuff. Also still thinking about Storage
	issues of TrainingSet, in particular it might have to be able to
	operate in two modes: the ancient raw features kept as well as
	their means.  Right now we just have means of our clusters.

2003-05-04 18:00  mokhov

	* src/marf/util/InvalidSampleFormatException.java: Extend from
	MARFException.

2003-05-04 16:37  mokhov

	* TODO: Add new ideas and some fixes in the TODO.

2003-05-04 16:36  mokhov

	* src/test.java: To test whether marf.math.Vector compiles.

2003-05-04 16:35  mokhov

	* src/marf/Classification/Distance/MahalanobisDistance.java: Make
	MahalanobisDistance to fully use Matrix as 'prescribed'.  For large
	sets of features run-time maybe large and increases exponetially.
	Next step: to implement leardning of the covariance matrix.

2003-05-04 16:34  mokhov

	* src/marf/math/Matrix.java: Fix matrix to fully adapt it to use in
	MahalanobisDistance.  Add more comments and contructors. Still need
	to create a testing app for this and the Vector classes.

2003-05-04 16:32  mokhov

	* src/marf/math/Vector.java: Add initial version of
	marf.math.Vector. Like Matrix, was conversted from the same C++
	code. So far remains unused (except test.java), but eventually we
	might need it.

2003-05-02 20:13  mokhov

	* src/marf/: Classification/ClassificationException.java,
	FeatureExtraction/FeatureExtractionException.java,
	Preprocessing/PreprocessingException.java: Make existing module
	exceptions to inherit from MARFException as it seems to be more
	useful in the future of debugging and error reporting.	The work on
	the exceptions isn't over yet --- need all the constructors and so
	on.

2003-05-02 17:23  mokhov

	* src/marf/Classification/: Classification.java,
	Distance/Distance.java, Distance/MahalanobisDistance.java: Few
	cosmetic/preparatory updates: comments, remove/change unnecessary
	imports.

2003-04-29 13:32  mokhov

	* src/marf/: math/Matrix.java, util/Arrays.java: Cosmetic fixes:
	comments and indentation.

2003-04-29 12:35  mokhov

	* src/marf/: Classification/Distance/MahalanobisDistance.java,
	math/Matrix.java, util/Arrays.java: Make math.Matrix to compile and
	to be integrated into MARF (MahalanobisDistance).

2003-04-29 02:02  mokhov

	* src/marf/: math/Matrix.java, util/Arrays.java: Get rid of more
	C++ code and advance Matrix implementation farther. Add supportive
	operations to Arrays that are needed by the Matrix.

2003-04-29 00:07  mokhov

	* src/marf/math/Matrix.java: A bit more lexically correct java
	code.

2003-04-28 23:38  mokhov

	* src/: Makefile, marf/math/Matrix.java: Remove nlp temporarely
	since there are no *.java files in there yet.  Update Matrix.java
	to be able to be parsed by javadoc and remove DOS EOLs.

2003-04-28 22:59  mokhov

	* src/Makefile: Make the Makefile be aware of the new math and nlp
	packages.

2003-04-28 22:03  mokhov

	* TODO: Update TODO with few more ideas and forgotten items.

2003-04-28 12:12  mokhov

	* src/marf/math/Matrix.java: Add initial, still not working,
	implementation of the math matrix operations, converted from my
	graphics project written in C++.  Some mem. management issues to be
	resolved but almost done. DOes not affect compilation yet since is
	not used anywhere for now.

2003-04-28 12:05  mokhov

	* src/marf/: FeatureExtraction/FFT/FFT.java,
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	util/Arrays.java: Make it actually use marf.util.Arrays and compile
	at the same time :-) Apparently java.util.Arrays does not allow to
	subclass itself, so had to mimic some of the operations of the
	common use...

2003-04-28 11:24  mokhov

	* src/marf/util/FreeVector.java: Comment updates.

2003-04-28 11:22  mokhov

	* src/marf/util/Arrays.java: Add an extension to java.util.Arrays
	to handle copying of array portions. This class is far from
	complete and provides only three methods to handle double arrays (a
	subset of). Planned to be used in linear argebra matrix
	computations.

2003-04-27 19:33  mokhov

	* src/marf/util/: FreeVector.java, Matrix.java: Add FreeVector
	implementattion (that grows on demand).  Implement most of the
	n-dimensional free matrix.

2003-04-21 16:18  mokhov

	* doc/src/tex/data.tex: Fix speaker information: list correct
	testing sample file for Ying Lu and update speaker contribution
	table.

2003-04-20 02:27  mokhov

	* doc/presentation.ppt,
	src/marf/Classification/Distance/Distance.java,
	src/marf/Preprocessing/Preprocessing.java,
	src/marf/Preprocessing/FFTFilter/FFTFilter.java: Old uncommitted
	cosmetical updates: more comments, code structure updates, guarding
	against division by zero in Preprocessing.normalize(), add one more
	constant for frequnecy response size to be used by default.

2003-04-18 18:42  mokhov

	* TODO: Update TODO with few old and somewhat fresh ideas.

2003-04-16 17:54  mokhov

	* src/marf/Storage/StorageManager.java: Fix a class name typo
	(missing trainling 'r'). Makes me wonder how it managed to sneak it
	and was unnoticed for so long...

2003-04-14 01:17  mokhov

	* doc/src/tex/probabilistic-parsing-app.tex: RC1

2003-04-14 01:04  mokhov

	* doc/src/tex/probabilistic-parsing-app.tex: Beta 3: Clean-up
	grammar from comments. Update report with few more grammatical
	errors fixed and cosmetical fixes.

2003-04-14 00:33  mokhov

	* doc/src/tex/probabilistic-parsing-app.tex: Beta 2: spell check.

2003-04-13 23:52  mokhov

	* doc/src/tex/pparsing-sample-run.tex,
	doc/src/tex/probabilistic-parsing-app.tex,
	src/marf/nlp/Parsing/ProbabilisticParser.java: Next to final
	version of the report and the application.

2003-04-13 16:38  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Fix batch testing,
	mssing %EOLs in grammar and the fail-fast approach in the parser.

2003-04-13 14:01  mokhov

	* doc/src/tex/probabilistic-parsing-app.tex: Further works on the
	report.

2003-04-13 01:30  mokhov

	* doc/src/tex/pparsing-sample-run.tex,
	doc/src/tex/probabilistic-parsing-app.tex,
	src/marf/nlp/Parsing/ProbabilisticParser.java: Advancing report.
	Corresponding changes to Makefile and the testing.sh script. Add
	sample-run.tex stub. Clean-up some parser code along the way.

2003-04-12 23:17  mokhov

	* doc/src/tex/probabilistic-parsing-app.tex: Initial report
	clean-up.

2003-04-12 16:44  mokhov

	* src/marf/nlp/Parsing/: ProbabilisticParser.java,
	GrammarCompiler/Grammar.java, GrammarCompiler/GrammarCompiler.java:
	Add new sentences and a new (incomplete) grammar off the asmt
	requirements. Fix prob.. parser to fail fast on a terminal that is
	non in the grammar. Improve message reporting and few other
	cosmetic adjustments.

2003-04-12 00:04  mokhov

	* src/marf/nlp/Parsing/: ProbabilisticParser.java,
	GrammarCompiler/Grammar.java,
	GrammarCompiler/ProbabilisticGrammarAnalyzer.java: Fix bug in CYK
	for the terminals belonging to differet LHS's of a rule.  Amend the
	extended grammar to make sure proper parses happen for pronouns
	which were ignored. Make StreamTokenizer case-sensitive to parse
	proper names and the pronoun 'I'. Add a couple of new test
	senteces.  Elswhere are cosmetic or supportive changes for the
	above.

2003-04-11 10:48  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Cosmetic changes.

2003-04-11 10:30  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: It's finally
	working! Fix parse() and dumpParseTree() to work properly.  Fix the
	original grammar to have proper probabilities for some cases (they
	were wrong due to a copy-paste mistakes). Massage the output a bit.

2003-04-11 08:25  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Still fighting
	dumpParseTree() with some progress.

2003-04-11 00:50  mokhov

	* src/marf/nlp/Parsing/: ProbabilisticParser.java,
	GrammarCompiler/Grammar.java: Fighting the parsing. ~1/3 success so
	far -- need to check indices in parse() and fix dumpParseTree()

2003-04-10 22:28  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: The second wave of
	bug-fixes. StorageManager has a default dump filename as the class
	name instead of an empty string. Makefile was missing the nlp dir.
	Some cosmetic fixes.

2003-04-10 21:42  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: GrammarCompiler.java,
	ProbabilisticGrammarAnalyzer.java,
	ProbabilisticGrammarCompiler.java,
	ProbabilisticGrammarTokenType.java: First wave of bug-fixing ---
	lotsa NullPointerExceptions and ClassCastExceptions have been fixed
	as well as some logical bugs returning invalid values and duplicate
	contstants.

2003-04-10 20:51  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Implement
	rudimentary dumpParseTree()... *crosses fingers*

2003-04-10 13:00  mokhov

	* src/marf/nlp/Parsing/: ProbabilisticParser.java,
	GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	GrammarCompiler/ProbabilisticGrammarCompiler.java: Implement
	dictionary word handling (DICT_WORD type).

2003-04-10 12:37  mokhov

	* src/marf/nlp/Parsing/: ProbabilisticParser.java,
	GrammarCompiler/Grammar.java: Essentially CYK is implemented and
	compiles. Grammar class had to be amended to include getRule(*)
	methods required by the CYK algorithm. Provide
	backSynchronizeObject() method in the StorageManager class, which
	is only to be overriden by the derivatives if they plan to use
	binary or gzipped binary formats.
	
	TODO: build and dump the parse tree.

2003-04-09 15:03  mokhov

	* src/marf/: nlp/Parsing/CompilerError.java,
	nlp/Parsing/GenericLexicalAnalyzer.java,
	nlp/Parsing/LexicalError.java, util/Debug.java,
	nlp/Parsing/SemanticError.java, nlp/Parsing/SymbolTable.java,
	nlp/Parsing/SyntaxError.java, nlp/Parsing/Token.java,
	nlp/Parsing/TokenSubType.java, nlp/Parsing/TokenType.java,
	nlp/Parsing/GrammarCompiler/Grammar.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/GrammarElement.java,
	nlp/Parsing/GrammarCompiler/GrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/NonTerminal.java,
	nlp/Parsing/GrammarCompiler/Rule.java,
	nlp/Parsing/GrammarCompiler/SemanticToken.java,
	nlp/Parsing/GrammarCompiler/Terminal.java: DOS EOL --> UNIX EOL

2003-04-09 11:47  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: GrammarAnalyzer.java,
	GrammarCompiler.java, ProbabilisticGrammarAnalyzer.java: Finish
	split of the GrammarAnalyzer's getNextToken(); provide initial
	implementation of ProbabilisticGrammarAnalyzer with the PROBABILIYT
	token type. May need the DICT_WORD token type as well. The code
	compiles cleanely but untested. Fix Makefile to include the /jcc
	subdir. files.	Cosmetic fixes in GrammarCompiler to improve
	readability.

2003-04-09 02:16  mokhov

	* src/marf/nlp/Parsing/: GenericLexicalAnalyzer.java,
	GrammarCompiler/GrammarAnalyzer.java: Cosmetic updates in
	GenericLexicalNaluyzer. Split getNextToken() in GrammarAnalyzer
	into several methods for some of them to be overriden by
	ProbabilisticGrammarAnalyzer.

2003-04-08 22:46  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java: Throw
	an exception for the dictionary words for now before the split.

2003-04-08 17:27  mokhov

	* src/marf/: nlp/Parsing/CompilerError.java,
	nlp/Parsing/LexicalError.java,
	nlp/Parsing/ProbabilisticParser.java, nlp/Parsing/SyntaxError.java,
	nlp/Parsing/GrammarCompiler/Grammar.java,
	nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticRule.java,
	Storage/IStorageManager.java: The app and the modules made compile.
	Need to rework GrammarAnaylzer's to work in the same style as
	GrammarCompilers - split into overridable methods the whole
	analyzis part.

2003-04-08 14:42  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Add
	dumpParseTree() stub and pseudocode of CYK parsing to be converted
	to actual code rather soon.

2003-04-08 13:39  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: Grammar.java,
	GrammarCompiler.java: Cosmetic fixes.

2003-04-08 13:37  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Rudiment
	implementation of train() as compiling the Grammar.  Minor
	advancements towards parsing itself.

2003-04-06 15:20  mokhov

	* src/marf/:
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	Storage/IStorageManager.java: Update StrorageManager to implement
	all the operations of the newly added StorageManagerInterface
	(ex-StorageManager)

2003-04-06 14:58  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: GrammarCompiler.java,
	ProbabilisticGrammarCompiler.java: More structured GrammarCompiler
	and implemented Probabilistic one.

2003-04-05 22:13  mokhov

	* src/marf/nlp/Parsing/GrammarCompiler/: GrammarTokenType.java,
	ProbabilisticGrammarTokenType.java: Fix comments in
	GrammarTokenType and add new token type

2003-04-05 16:55  mokhov

	* src/marf/: nlp/Parsing/ClassSymTabEntry.java,
	nlp/Parsing/CodeGenerator.java, util/Debug.java,
	nlp/Parsing/Compiler.java, nlp/Parsing/CompilerError.java,
	nlp/Parsing/FuncSymTabEntry.java,
	nlp/Parsing/GenericLexicalAnalyzer.java,
	nlp/Parsing/LexicalAnalyzer.java, nlp/Parsing/LexicalError.java,
	nlp/Parsing/Parser.java, nlp/Parsing/SemanticAnalyzer.java,
	nlp/Parsing/SemanticError.java, nlp/Parsing/SymDataType.java,
	nlp/Parsing/SymTabEntry.java, nlp/Parsing/SymbolTable.java,
	nlp/Parsing/SyntaxError.java, nlp/Parsing/Token.java,
	nlp/Parsing/TokenSubType.java, nlp/Parsing/TokenType.java,
	nlp/Parsing/TransitionTable.java, nlp/Parsing/VarSymTabEntry.java,
	nlp/Parsing/GrammarCompiler/Grammar.java,
	nlp/Parsing/GrammarCompiler/GrammarAnalyzer.java,
	nlp/Parsing/GrammarCompiler/GrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/GrammarElement.java,
	nlp/Parsing/GrammarCompiler/GrammarTokenType.java,
	nlp/Parsing/GrammarCompiler/NonTerminal.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarAnalyzer.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticGrammarCompiler.java,
	nlp/Parsing/GrammarCompiler/ProbabilisticRule.java,
	nlp/Parsing/GrammarCompiler/Rule.java,
	nlp/Parsing/GrammarCompiler/SemanticToken.java,
	nlp/Parsing/GrammarCompiler/Terminal.java: Initial checkin of
	Grammar and CPMC a bit adapted to probabilistic parsing.

2003-03-27 21:50  mokhov

	* src/marf/util/Matrix.java: Add Matrix as extension of the Java
	Collection framework.

2003-03-27 19:22  mokhov

	* src/marf/nlp/Parsing/ProbabilisticParser.java: Add initial
	revision of the parser.

2003-03-19 21:54  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Proofread II: Ready To Print and Submit

2003-03-19 21:16  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Proofreading, take I

2003-03-19 20:34  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Mostly done.

2003-03-19 14:33  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Aumend report. Most notably all the results in the appendix filled
	in. Need to tweak formatting and some more blha before submit.

2003-03-19 00:45  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Initial addition of the results.

2003-03-18 09:14  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Make it read from STDING

2003-03-18 00:50  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Full bibliography. And the report is getting some shape already.

2003-03-17 23:47  mokhov

	* doc/src/tex/lang-ident-app.tex,
	doc/src/tex/probabilistic-parsing-app.tex,
	src/marf/Stats/StatisticalEstimators/Smoothing/Smoothing.java:
	Final code before submission. A lot of updates to the report, but
	still working on it.

2003-03-17 20:59  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Before grand
	clearence. Update tokenizer to non-restrictive

2003-03-17 08:32  mokhov

	* doc/src/tex/lang-ident-app.tex,
	doc/src/tex/probabilistic-parsing-app.tex,
	src/marf/nlp/util/NLPStreamTokenizer.java: Keeping on working.

2003-03-17 00:24  mokhov

	* doc/src/tex/lang-ident-app.tex,
	doc/src/tex/probabilistic-parsing-app.tex,
	src/marf/util/comparators/ResultComparator.java,
	src/marf/nlp/util/NLPStreamTokenizer.java,
	src/marf/util/OptionProcessor.java: Cosmtetic and msg clean up.
	Update languages as well.  Update report. Getting ready to submit.

2003-03-16 21:57  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Add Russian, bulagrian, Hebrew, and Italian. Update uniform corpra
	names for others.

2003-03-16 14:57  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Add PERL. Revision in the report. Create language bundles for CPP,
	PERL and JAVA

2003-03-16 14:45  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Update report and testing to try other stuff.

2003-03-16 11:35  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Playin around.

2003-03-16 00:39  mokhov

	* src/marf/: Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	nlp/util/NLPStreamTokenizer.java: Playing with corpora and
	tokenizer's settings.

2003-03-15 22:32  mokhov

	* doc/src/tex/lang-ident-app.tex,
	doc/src/tex/probabilistic-parsing-app.tex,
	src/marf/Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	src/marf/Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	src/marf/Stats/StatisticalEstimators/Smoothing/WittenBell.java:
	Implement missing uni- and tri-gram smoothing code.  Update
	language files. Clean up the code and the report a little.

2003-03-15 16:20  mokhov

	* src/marf/Stats/ProbabilityTable.java: Fix reporting for the
	tri-gram model. Need to implement smoothing for tri-gram and in
	some places for uni-gram models.

2003-03-15 15:37  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Storage/ResultSet.java, util/comparators/ResultComparator.java:
	Make finally whole classification process more or less work for
	unigram and bigram. More work needed for tri-gram models, and more
	languages and more testing. Also some aesthetics to be mocked. Fix
	sorting of the ResultSet as well providing an array to store sorted
	references.

2003-03-15 15:34  mokhov

	* src/marf/nlp/util/NLPStreamTokenizer.java: Add initial version of
	the custom NLP stream tokenizer to cope wiht resetting of the
	Reader's input stream as well as for smarter pushBack() and
	lowercase and other settings in the future.

2003-03-15 00:51  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	Stats/ProbabilityTable.java: Move P() from AddDelta up to
	StatisticalEstimator.  Have P() of ProbabilityTable use the
	getOccurence() "API".  Cosmetic fixes and experementation. TO FIX:
	Classifiers for some reasons get some probability values only for
	the first language in the list queried...

2003-03-15 00:15  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/ProbabilityTable.java: Make MaxProbClassifier to somewhat
	work and not null-except.

2003-03-14 22:18  mokhov

	* src/marf/Stats/: StatisticalEstimators/StatisticalEstimator.java,
	ProbabilityTable.java: Cosmetic. Add AR and CPP.

2003-03-14 14:45  mokhov

	* src/marf/Stats/StatisticalEstimators/StatisticalEstimator.java:
	Cosmetic

2003-03-14 14:42  mokhov

	* src/marf/Stats/: StatisticalEstimators/StatisticalEstimator.java,
	ProbabilityTable.java: Hoping to have fixed nullptr and out of
	bounds excepts for tri-grams.

2003-03-14 10:43  mokhov

	* src/marf/Stats/: StatisticalEstimators/Smoothing/AddDelta.java,
	ProbabilityTable.java: Mostly implement uni- and tri-gram models.
	Still to figure out options in the app to pass to NLP for the
	n-gram thing otherwise it sees only 0... :-(

2003-03-14 07:53  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Classification/Stochastic/ZipfLaw.java,
	nlp/Collocations/ChiSquareTest.java,
	nlp/Collocations/CollocationWindow.java,
	nlp/Collocations/TTest.java, Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalObject.java,
	Stats/StatisticalEstimators/Smoothing/AddOne.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java,
	util/comparators/ResultComparator.java, Stats/Ngram.java,
	Stats/Observation.java, Stats/ProbabilityTable.java,
	nlp/Stemming/Stemming.java, nlp/Stemming/StemmingEN.java,
	Stats/WordStats.java, Storage/ResultSet.java,
	util/OptionProcessor.java, util/SortComparator.java: A wholesale
	update: make the nlp package and re-order dirs a little bit. Add
	NLP class analogous to MARF -- will merge somehow.  "Package" a2 is
	gone.

2003-03-13 19:23  mokhov

	* src/marf/Stats/StatisticalEstimators/Smoothing/GoodTuring.java:
	Implement GoodTuring smoothing for bigrams.

2003-03-13 16:42  mokhov

	* src/marf/Stats/: StatisticalEstimators/Smoothing/AddDelta.java,
	StatisticalEstimators/Smoothing/WittenBell.java,
	ProbabilityTable.java: Implement WittenBell for bigrams.

2003-03-13 15:19  mokhov

	* src/marf/Stats/StatisticalEstimators/Smoothing/AddDelta.java:
	Finally fix smooth() - indices were misplaced in the call to
	setOccurence() -- they were in the reverse order. Now it starts
	making a whole a lot of sense!

2003-03-13 15:14  mokhov

	* src/marf/Stats/: StatisticalEstimators/Smoothing/AddDelta.java,
	ProbabilityTable.java: Now N[i] starts making some sense - there
	was an extra addition of itself.

2003-03-13 15:05  mokhov

	* src/marf/Stats/: StatisticalEstimators/Smoothing/AddDelta.java,
	ProbabilityTable.java: Fix incFrequency() to properpy update by 1. 
	Calculation N[] in AddDelta still needs revision -- numbers too big
	for the total occurences we've got...

2003-03-13 11:14  mokhov

	* src/marf/Stats/: ProbabilityTable.java,
	StatisticalEstimators/Smoothing/AddDelta.java: Mise a jour: clean
	up; trials for other than -add-delta options. MLE for some reason
	gives all NaNs .... need to revise.

2003-03-13 02:55  mokhov

	* src/marf/Stats/StatisticalEstimators/: StatisticalEstimator.java,
	Smoothing/AddDelta.java, Smoothing/Smoothing.java: Move train()
	implementation from AddDelta all the way up to StatisticalEstimator
	leaving AddDelta to implement smoot() only. Smoothing implements
	train() as well by calling the one from StatisticalEstimator as
	well as smooth() and dump() again.

2003-03-13 02:42  mokhov

	* src/marf/Stats/: StatisticalEstimators/Smoothing/AddDelta.java,
	ProbabilityTable.java: Fully implement get/setOccurence(x,y) and
	smooth() for AddDelta. Seems to work :-)

2003-03-12 23:37  mokhov

	* src/marf/Stats/: StatisticalEstimators/Smoothing/AddDelta.java,
	ProbabilityTable.java: Implement get/setOccurence(Vector) and
	pseudocode for smooth().  Need to implement get/setOccurence(y,x)
	now...

2003-03-12 16:08  mokhov

	* src/marf/Stats/ProbabilityTable.java: Improve storage
	requirements for stats collection initially by avoiding creation of
	Double(0.0)

2003-03-12 15:53  mokhov

	* src/marf/Stats/: ProbabilityTable.java,
	StatisticalEstimators/Smoothing/AddDelta.java: Replace
	insertElementAt() by setElementAt() in incFrequency(), so that rows
	of the Probability matrix don't exceed their actual token-index
	length.

2003-03-12 13:48  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Stats/ProbabilityTable.java, util/OptionProcessor.java: AddDelta
	training w/o smoothing seems to work.

2003-03-11 07:25  mokhov

	* src/marf/: util/comparators/ResultComparator.java,
	Storage/ResultSet.java: Add Result* stuff forgotten at the last
	commit.

2003-03-09 22:59  mokhov

	* src/marf/:
	Classification/Stochastic/MaxProbabilityClassifier.java,
	Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java,
	Classification/Stochastic/ZipfLaw.java,
	Stats/ProbabilityTable.java, util/OptionProcessor.java,
	util/SortComparator.java: Significant step: implemented rudimentary
	functionality for the whole process with serialization,
	probabilities, and so on and made it compile. Didn't run yet
	though.

2003-03-07 10:59  mokhov

	* src/marf/Classification/Stochastic/MaxProbabilityClassifier.java:
	Add classifier. update App

2003-03-07 08:50  mokhov

	* src/marf/Stats/: StatisticalEstimators/StatisticalEstimator.java,
	ProbabilityTable.java: Whatever ideas at home on Fri.

2003-03-06 22:48  mokhov

	* src/marf/Stats/: StatisticalEstimators/StatisticalEstimator.java,
	StatisticalEstimators/Smoothing/AddDelta.java, Observation.java,
	ProbabilityTable.java: Update: pseudocode for trainign and
	smoothing for AddDelta.

2003-03-06 21:04  mokhov

	* src/marf/Stats/Ngram.java: Update Ngram to be able to be actual
	Ngram and an ability to set/add portions of an n-gram.	Will need
	revision on boundaries check.

2003-03-06 20:29  mokhov

	* src/marf/Storage/: StorageManager.java, TrainingSet.java: Fix
	some bogus comments. Clean up a bit TrainingSet and make more case
	handling for DUMP_* modes. Far from complete.

2003-03-06 20:25  mokhov

	* src/marf/Stats/: StatisticalEstimators/StatisticalEstimator.java,
	StatisticalEstimators/Smoothing/AddDelta.java,
	StatisticalObject.java, Ngram.java, ProbabilityTable.java,
	WordStats.java: Add StorageManager support.

2003-03-06 18:25  mokhov

	* src/marf/Storage/StorageManager.java: Improve comments.

2003-03-06 18:17  mokhov

	* src/marf/Stats/StatisticalEstimators/: GLI.java,
	KatzBackoff.java, SLI.java, StatisticalEstimator.java,
	Smoothing/AddDelta.java: Add train()

2003-03-06 15:32  mokhov

	* src/marf/: Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	util/OptionProcessor.java: Make it ALL compile.

2003-03-06 14:55  mokhov

	* src/marf/util/OptionProcessor.java: Pushing further option
	processing and update script to be usable for A2.

2003-03-06 10:42  mokhov

	* src/marf/util/OptionProcessor.java: Update.

2003-03-06 09:09  mokhov

	* src/marf/: Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/StatisticalEstimator.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/AddOne.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Classification/Stochastic/ZipfLaw.java,
	Stats/StatisticalObject.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java, Stats/WordStats.java,
	nlp/Stemming/Stemming.java, nlp/Stemming/StemmingEN.java,
	util/OptionProcessor.java: Make it cmpile. At least initially. Set
	up pacahges.  Rearrange stuff bewteen ZipfLaw and LangIdentApp. 
	Update makefile to compile and clean properly. Initial cut on
	options.

2003-03-06 00:30  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Update the app to compile and report with new refs.

2003-03-06 00:29  mokhov

	* src/marf/util/OptionProcessor.java: Initial code for the
	OptionProcessor. Compiles.

2003-03-06 00:29  mokhov

	* src/marf/Stats/: Ngram.java, Observation.java,
	ProbabilityTable.java, WordStats.java: Steps towards compilable
	code: add package and import stuff.

2003-03-05 01:01  mokhov

	* doc/src/tex/report.tex: Trying draft mode.

2003-03-03 21:39  mokhov

	* doc/src/tex/: spectrogram.tex, wave-grapher.tex: Update section
	##.

2003-03-02 15:04  mokhov

	* doc/src/tex/: appendix.tex, architecture.tex,
	bandpass-filter.tex, chebyshev-distance.tex, classification.tex,
	conclusions.tex, cvs.tex, data.tex, euclidean-distance.tex,
	experimentation.tex, feature-extraction.tex, fft-filter.tex,
	fft.tex, gui.tex, hamming.tex, high-frequency-boost.tex,
	high-pass.tex, intro.tex, legal.tex, low-pass.tex, lpc.tex,
	mahalanobis-distance.tex, methodology.tex, minkowski-distance.tex,
	nnet.tex, noise-removal.tex, normalization.tex, preprocessing.tex,
	random-classification.tex, random-feature-extraction.tex,
	report.tex, results.tex, sampleloading.tex, storage.tex: Finally
	fix sectionning - the top level unit for the report style is
	\chapter{}, so that fixed those annoying 0.-prefixed section
	numbers.

2003-03-01 16:06  mokhov

	* doc/src/styles/styles.tex: Update LaTeX styles with \xt to
	reference tables, and \bestresult, to emphasize the best score so
	far.

2003-03-01 16:04  mokhov

	* doc/src/tex/: best-score.tex, conclusions.tex, results.tex,
	stats-date.tex, stats.tex: Update results after Ke and Emily were
	added.	The score now is down to 79.17. Add best-score.tex and
	stats-date.tex for almost automatic maintainance.  These files are
	produced by the app at the end, and are included via \input in
	docs.

2003-02-28 21:59  mokhov

	* doc/src/tex/data.tex: Add Emily. Fix name of Dr. Suen.

2003-02-28 11:55  mokhov

	* src/marf/Stats/StatisticalEstimators/Smoothing/AddDelta.java:
	AddDelta provides a method to query for delta -- getDelta() Fix
	comment.

2003-02-28 11:54  mokhov

	* src/marf/Stats/StatisticalEstimators/: MLE.java,
	StatisticalEstimator.java: MLE is in fact AddDelta with delta = 0. 
	Need for generic StatisticalEstimator to query for specific
	P(Ngram) based on the derivative.

2003-02-28 00:25  mokhov

	* src/marf/Stats/ProbabilityTable.java: Add normalize()

2003-02-28 00:00  mokhov

	* doc/src/tex/hamming.tex: The formula needs updating.

2003-02-27 23:59  mokhov

	* src/marf/: nlp/Collocations/ChiSquareTest.java,
	nlp/Collocations/CollocationWindow.java,
	nlp/Collocations/TTest.java, Stats/StatisticalEstimators/GLI.java,
	Stats/StatisticalEstimators/KatzBackoff.java,
	Stats/StatisticalEstimators/MLE.java,
	Stats/StatisticalEstimators/SLI.java,
	Stats/StatisticalEstimators/Smoothing/AddDelta.java,
	Stats/StatisticalEstimators/Smoothing/AddOne.java,
	Stats/StatisticalEstimators/Smoothing/GoodTuring.java,
	Stats/StatisticalEstimators/Smoothing/Smoothing.java,
	Stats/StatisticalEstimators/Smoothing/WittenBell.java,
	Classification/Stochastic/ZipfLaw.java,
	Stats/StatisticalObject.java,
	util/comparators/FrequencyComparator.java,
	util/comparators/RankComparator.java, nlp/Stemming/Stemming.java,
	nlp/Stemming/StemmingEN.java, Stats/Ngram.java,
	Stats/Observation.java, Stats/ProbabilityTable.java,
	Stats/WordStats.java, util/OptionProcessor.java: Add new stuff

2003-02-27 23:58  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Update

2003-02-27 20:19  mokhov

	* doc/src/tex/: appendix.tex, references.tex: Add Dr. Grogono's
	LaTeX ref. Update Appendix a little WRT \xa{ref} and formatting URL
	where to get MARF.

2003-02-26 16:31  mokhov

	* doc/src/tex/data.tex: Add Ke Gong.

2003-02-23 21:45  mokhov

	* doc/src/tex/stats.tex: Update stats to more recenet. 82% the best
	case.  Apparently 82 is better than 81, but Id be happy w/ a more
	drastic increase when some other classifier gets fully implemented
	and or NNet totally fixed.

2003-02-22 15:40  mokhov

	* doc/src/tex/data.tex: Update data.tex with my dad.

2003-02-21 21:47  mokhov

	* TODO: Slight TODO update

2003-02-21 11:01  mokhov

	* src/marf/: Classification/Classification.java,
	Storage/StorageManager.java, Storage/TrainingSet.java: Push DUMP_*
	flags up to StorageManager. Create two new: DUMP_BINARY and
	DUMP_XML. Make corresponding changes to the modules that use these
	flags, specifically Classification and TrainingSet. Some minor
	cleanup here and there. The TrainingSet change will require
	retraining of the models.

2003-02-21 10:56  mokhov

	* doc/src/styles/styles.tex: The "styles", basically a bunch of new
	new commands for the official name and cross refs from Dr. Grogono.
	 A bunch = 5 in this commit.

2003-02-21 10:53  mokhov

	* doc/src/tex/: architecture.tex, bandpass-filter.tex,
	classification.tex, cvs.tex, f0.tex, feature-extraction.tex,
	fft-filter.tex, hamming.tex, high-frequency-boost.tex,
	high-pass.tex, low-pass.tex, preprocessing.tex, report.tex: Make
	further use of styles from Dr. Grogono for cross-refs.	Fix few
	typos in CVS. Update hamming w/ the "square" window stuff found in
	F0. Clean up F0.tex to be inserted later.

2003-02-20 19:37  mokhov

	* doc/src/tex/: appendix.tex, cvs.tex: Add appendix on how to get
	the code via CVS.

2003-02-20 18:25  mokhov

	* TODO, doc/src/tex/architecture.tex,
	doc/src/tex/bandpass-filter.tex, doc/src/tex/classification.tex,
	doc/src/tex/cvs.tex, doc/src/tex/experimentation.tex,
	doc/src/tex/fft.tex, doc/src/tex/intro.tex, doc/src/tex/legal.tex,
	doc/src/tex/lpc.tex, doc/src/tex/preprocessing.tex,
	doc/src/tex/random-classification.tex, doc/src/tex/report.tex,
	doc/src/tex/sampleloading.tex, src/Makefile: docs: styles for MARF
	as {\marf} and some other sylistical changes.  TODO: slight update
	on CVS Makefile: make sure the api and api-dev dirs exists before
	attempt writing javadoc in them.

2003-02-20 11:05  mokhov

	* TODO: Update TODO WRT stuff done, docs, and new flags.

2003-02-20 02:00  mokhov

	* Makefile, distro.exclude: Make distro build exclude the files
	which are not really needed in the source distribution.

2003-02-20 01:57  mokhov

	* src/marf/: Preprocessing/FFTFilter/FFTFilter.java,
	Storage/TrainingSet.java: Fix bogus comments and warnings reported
	by javadoc 1.3

2003-02-19 21:44  mokhov

	* doc/src/tex/: conclusions.tex, results.tex, stats.tex: Update
	docs WRT addition of the new speaker, and hence new statistics. The
	facts that you add more samples, it becomes better generally holds.

2003-02-19 21:43  mokhov

	* src/: Makefile, test.java: Makefile: play with JFLAGS to make it
	more uniform for all 1.3.* dirs we may have here. *Crosses fingers*
	Update test.java to return version string -- planned to be used in
	autogeneration of the distro's version later on.

2003-02-18 21:02  mokhov

	* doc/src/tex/: lang-ident-app.tex, probabilistic-parsing-app.tex:
	Virgin A2 as a replica of A1

2003-02-18 20:10  mokhov

	* src/Makefile: Clean-up makefile. Add -exdirs to JFLAGS to
	proeprly find JAXP.

2003-02-18 11:45  mokhov

	* doc/src/tex/: Makefile, cvs.tex, data.tex, history.tex,
	intro.tex, legal.tex, lpc.tex: Update current docs WRT the new
	speaker, Talal (no stats update yet), Makefile: clean up and add
	some missing dependencies. lpc and intro: typos and quotations.
	legal: add more vertical spacing between paragpgraphs. history:
	preparing to include into the main docs.

2003-02-17 16:24  mokhov

	* ChangeLog: Update ChangeLog before the 0.2.1 release.

2003-02-17 16:04  mokhov

	* src/Makefile: Update makefile to properly handle jaxp dir on
	nettemp.

2003-02-17 15:19  mokhov

	* doc/src/tex/: conclusions.tex, results.tex: Backpatch results and
	conclusios to more reflect reality.

2003-02-17 15:18  mokhov

	* doc/src/tex/: conclusions.tex, results.tex: Update results and
	conclusions with more correct info.

2003-02-17 11:01  mokhov

	* doc/src/tex/stats.tex: Make results more proper, i.e. in the case
	of NNet and FFT and RandFE, which are bogus due to lack of memory
	errors.

2003-02-17 11:00  mokhov

	* doc/src/tex/stats.tex: Make results more proper. Excludes the
	exreme case of NNet w/ FFT and RandFE.

2003-02-16 16:39  mokhov

	* src/marf/Preprocessing/: Preprocessing.java,
	PreprocessingException.java: Backpatch Preprocessing comment fixes.

2003-02-16 16:38  mokhov

	* COPYRIGHT, ChangeLog, HISTORY, INSTALL, Makefile, README,
	src/Makefile: Backpatch: Update documentary and legal notes. Add
	COPYRIGHT and ChangeLog.  Improve distro build and make sure it
	includes all that necessary.

2003-02-16 16:38  mokhov

	* COPYRIGHT, ChangeLog, HISTORY, INSTALL, Makefile, README,
	src/Makefile, src/marf/Preprocessing/Preprocessing.java,
	src/marf/Preprocessing/PreprocessingException.java: Update
	documentary and legal notes. Add COPYRIGHT and ChangeLog.  Improve
	distro build and make sure it includes all that necessary.

2003-02-16 14:52  mokhov

	* doc/src/tex/: gui.tex, legal.tex, report.tex, spectrogram.tex,
	wave-grapher.tex: Backpatch: Add legal stuff, forgotten last time.
	Update GUI section and use forgotten spectrogram.tex. Split off
	Wave Grapher into wave-grapher.tex. Bump version to 0.2.1.

2003-02-16 14:52  mokhov

	* doc/src/tex/: gui.tex, legal.tex, references.tex, report.tex,
	spectrogram.tex, wave-grapher.tex: Add legal stuff, forgotten last
	time. Update GUI section and use forgotten spectrogram.tex. Split
	off Wave Grapher into wave-grapher.tex. Bump version to 0.3.0.

2003-02-16 14:05  mokhov

	* src/marf/util/: InvalidSampleFormatException.java,
	MARFException.java, NotImplementedException.java: Backpatch: Update
	comments.

2003-02-16 14:04  mokhov

	* src/marf/util/: InvalidSampleFormatException.java,
	MARFException.java, NotImplementedException.java: Update comments.

2003-02-16 13:59  mokhov

	* src/marf/Storage/: Sample.java, SampleLoader.java,
	TrainingSet.java: Backpatch: cosmetic updates and comment fixes.

2003-02-16 13:59  mokhov

	* src/marf/Storage/: Sample.java, SampleLoader.java,
	TrainingSet.java: Cosmetic updates and comment fixes.

2003-02-16 13:30  mokhov

	* src/marf/gui/Spectrogram.java: Backpatch: Cosmetic: IOException
	-> java.io.Exception

2003-02-16 13:30  mokhov

	* src/marf/gui/Spectrogram.java: Cosmetic: IOException ->
	java.io.IOException

2003-02-16 13:26  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	FeatureExtractionException.java, Cepstral/Cepstral.java,
	F0/F0.java, FFT/FFT.java, LPC/LPC.java,
	RandomFeatureExtraction/RandomFeatureExtraction.java,
	Segmentation/Segmentation.java: Backpatch: Fix comments in feature
	extraction modules. Make explicit ref. to IOException as
	java.io.IOException --- considered a good practice.

2003-02-16 13:26  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	FeatureExtractionException.java, Cepstral/Cepstral.java,
	F0/F0.java, FFT/FFT.java, LPC/LPC.java,
	RandomFeatureExtraction/RandomFeatureExtraction.java,
	Segmentation/Segmentation.java: Fix comments in feature extraction
	modules. Make explicit ref. to IOException as java.io.Exception ---
	considered a good practice.

2003-02-16 13:08  mokhov

	* src/marf/Classification/: Classification.java,
	ClassificationException.java, Distance/ChebyshevDistance.java,
	Distance/Distance.java, Distance/MahalanobisDistance.java,
	Markov/Markov.java, NeuralNetwork/NeuralNetwork.java,
	NeuralNetwork/Neuron.java: Backpatch: update Classification modules
	WRT documentation and 'final' stuff. Make implicit things explicit,
	e.g.  cases in switch().

2003-02-16 12:57  mokhov

	* src/marf/Classification/: Classification.java,
	ClassificationException.java, Distance/ChebyshevDistance.java,
	Distance/Distance.java, Distance/MahalanobisDistance.java,
	Markov/Markov.java, NeuralNetwork/NeuralNetwork.java,
	NeuralNetwork/Neuron.java: Update classification modules WRT
	documentation and 'final' stuff. Make implicit things explicit,
	e.g.  cases in switch().

2003-02-16 12:48  mokhov

	* src/marf/MARF.java: Backpatch: update comments and bump version
	to 0.2.1

2003-02-16 12:48  mokhov

	* src/marf/MARF.java: Update comments and bump version to 0.3.0

2003-02-10 04:56  mokhov

	* HISTORY, TODO: Final update of HISTORY and TODO before I tag
	0.2.0.

2003-02-10 03:52  mokhov

	* Makefile, TODO, doc/Makefile, doc/src/Makefile,
	doc/src/tex/Makefile, src/Makefile: Quick build distro hackery for
	0.2.0. Should be revised for later versions.

2003-02-10 01:53  mokhov

	* doc/src/tex/: intro.tex, report.tex: Update title and contacts.

2003-02-09 23:48  mokhov

	* doc/src/tex/: Makefile, intro.tex: Add contact info. Fix Makefile
	to use PERL for untabulation instead of sed, simply because sed
	isn't working for me all the time I want (it replaces all 't's
	instead of '\t' here, at school, and does work properly at home.
	PERL always works.

2003-02-09 21:54  mokhov

	* TODO, doc/arch.mdl, doc/src/graphics/arch/arch-general.png,
	doc/src/graphics/arch/classification.png,
	doc/src/graphics/arch/feature-extraction.png,
	doc/src/graphics/arch/gui.png, doc/src/graphics/arch/packages.png,
	doc/src/graphics/arch/pipeline.png,
	doc/src/graphics/arch/preprocessing.png,
	doc/src/graphics/arch/storage.png, doc/src/tex/Makefile,
	doc/src/tex/architecture.tex, doc/src/tex/gui.tex,
	doc/src/tex/high-frequency-boost.tex,
	doc/src/tex/mahalanobis-distance.tex, doc/src/tex/storage.tex:
	Update docs, finally alls the diagrams are in.	Hopefully we are
	almost ready for a release!

2003-02-09 14:02  mokhov

	* TODO, src/marf/Preprocessing/Preprocessing.java,
	src/marf/Preprocessing/FFTFilter/FFTFilter.java,
	src/marf/Preprocessing/FFTFilter/HighFrequencyBoost.java:
	Documentary fixes: comments and TODO update.

2003-02-09 13:47  mokhov

	* doc/src/tex/: Makefile, data.tex, experimentation.tex,
	results.tex, stats.tex: Update results and stats to be generated
	and split into tables semi-automatically from the app's output. 
	Label and reference table. Improve Makefile to update cross-refs
	automatically. Well, after this commit I declare the textual part
	of the docs sort of BETA for 0.2.0. Need to only update the class
	and sequence diagrams now.

2003-02-09 12:11  mokhov

	* doc/src/tex/: appendix.tex, experimentation.tex, gui.tex,
	preprocessing.tex, report.tex: Add new section: GUI, with
	Spectrogram and WaveGrapher explicitly mentioned. Fix some typos.
	Add more \label and \ref stuff.

2003-02-09 11:24  mokhov

	* src/marf/: MARF.java, FeatureExtraction/FFT/FFT.java,
	Storage/Loaders/WAVLoader.java: Improve comments.

2003-02-09 02:33  mokhov

	* doc/src/tex/: Makefile, appendix.tex, architecture.tex,
	bandpass-filter.tex, classification.tex, experimentation.tex,
	feature-extraction.tex, fft-filter.tex, high-frequency-boost.tex,
	high-pass.tex, low-pass.tex, lpc.tex, normalization.tex,
	preprocessing.tex, results.tex, sampleloading.tex, storage.tex:
	Move graphs to preprocessing 1 for each type as an example.  Get
	rid of graphs from the appendix -- it's no longer a school project.
	Improve appendix for included code. Make Makefile more reportive on
	what it's doing. Put dynamic figure refs.

2003-02-09 01:47  mokhov

	* doc/src/graphics/graphs/: band-pass-filter.png, fft.png,
	high-frequency-boost.png, high-pass-filter.png,
	low-pass-filter.png, wav-normalized.png: Add graphs as examples for
	the preprocessing section in the report. Mostly filters.

2003-02-08 22:06  mokhov

	* doc/src/tex/: appendix.tex, experimentation.tex, results.tex:
	Update results WRT date (gen. dynamically), now just need to update
	results themselves :-) Minor typos in expermentation and appendix

2003-02-08 16:23  mokhov

	* doc/src/tex/: appendix.tex, architecture.tex, data.tex,
	euclidean-distance.tex, experimentation.tex, fft-filter.tex,
	fft.tex, lpc.tex, mahalanobis-distance.tex, preprocessing.tex,
	random-feature-extraction.tex, results.tex, sampleloading.tex,
	storage.tex: Spell-check run. Section appendices. Improve appendix
	and enclosed source code and as other text font sizes. Minor clean
	ups. WE ARE GETTING THERE! :-)

2003-02-08 12:18  mokhov

	* doc/src/tex/: Makefile, bandpass-filter.tex,
	chebyshev-distance.tex, classification.tex, conclusions.tex,
	data.tex, euclidean-distance.tex, experimentation.tex,
	feature-extraction.tex, fft-filter.tex, fft.tex, hamming.tex,
	high-frequency-boost.tex, high-pass.tex, low-pass.tex, lpc.tex,
	mahalanobis-distance.tex, methodology.tex, minkowski-distance.tex,
	nnet.tex, noise-removal.tex, normalization.tex, preprocessing.tex,
	random-classification.tex, random-feature-extraction.tex,
	report.tex, results.tex, sampleloading.tex, storage.tex: Next
	iteration of 0.2.0 doc fixes: re-sectionnning again to group all
	storage, preprocessing, feat. extr, and classification under
	methodology, as it was supposed to be at the beginning. Fixes and
	additions in math formulas where appropriate. Add docs for
	Mahalanobis, random feat.extr., and bandpass filter. Minor updates
	elsewhere.

2003-02-07 23:05  mokhov

	* TODO, src/marf/gui/WaveGrapher.java: Update long-forgotten TODO.
	Cosmetic update yet again for WaveGrapher.

2003-02-07 22:09  mokhov

	* doc/src/tex/: Makefile, architecture.tex, report.tex,
	storage.tex: Make date dynamic in on the title page. Minor updates
	elsewhere.

2003-02-07 18:30  mokhov

	* doc/src/tex/zipf-law-app.tex: Submit

2003-02-07 16:35  mokhov

	* doc/src/tex/zipf-law-app.tex: Update

2003-02-07 16:16  mokhov

	* doc/src/: graphics/zipf/ZipfLaw_java_case_num_eos.png,
	graphics/zipf/grfst10_txt_case_num_eos.png,
	graphics/zipf/hwswc10_txt_case_num_eos.png,
	graphics/zipf/mokhov_case_num_eos.png,
	graphics/zipf/multiprocessor_txt_case_num_eos.png,
	graphics/zipf/ulysses_txt_case_num_eos.png, tex/zipf-law-app.tex:
	Add add more case graphs.

2003-02-07 14:14  mokhov

	* doc/src/graphics/zipf/: ZipfLaw_java_default.png,
	grfst10_txt_default.png, hwswc10_txt_default.png,
	mokhov_default.png, multiprocessor_txt_default.png,
	ulysses_txt_default.png: Add report images. Make suffixes to log
	and csv files if other than default options are set.

2003-02-07 13:59  mokhov

	* doc/src/tex/zipf-law-app.tex: Added all default images.

2003-02-07 12:17  mokhov

	* doc/src/tex/zipf-law-app.tex: Update

2003-02-07 09:31  mokhov

	* doc/src/tex/zipf-law-app.tex: Update before the school. New
	option --help and usage() method. More comments. More to go.

2003-02-06 22:21  mokhov

	* TODO: Update TODO a little WRT speech.

2003-02-06 19:51  mokhov

	* doc/src/tex/zipf-law-app.tex: Writing report...

2003-02-06 19:51  mokhov

	* doc/src/tex/: architecture.tex, bandpass-filter.tex,
	chebyshev-distance.tex, classification.tex, euclidean-distance.tex,
	feature-extraction.tex, fft-filter.tex, fft.tex, hamming.tex,
	high-frequency-boost.tex, high-pass.tex, intro.tex, low-pass.tex,
	lpc.tex, mahalanobis-distance.tex, minkowski-distance.tex,
	nnet.tex, noise-removal.tex, normalization.tex,
	random-classification.tex, random-feature-extraction.tex,
	report.tex, sampleloading.tex, storage.tex, toc.tex: Doc update.
	Most notably: sections/subsections, TOC, list of figures, many math
	formulas. Also includes some content and orpho fixes.  Loooot more
	to go.

2003-02-06 15:01  mokhov

	* doc/src/tex/zipf-law-app.tex: Update report --- removing
	incorrect info and updateign sources.

2003-02-06 01:56  mokhov

	* src/marf/gui/Spectrogram.java: Cosmetic fixes: structure and
	comments.

2003-02-06 01:39  mokhov

	* src/marf/gui/WaveGrapher.java: Cosmetic stuff and coding
	standards propagation.

2003-02-06 01:37  mokhov

	* src/marf/Storage/: SampleLoader.java, Loaders/MP3Loader.java,
	Loaders/ULAWLoader.java, Loaders/WAVLoader.java: Loaders update:
	make writeAudioData() return # of data written.  Document more.
	Make more methods 'final'

2003-02-06 00:02  mokhov

	* doc/src/tex/zipf-law-app.tex: Update with loc/log, + references

2003-02-05 14:25  mokhov

	* doc/src/tex/: Makefile, appendix.tex, architecture.tex,
	classification.tex, experimentation.tex, fft-filter.tex,
	methodology.tex, preprocessing.tex, report.tex, sampleloading.tex,
	storage.tex: Doc improvements and fixes. Way more to go. 1024 FFT
	features to 512, same for similar examples. Cosmetic/math fixes. 
	Make TODO to the appendix. Make testing.sh be generated off the
	actual script. Makefile improvements. Stamp 0.2.0 version, remove
	our school IDs, replace "Pattern Recognition - Fall 2002" by "MARF
	- v.0.2.0"

2003-02-01 10:10  mokhov

	* TODO: Update TODO WRT build system.

2003-02-01 10:03  mokhov

	* doc/src/tex/: Makefile, appendix.tex, bandpass-filter.tex,
	chebyshev-distance.tex, classification.tex, intro.tex,
	mahalanobis-distance.tex, minkowski-distance.tex,
	random-classification.tex, random-feature-extraction.tex:
	Preliminary update of the docs: new files, 3 of them empty yet, but
	just to do not forget (banpass-filter, mahalonobis-distance, and
	random-feature etxraction), other two have some contents in them
	(minkowski and random-classification). Other files were adjusted
	with more proper wordin because this becomes less of a school
	report now. Makefile was tweaked to include the most current app's
	source code into the document in the appendix automatically. Need
	to tweak font size though.

2003-01-31 22:00  mokhov

	* doc/src/tex/zipf-law-app.tex: Update report with more content and
	make it LaTeX. Update makefile to build and clean report stuff.

2003-01-31 21:31  mokhov

	* doc/src/tex/zipf-law-app.tex: Initial version of the report.

2003-01-30 11:03  mokhov

	* TODO, src/marf/Classification/Distance/MahalanobisDistance.java: 
	Update TODO with new/forgotten things. Cosmectic update in
	Mahalobis Distance.

2003-01-29 14:33  mokhov

	* TODO, src/marf/Classification/Distance/MahalanobisDistance.java:
	A coule of corrections in spelling and a new TODO

2003-01-29 13:59  mokhov

	* TODO: Update TODO with new items.

2003-01-29 13:58  mokhov

	* src/marf/Classification/Distance/: EuclideanDistance.java,
	MahalanobisDistance.java: Implement scpecial case of Mahalanobis
	Distance, which is an equivalent to Euclidean distance as is for
	0.2.0. That is Covarience matrix is an identity matrix for this
	case. At least distance() won't trow an exception.

2003-01-29 00:29  mokhov

	* src/marf/Storage/ModuleParams.java: Missing import for debug() in
	the defaults in ModuleParams

2003-01-28 19:46  mokhov

	* src/marf/:
	FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java,
	Storage/SampleLoader.java, Storage/Loaders/ULAWLoader.java: Fixes
	after cosmetic fixes :-): formatting, missing { }, comments

2003-01-28 18:54  mokhov

	*
	src/marf/FeatureExtraction/RandomFeatureExtraction/RandomFeatureExtraction.java:
	Cosmetical: fixed comments and a NNet TODO in resources.

2003-01-28 18:53  mokhov

	* src/marf/Storage/: ModuleParams.java, Result.java, Sample.java,
	SampleLoader.java, StorageManager.java, Loaders/MP3Loader.java,
	Loaders/ULAWLoader.java: Cosmetic: fixes in comments and made many
	things 'final'

2003-01-26 15:51  mokhov

	* TODO: Updated TODO

2003-01-26 13:09  mokhov

	* TODO, src/marf/Classification/Classification.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java: Still
	hearing eachoes from receent TrainingSet changes...  Made two
	methods: load/saveTrainingSet() which Classification calls in
	dump/restore and some explicit calls to these new methods to avoid
	clashing with overriden dump/restore and load/save TrainingSet
	uncoditionally. Corresponding changes to NNet. Update TODO for
	preprocessing.

2003-01-26 02:07  mokhov

	* src/marf/: Classification/Classification.java,
	Storage/TrainingSet.java: Interim bug fix in dump/restore when file
	initially is not there for a global training set cluster.

2003-01-26 01:40  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java:
	Corresponding change to NNet WRT TrainingSet

2003-01-26 01:39  mokhov

	* src/marf/: Classification/Classification.java,
	Storage/TrainingSet.java: Finally promised changes to TrainingSet
	-- filenames are back. Will require complete retraining.

2003-01-26 01:13  mokhov

	* TODO, src/marf/Classification/NeuralNetwork/NeuralNetwork.java,
	src/marf/Classification/RandomClassification/RandomClassification.java:
	Being more precise, complete, explicit, and concise.  Slightly anal
	though... :-)

2003-01-26 01:10  mokhov

	* src/marf/Preprocessing/: Preprocessing.java, Dummy/Dummy.java,
	Endpoint/Endpoint.java, FFTFilter/BandpassFilter.java,
	FFTFilter/FFTFilter.java, FFTFilter/HighFrequencyBoost.java,
	FFTFilter/HighPassFilter.java, FFTFilter/LowPassFilter.java:
	Implement BandpassFilter, push some API implementation/exceptions
	up to Preprocessing.  Make cosmetic/comment fixes.

2003-01-25 23:41  mokhov

	* src/Makefile: Backout API doc build changes, so that online
	version gets rebuilt properly.

2003-01-25 16:29  mokhov

	* TODO, doc/src/tex/nnet.tex: TODO and minu doc. fixes

2003-01-25 16:29  mokhov

	* src/Makefile: Makefile knows about RandomClassification and few
	clean up changes.

2003-01-25 16:28  mokhov

	* src/marf/Storage/TrainingSet.java: TrainingSet reworked a bit. 
	TODO: Re-add filename check to avoid dupes and false means
	(bsaically uncomment stuff; this will require a lot of retraining
	though..., so TODO item: TrainingSet upgrade utility)

2003-01-25 16:26  mokhov

	* src/marf/FeatureExtraction/FeatureExtraction.java: Minor
	notational change.

2003-01-25 16:25  mokhov

	* src/marf/MARF.java: Enable MARF be aware of RandomClassification,
	put accessors for the module objects, comment fixes, change
	BANDPASS_FILTER --> BANDPASS_FFT_FILTER

2003-01-25 16:00  mokhov

	* src/marf/Classification/: Classification.java,
	Distance/Distance.java, Markov/Markov.java,
	Stochastic/Stochastic.java: TrainingSet story is revisited again (a
	new update will come shortly as well)
	
	generic train() in Classification now implements some stuff for
	building TrainingSet if it's not there, hence this was removed from
	Distance. If derivatives plan to use mean vectors of the
	TrainingSet, they should call super.train() as their first thing in
	overridden train().
	
	If they also override dump()/restore(), they might need to do
	super.dump()/super.restore() depending on the module. 
	NeuralNetwork, for example does only super.train() in it's train()
	to bring in/update the training set, but dump()/restore() deal only
	with XML of the net itself.
	
	Filenames of the global clusters have changed to:
	
	marf.Storage.TrainingSet.<PR>.<FE>.<NOF>.[bin|csv]
	
	to differentiate between the same FE module but with different
	sizes of feature vectors, i.e. Number Of Features.

2003-01-25 15:52  mokhov

	* src/marf/Classification/NeuralNetwork/: NeuralNetwork.java,
	Neuron.java: A-believed-to-be-working NNet. Major fixes include
	removinf dump() in classification and moving commit() call inside
	for() in train(). The reason for the latter is that after eveyr
	subtraing interation weights were not kept, so the last trained
	subject was only committed... Other are mostly cos metical
	enhancements, as well as training stuff for TrainingSet is included
	--- super.traing() as for any other classification module.
	
	Do NOT try to run it against FFT of 1024.
	
	Will still need revisions, but I guess this is more or less final
	commit of the nnet for 0.2.0

2003-01-25 15:46  mokhov

	*
	src/marf/Classification/RandomClassification/RandomClassification.java:
	Random classification module. Picks and ID at random from all the
	IDs. The bottomline for all classification modules. Usually guess
	es 15%-20% correctly. Made for test and stub purposes.

2003-01-20 19:55  mokhov

	* src/marf/Classification/Distance/MahalanobisDistance.java:
	Mahalanobis: The Beginnings

2003-01-18 14:07  mokhov

	* README, TODO, doc/src/tex/architecture.tex,
	doc/src/tex/intro.tex, src/Makefile: Documentation updates.

2003-01-18 13:46  mokhov

	* src/marf/MARF.java: MARF incorporates changes for
	MahalanobisDistance and RandomFeatureExtraction.

2003-01-18 13:45  mokhov

	* src/marf/Storage/: Result.java, Sample.java, TrainingSet.java:
	Cosmetic/comment/debug fixes.  NOTE: More methods made final,
	including TrainingSet.	That leads to change of the on-disk format
	of the TrainingSet, so older versions of the class in the binary
	mode won't reload, and an exception will be thrown. This either
	requires a complete rertaining or don't compile this right now.

2003-01-18 13:27  mokhov

	* src/marf/Preprocessing/Preprocessing.java: Making normalize()
	final.

2003-01-18 13:24  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	Cepstral/Cepstral.java, F0/F0.java, FFT/FFT.java, LPC/LPC.java,
	RandomFeatureExtraction/RandomFeatureExtraction.java,
	Segmentation/Segmentation.java: FeatureExtraction Updates:
	
	- Moved 'implementes StorageManager' up to generic
	FeatureExtraction - Few more comments - Few more methods made final
	- New module : RandomFE, which uses next pseudo random number from 
	 Gaussian distribution and mutliplies by the values in the incoming
	  vector; feature vector by default of 256 doubles. using htis one 
	 Distance classifiers had a stable max of 30 %, so this is our	
	physical mininmum for the real algos :-)

2003-01-18 13:17  mokhov

	* src/marf/Classification/: Distance/Distance.java,
	Distance/MahalanobisDistance.java,
	NeuralNetwork/NeuralNetwork.java: Classification Commit: - Fixed a
	bug in computing second best ID; most of our second best ID   stats
	were wrong unless the speaker with the min distance was the   last
	in the training set :-( I descovered that in the output when   the
	second best for distance classifiers was 'Unknown' or 0
	
	- NNet has it's TrainingSet manipulations back as per recent
	comment   from Ian; compiles, but untested.
	
	- Adding a stub for Mahalanobis distance classifier

2003-01-17 22:47  mokhov

	* Makefile, TODO, doc/Makefile, doc/src/Makefile,
	doc/src/sgml/Makefile, doc/src/sgml/architecture.sgml,
	doc/src/sgml/book-decl.sgml, doc/src/sgml/chebyshev-distance.sgml,
	doc/src/sgml/conclusions.sgml, doc/src/sgml/contacts.sgml,
	doc/src/sgml/cvs.sgml, doc/src/sgml/data.sgml,
	doc/src/sgml/developer.sgml, doc/src/sgml/docguide.sgml,
	doc/src/sgml/entities.sgml, doc/src/sgml/euclidean-distance.sgml,
	doc/src/sgml/experimentation.sgml, doc/src/sgml/f0.sgml,
	doc/src/sgml/fft-filter.sgml, doc/src/sgml/fft.sgml,
	doc/src/sgml/filelist.sgml, doc/src/sgml/fixrtf,
	doc/src/sgml/hamming.sgml, doc/src/sgml/high-frequency-boost.sgml,
	doc/src/sgml/history.sgml, doc/src/sgml/install-win32.sgml,
	doc/src/sgml/installation.sgml, doc/src/sgml/intro.sgml,
	doc/src/sgml/legal.sgml, doc/src/sgml/lpc.sgml,
	doc/src/sgml/maintenance.sgml, doc/src/sgml/nnet.sgml,
	doc/src/sgml/noise-removal.sgml, doc/src/sgml/normalization.sgml,
	doc/src/sgml/notation.sgml, doc/src/sgml/problems.sgml,
	doc/src/sgml/programmer.sgml, doc/src/sgml/protocol.sgml,
	doc/src/sgml/refentry.sgml, doc/src/sgml/reference.ced,
	doc/src/sgml/references.sgml, doc/src/sgml/report.sgml,
	doc/src/sgml/results.sgml, doc/src/sgml/sample-formats.sgml,
	doc/src/sgml/sources.sgml, doc/src/sgml/spectrogram.sgml,
	doc/src/sgml/standalone-install.sgml, doc/src/sgml/start.sgml,
	doc/src/sgml/storage.sgml, doc/src/sgml/stylesheet.dsl,
	doc/src/sgml/training.sgml, doc/src/sgml/ref/allfiles.sgml,
	doc/src/sgml/ref/marf-ref.sgml,
	doc/src/sgml/ref/speakerident-app.sgml, doc/src/tex/Makefile: Some
	clean up and improving build system: - removed *.sgml stuff, will
	maintain only the LaTeX version of it.	- update of TODO for next
	CVS clean up - created few missing makefiles

2003-01-17 16:44  mokhov

	* marf.jpx.local: Removed since doesn't belong here and stores
	personal settings per session instance.

2003-01-14 00:10  mokhov

	* TODO, src/marf/Classification/Distance/Distance.java,
	src/marf/Classification/Distance/MinkowskiDistance.java: Few
	cosmetic changes and update of TODO

2003-01-12 15:35  mokhov

	* src/marf/Classification/Distance/: EuclideanDistance.java,
	MinkowskiDistance.java: a couple of typos :-)

2003-01-12 15:30  mokhov

	* src/marf/: MARF.java,
	Classification/Distance/ChebyshevDistance.java,
	Classification/Distance/EuclideanDistance.java,
	Classification/Distance/MinkowskiDistance.java: Here you go -- a
	new distance classifier! MinkowskiDistance is in, though app is not
	aware of it. It compiles, but was never tested yet, I gotta run.
	But should be OK.

2003-01-12 11:51  mokhov

	* README, TODO, src/marf/FeatureExtraction/FeatureExtraction.java,
	src/marf/FeatureExtraction/LPC/LPC.java: Pure documentary and
	cosmetic commit.

2003-01-12 10:36  mokhov

	* TODO, src/marf/util/MARFException.java: TODO update and
	MARFException to actually give us the error message.

2003-01-12 10:31  mokhov

	* src/marf/Preprocessing/FFTFilter/FFTFilter.java: A huge bug is
	fixed in FFTFIlter. freqResponse was declared static and so are
	methods using it. That would mean all instances of all filters in
	here running concurrently will mess with the exac same instance of
	frequency response array, which ain't good at all!

2003-01-12 10:27  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	FFT/FFT.java, LPC/LPC.java, Segmentation/Segmentation.java: Mostly
	performance improvements and comsmetic commit: - new hamming() was
	added to actually apply hamming window	 to an array --- this
	avoids 1024 (default) hamming() calls	in FFT and 128 in LPC,
	instead we have ONE in both.	hamming will have to be moved one
	day to marf.util.math	 I guess along with some matrix
	manipulation when I get    to implement mahalanobis distance.  -
	few more methdos were made final - the rest is more cosmecit --
	comments and code-readability improvements

2003-01-12 09:58  mokhov

	* src/marf/Classification/NeuralNetwork/: NeuralNetwork.java,
	Neuron.java: My next passage over NNet: It made to work and run
	within the framework 'properly, but: with FFT it simply runs out of
	memory -- the net is to huge (in terms of links), and I haven't
	figured out a rationale on how many hidden layer and how many
	neuros should be in those layers.  For # of input neurons I take a
	size of a feature vector, and out put is 32, because 32 bits is an
	int size.
	
	It does work efficiently and not memrory consuming at all with LPC
	(hey, we;ve got only 20 coeffs. vs. 1024 of FFT!) but the end
	result as of now is that it recognized only the last subject it was
	trained on.
	
	Created generate(), a somewhat mimic'ing nnetgen.pl that takes # of
	neurons in layers and generates the net and the links in terms of
	data structures. It's initially called if the global cluster file
	is not there in initializ(), so we dump a new fresh one.
	
	Other than that, comments say it all, cleanups, more documentation,
	proper handling of the input params from app, etc.
	
	That epoch thing is still to be cleared out.

2003-01-12 09:48  mokhov

	* src/marf/Classification/: Markov/Markov.java,
	Stochastic/Stochastic.java: Cosmetic commits: - removed implements
	StrorageManager, as parent does so - Stochastic was missing javadoc
	comments somehow (?!)

2003-01-12 09:45  mokhov

	* src/marf/Classification/Distance/Distance.java: Moved back in
	dump() in train() (see my previous commit, 1.47, to MARF) Removed
	'implements StorageManager' since Classification now has it

2003-01-12 09:42  mokhov

	* src/marf/MARF.java: OK, changes in MARF: - more methods made
	final - more correct handling of UNSET situation in train() - some
	rearrangements in restore() and train() (mostly cosmetic) -
	temporarily removed dump()/restore() calls in train() and moved  
	them down <classifier>.train() again, since we're not there yet  
	to avoid dump() on every training sample -- more thought required -
	added extra WaveGrapher dump past preprocessing, though I still  
	think the whole thing should be moved out from	 MARF

2003-01-10 02:28  mokhov

	* TODO, src/Makefile, src/marf/MARF.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java: Allow
	numeric version return from MARF for comparison in Apps
	
	Makefile as a optimize target to build .class files the most
	optimized way w/o any debugging -- speads things app
	
	Other changes are cosmetic, I'm still floating around NNet...

2003-01-07 14:11  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/Distance/ChebyshevDistance.java,
	marf/Classification/Distance/EuclideanDistance.java,
	marf/Preprocessing/FFTFilter/BandpassFilter.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java: Post-CVS
	clean-up changes to make it compile again.

2003-01-05 16:07  mokhov

	* HISTORY, TODO: Committing documentary updates

2003-01-05 16:03  mokhov

	* src/marf/: MARF.java, Classification/Classification.java,
	Classification/Distance/Distance.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/FFT/FFT.java, FeatureExtraction/LPC/LPC.java,
	Preprocessing/Preprocessing.java,
	Preprocessing/FFTFilter/FFTFilter.java,
	Preprocessing/FFTFilter/HighFrequencyBoost.java,
	Storage/ModuleParams.java, Storage/Result.java,
	Storage/TrainingSet.java, gui/Spectrogram.java,
	gui/WaveGrapher.java, util/MARFException.java: Finished
	improvements in TrainginSet, and some other modules, extra
	comments, etc. MARFs API bumped to 0.2.0, many methods were made
	final; new clustering - global a nd local, global refers to the
	ways tatining sets are stored and mainpulated, local - store only
	mean vectors. My next prioritties from TODO: CVS clean up and work
	on classififers - I think I've found a major problem in NNet, so it
	might get fixed rather soon, and implement new classifies

2003-01-04 01:51  mokhov

	* src/marf/: MARF.java, Classification/Distance/Distance.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Storage/TrainingSet.java: Code improvement before major changes: -
	More readable and document code of TrainingSet - Few more comments
	in DIstance NNet, etc The next step will involve building training
	set and implementing train() of distance classifiers in more proper
	way. Also the TrainingSet dump/restore mechanism will be rewritten
	to make it possible to have binary zipped file (our current
	training.set is 7Mb!) I will keep it still for DEBUG mode though. 
	---s

2003-01-03 15:05  mokhov

	* HISTORY, INSTALL, TODO: Some documentary/advocay/TODO stuff.

2002-12-25 21:41  mokhov

	* doc/src/tex/lpc.tex, src/Makefile, src/marf/MARF.java,
	src/marf/Classification/Classification.java,
	src/marf/Classification/Distance/ChebyshevDistance.java,
	src/marf/Classification/Distance/Distance.java,
	src/marf/Classification/Distance/EuclideanDistance.java,
	src/marf/Classification/Markov/Markov.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java,
	src/marf/Classification/NeuralNetwork/Neuron.java,
	src/marf/FeatureExtraction/FeatureExtraction.java,
	src/marf/FeatureExtraction/Cepstral/Cepstral.java,
	src/marf/FeatureExtraction/F0/F0.java,
	src/marf/FeatureExtraction/FFT/FFT.java,
	src/marf/FeatureExtraction/LPC/LPC.java,
	src/marf/Preprocessing/Preprocessing.java,
	src/marf/Preprocessing/Dummy/Dummy.java,
	src/marf/Preprocessing/Endpoint/Endpoint.java,
	src/marf/Preprocessing/FFTFilter/BandpassFilter.java,
	src/marf/Preprocessing/FFTFilter/FFTFilter.java,
	src/marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	src/marf/Preprocessing/FFTFilter/HighPassFilter.java,
	src/marf/Preprocessing/FFTFilter/LowPassFilter.java,
	src/marf/Storage/ModuleParams.java, src/marf/Storage/Result.java:
	Before I tag 0.1.2 in the CVS, made few comments and other
	improvements for the past week.
	
	- Typos in docs - New makefile targets to *really* clean stuff -
	Comments throuthout the code - Neural Network initial code clean up
	and first   comments. Still requires a lot of work. Who knows,	
	maybe we'll fix it one day ;-)
	
	After this commit I gonna tag CVS and MARF_0_1_2_RELEASE so we can
	always get this version whenever needed.
	
	Happy Holidays :-) Again: and no, am not crazy :)

2002-12-20 20:52  mokhov

	* src/Makefile: making altall to jar just class files. was used in
	prep. of the CD

2002-12-18 16:52  mokhov

	* src/marf/: FeatureExtraction/LPC/LPC.java,
	util/NotImplementedException.java: cannot detach myself from it :)
	- comsetic fixes

2002-12-17 22:02  mokhov

	* src/: Makefile, marf/util/MARFException.java: -typo in the
	exception and newer makefile  allowig build MARF here in CS by
	specifying  make altall for alternative build  using the 1.4
	compiler w/o having to	download JAXP stuff eahc time
	
	- donl't look at me as if am crazy just   getting ready for the PR
	exam.

2002-12-17 11:34  mokhov

	* doc/src/tex/references.tex: Per Jimmy. I guess I gotta reprint
	that page :)
	
	Forgot to mention: the 3rd reference in the bibliography section
	should be:     -Ifeachor/Jervis (2002), "Digital Signal
	Processing", Prentice Hall. New Jersey, US.
	
	Looks good dude!
	
	-Jim

2002-12-17 11:28  mokhov

	* doc/src/tex/: appendix.tex, fft.tex, sampleloading.tex,
	storage.tex: last updates; am printing it right now and delivering
	it to Sadri. I put a note in the appendix for MARF source code that
	they can grab it from the net, but included SpeakerIdentApp's code
	entirely separately.

2002-12-17 09:15  mokhov

	* doc/src/tex/report.tex: slight improvement o fthe title page

2002-12-17 09:13  mokhov

	* doc/src/tex/: architecture.tex, classification.tex,
	conclusions.tex, experimentation.tex, feature-extraction.tex,
	intro.tex, methodology.tex, preprocessing.tex, references.tex,
	report.tex, results.tex, sampleloading.tex: looks like done.

2002-12-17 03:46  mokhov

	* doc/src/tex/appendix.tex: little quirks

2002-12-17 03:16  mokhov

	* doc/src/tex/architecture.tex, doc/src/tex/chebyshev-distance.tex,
	doc/src/tex/conclusions.tex, doc/src/tex/euclidean-distance.tex,
	doc/src/tex/experimentation.tex, doc/src/tex/fft.tex,
	doc/src/tex/hamming.tex, doc/src/tex/high-frequency-boost.tex,
	doc/src/tex/intro.tex, doc/src/tex/lpc.tex,
	doc/src/tex/methodology.tex, doc/src/tex/nnet.tex,
	doc/src/tex/references.tex, doc/src/tex/results.tex,
	doc/src/tex/sampleloading.tex, doc/src/tex/storage.tex,
	src/marf/FeatureExtraction/LPC/LPC.java,
	src/marf/util/MARFException.java: After reading beta 1 report... 
	Here are some fixes for beta 2 :) That includes docs and some code.

2002-12-17 01:57  mokhov

	* doc/src/tex/intro.tex: started reading what I wrote :)

2002-12-17 01:45  mokhov

	* doc/src/graphics/lpc_spectrograms/: graham13_wav.png,
	ian15_wav.png: used in the report. should I add more of these?

2002-12-17 01:34  mokhov

	* doc/src/tex/: appendix.tex, architecture.tex,
	chebyshev-distance.tex, classification.tex, conclusions.tex,
	data.tex, euclidean-distance.tex, experimentation.tex,
	feature-extraction.tex, fft-filter.tex, fft.tex, hamming.tex,
	high-frequency-boost.tex, high-pass.tex, intro.tex, low-pass.tex,
	lpc.tex, methodology.tex, nnet.tex, noise-removal.tex,
	normalization.tex, old-results.tex, output.tex, preprocessing.tex,
	references.tex, report.tex, results.tex, sampleloading.tex,
	storage.tex, toc.tex, training.tex: well.... The Report Beta 1,
	Please "Test"

2002-12-16 14:16  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/Distance/Distance.java,
	marf/FeatureExtraction/FFT/FFT.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighPassFilter.java,
	marf/Preprocessing/FFTFilter/LowPassFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/Storage/Sample.java, marf/Storage/TrainingSet.java,
	marf/gui/Spectrogram.java: - Most notably - Filters, High Pass and
	High Boost - Optimizations - Comments

2002-12-16 13:13  pwrslave

	* doc/src/graphics/lpc_spectrograms/: aihua5.wav.ppm,
	graham13.wav.ppm, graham14.wav.ppm, ian15.wav.ppm, ira4.wav.ppm,
	jihed3.wav.ppm, jim6.wav.ppm, madhumita4.wav.ppm,
	michelle1.wav.ppm, nick1.wav.ppm, rita6.wav.ppm,
	sei-sphere.wav.ppm, serge-label.wav.ppm, shabana8.wav.ppm,
	steve-test1.wav.ppm, steve-test2.wav.ppm, steve2.wav.ppm,
	suen2.wav.ppm: fft/lpc spectograms

2002-12-16 13:08  pwrslave

	* doc/src/graphics/fft_spectrograms/: aihua5.wav.ppm,
	graham13.wav.ppm, graham14.wav.ppm, ian15.wav.ppm, ira4.wav.ppm,
	jihed3.wav.ppm, jim6.wav.ppm, madhumita4.wav.ppm,
	michelle1.wav.ppm, nick1.wav.ppm, rita6.wav.ppm,
	sei-sphere.wav.ppm, serge-label.wav.ppm, shabana8.wav.ppm,
	steve-test1.wav.ppm, steve-test2.wav.ppm, steve2.wav.ppm,
	suen2.wav.ppm: fft/lpc spectograms

2002-12-15 22:51  mokhov

	* doc/src/tex/: architecture.tex, references.tex, report.tex: smth
	has changed

2002-12-15 22:40  radarsat1

	* src/marf/gui/WaveGrapher.java: generates the text files for
	graphing

2002-12-15 22:39  radarsat1

	* doc/src/graphics/graphs/image001.png,
	doc/src/graphics/graphs/image002.png,
	doc/src/graphics/graphs/image003.png,
	doc/src/graphics/graphs/image004.png,
	doc/src/graphics/graphs/image005.png,
	doc/src/graphics/graphs/image006.png,
	doc/src/graphics/graphs/image007.png,
	doc/src/graphics/graphs/image008.png,
	doc/src/graphics/graphs/image009.png,
	doc/src/graphics/graphs/image010.png,
	doc/src/graphics/graphs/image011.png,
	doc/src/graphics/graphs/image012.png,
	doc/src/graphics/graphs/image013.png,
	doc/src/graphics/graphs/image014.png,
	doc/src/graphics/graphs/image015.png,
	doc/src/graphics/graphs/image016.png,
	doc/src/graphics/graphs/image017.png,
	doc/src/graphics/graphs/image018.png,
	doc/src/graphics/graphs/image019.png,
	doc/src/graphics/graphs/image020.png,
	doc/src/graphics/graphs/image021.png,
	doc/src/graphics/graphs/image022.png,
	doc/src/graphics/graphs/image023.png,
	doc/src/graphics/graphs/image024.png,
	doc/src/graphics/graphs/image025.png,
	doc/src/graphics/graphs/image026.png,
	doc/src/graphics/graphs/image027.png,
	doc/src/graphics/graphs/image028.png, src/Makefile,
	src/marf/MARF.java, src/marf/FeatureExtraction/FFT/FFT.java: new
	graphs

2002-12-15 22:08  mokhov

	* doc/src/graphics/arch/: arch-general.png, classification.png,
	feature-extraction.png, packages.png, pipeline.png,
	preprocessing.png, storage.png: - Finally more or less good arch
	images.

2002-12-15 21:45  mokhov

	* doc/arch.mdl: arch models recovery/update

2002-12-15 19:17  radarsat1

	* doc/src/tex/results.tex: new results with 2nd-guess enabled

2002-12-15 18:50  radarsat1

	* doc/src/tex/references.tex, src/Makefile,
	src/marf/Storage/TrainingSet.java: Fix.

2002-12-15 17:43  mokhov

	* doc/src/tex/report.tex: - few more touches before I leave for
	school	and I leave NOW

2002-12-15 17:09  radarsat1

	* doc/src/tex/Makefile, doc/src/tex/preprocessing.tex,
	src/Makefile, src/marf/FeatureExtraction/FFT/FFT.java,
	src/marf/Storage/TrainingSet.java: Just a few more comments...

2002-12-15 15:46  mokhov

	* src/marf/MARF.java: added getResult() to return Result object for
	convenience

2002-12-15 15:20  pwrslave

	* doc/src/tex/sampleloading.tex: Added references...

2002-12-15 15:19  pwrslave

	* doc/src/graphics/: graham14FFT.png, graham14wave.png,
	shabana8FFT.png, shabana8wave.png: Graphs of new speakers...

2002-12-15 15:04  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/Distance/Distance.java,
	marf/Storage/Result.java: "Second Best" Prerequisites. It all
	compiles; I'll need to finish tweaking the app to use this.
	
	- Makefile - I put back things Steve removed.	 (We can always
	remove them as needed, but better    way is to find one proper
	config for all cases:	 - school, - our homes.)
	
	- Distance classifier has been more or less documented	 and made
	to collect stats and store them in Result
	
	- Result has now not just ID of the speaked identified,   but also
	IDs of all other subjects and a distance from	them. A new method
	returns second best ID. Result	 was fairly documented as well.
	
	- MARF was altered to have the config avail in astring	 (to preven
	app's failure when there are no args supplied	for modules; it'll
	simply query MARF for the config   instead of command line
	arguments)

2002-12-15 14:45  mokhov

	* src/marf/gui/Spectrogram.java: oops :-) forgot tochange other
	places

2002-12-15 14:37  mokhov

	* src/marf/FeatureExtraction/LPC/LPC.java: Same as FFT from the
	last commit, spectro-related.  Ian, please comment stuff in here
	too.

2002-12-15 14:35  mokhov

	* src/marf/gui/Spectrogram.java: - To differentiate bewteen feat.
	extr. modules;	 otherwise, files from LPC overwrite the ones	of
	FFT (or the reverse)

2002-12-15 14:34  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: - Steve, just little
	one-line change, Spectrogram-related   To reduce clashing

2002-12-15 12:34  mokhov

	* doc/src/tex/: architecture.tex, chebyshev-distance.tex: - mini
	interim commit to avoid more merge conflicts

2002-12-15 01:48  pwrslave

	* doc/src/tex/sampleloading.tex: Just corrected some typos and aded
	a reference to Ian's book

2002-12-15 01:29  pwrslave

	* doc/src/graphics/: ira4_boost_FFT.png, ira4_boost_wave.png,
	ira4_norm_FFT.png, ira4_norm_wave.png, jim6_boost_FFT.png,
	jim6_boost_wave.png, jim6_norm_FFT.png, jim6_norm_wave.png,
	sei-sphere_boost_FFT.png, sei-sphere_boost_wave.png,
	sei-sphere_norm_FFT.png, sei-sphere_norm_wave.png: Preprocessing
	and filtering graphs (only 3 testing samples...)

2002-12-14 23:43  radarsat1

	* doc/src/tex/: noise-removal.tex, normalization.tex,
	preprocessing.tex: Some more docs.  Serguei are these formatted
	correctly?

2002-12-14 22:14  mokhov

	* doc/src/: graphics/aihua5FFT.png, graphics/aihua5wave.png,
	graphics/ian15FFT.png, graphics/ian15wave.png,
	graphics/ira4FFT.png, graphics/ira4wave.png,
	graphics/jihed3FFT.png, graphics/jihed3wave.png,
	graphics/jim6FFT.png, graphics/jim6wave.png,
	graphics/jimmy1-spectro.png, graphics/madhumita4FFT.png,
	graphics/madhumita4wave.png, graphics/michelle1FFT.png,
	graphics/michelle1wave.png, graphics/nick1FFT.png,
	graphics/nick1wave.png, graphics/rita6FFT.png,
	graphics/rita6wave.png, graphics/sei-sphereFFT.png,
	graphics/sei-spherewave.png, graphics/serge-labelFFT.png,
	graphics/serge-labelwave.png, graphics/steve2FFT.png,
	graphics/steve2wave.png, graphics/suen2FFT.png,
	graphics/suen2wave.png, tex/architecture.tex,
	tex/feature-extraction.tex, tex/lpc.tex: - interim update   -
	figured out image problem (JPEG compression must no be progressive!
	    else LaTeX fails to read it)   - images were converted

2002-12-14 21:52  radarsat1

	* doc/src/tex/euclidean-distance.tex, doc/src/tex/hamming.tex,
	src/Makefile: Updated some docs, plus added samples of me & my
	brother.

2002-12-14 20:20  mokhov

	* doc/src/tex/: architecture.tex, lpc.tex: tried out formulas :-)

2002-12-14 19:55  mokhov

	* doc/src/tex/: Makefile, architecture.tex, classification.tex,
	feature-extraction.tex, lpc.tex, methodology.tex,
	preprocessing.tex, report.tex, sampleloading.tex: - report
	improvements   - learning more and more LaTeX :-)   - there are
	problems with images, however :(     sometiems they get included,
	sometimes not.

2002-12-14 16:23  mokhov

	* doc/src/tex/: lpc.tex, references.tex, sampleloading.tex: - few
	corrections

2002-12-14 15:37  mokhov

	* doc/src/tex/: chebyshev-distance.tex, conclusions.tex, cvs.tex,
	data.tex, experimentation.tex, f0.tex, fft-filter.tex, fft.tex,
	hamming.tex, history.tex, installation.tex, intro.tex, legal.tex,
	noise-removal.tex, report.tex, results.tex, sample-formats.tex,
	sampleloading.tex, sources.tex, storage.tex, training.tex: - second
	round report clean-up

2002-12-14 12:55  mokhov

	* doc/src/tex/: architecture.tex, report.tex: - small changes

2002-12-14 12:51  mokhov

	* doc/src/tex/: architecture.tex, report.tex: - a couple of changes
	to test graphics and   some other parts of LaTeX

2002-12-14 02:05  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/Distance/Distance.java,
	marf/FeatureExtraction/FFT/FFT.java, marf/Storage/Sample.java: -
	updated jar - post-Steve updates   - line wrapping   - more
	comments   - more get methods for MARF class variables	   in case
	they get used from ouside MARF like	with prerocessing and
	feature extration methods...  - all chunck-related is chunkanized
	now :-)

2002-12-13 23:09  mokhov

	* doc/src/tex/: chebyshev-distance.tex, euclidean-distance.tex,
	fft-filter.tex, fft.tex, high-frequency-boost.tex, lpc.tex,
	methodology.tex, nnet.tex, report.tex, sampleloading.tex,
	storage.tex: Few updates:   - includes Steve's and Jimmy's stuff  
	- some clean up   - will do more later on.
	
	Still a lot cleanup to do,

2002-12-13 21:57  mokhov

	* doc/src/tex/: Makefile, architecture.tex, chebyshev-distance.tex,
	classification.tex, conclusions.tex, cvs.tex, data.tex,
	euclidean-distance.tex, experimentation.tex, f0.tex,
	feature-extraction.tex, fft-filter.tex, fft.tex, hamming.tex,
	high-frequency-boost.tex, history.tex, installation.tex, intro.tex,
	legal.tex, lpc.tex, methodology.tex, nnet.tex, noise-removal.tex,
	normalization.tex, notation.tex, preprocessing.tex, references.tex,
	report.tex, results.tex, sample-formats.tex, sources.tex,
	spectrogram.tex, storage.tex, training.tex: Interim commit of the
	LaTeX docs: - Still needs cleaning up - Still needs linkag - I've
	found a way to include tex files   in each other, but it apparently
	allows	 only one level of nesting:
	
	  \include{file}
	
	  assuming there is file.tex in there
	
	- To build a PDF:
	
	  make
	
	This is an interim update and doesn not include Steve's and Jimmy's
	stuff yet linked. Will do rather soon.

2002-12-13 20:00  radarsat1

	* src/marf/Classification/Distance/Distance.java: Bug fix: Wasn't
	distinguishing properly in the comparison: apples & oranges.

2002-12-13 18:47  radarsat1

	* src/: Makefile, marf/MARF.java,
	marf/FeatureExtraction/FFT/FFT.java, marf/Storage/TrainingSet.java:
	Updated FFT algorithm to use overlapping Hamming windows.  Also
	improved TrainingSet to differentiate properly between boost and
	non-boost training samples.  nick8.wav and nick9.wav were empty, so
	I copied nick6.wav and nick7.wav in order to stop them from
	generating errors.

2002-12-13 14:17  pwrslave

	* doc/src/tex/sampleloading.tex: doc for sample format and loading

2002-12-13 08:50  iclement

	* doc/src/sgml/lpc.sgml: DEV: REplaced emails with my text

2002-12-13 08:36  iclement

	* doc/src/sgml/nnet.sgml: DEV: Added my nnet text

2002-12-12 15:27  mokhov

	* src/marf/Storage/: ModuleParams.java, Sample.java: - mostly
	comments

2002-12-12 14:47  mokhov

	* src/: test.java, marf/Storage/ArtificialSample.java,
	marf/Storage/Sample.java, marf/Storage/Wave.java: -
	ArtificialSample and Wave are gone for good - Sample consumed the
	both

2002-12-12 13:10  mokhov

	* src/marf/: Preprocessing/Preprocessing.java,
	Stats/StatsCollector.java, Storage/ArtificialSample.java,
	Storage/Sample.java, Storage/SampleLoader.java,
	Storage/Loaders/MP3Loader.java, Storage/Loaders/ULAWLoader.java,
	Storage/Loaders/WAVLoader.java: - post-Jimmy updates:	- Omitted
	comments   - cosmetic fixes - more comments
	
	- Tested with SpeakerIdentApp	Works as before.  - Are we looking
	into removal of Wave and ArtificialSample   classes?

2002-12-12 11:55  pwrslave

	* src/marf/Preprocessing/Preprocessing.java: Just removed code from
	constructor...

2002-12-12 11:53  pwrslave

	* src/marf/Storage/: Loaders/MP3Loader.java,
	Loaders/ULAWLoader.java, Loaders/WAVLoader.java, Sample.java,
	SampleLoader.java: New Storage implementations!

2002-12-12 01:36  mokhov

	* src/marf/MARF.java: - just pure comments commit; I think most of
	MARF.java documented   WRT javadoc

2002-12-12 01:25  mokhov

	* src/marf/MARF.java: 
	- comment test, to see whether docs are updated

2002-12-12 01:08  mokhov

	* src/Makefile: - for automatic API docs generation in our web dir

2002-12-12 00:34  mokhov

	* src/marf/FeatureExtraction/: FFT/FFT.java, LPC/LPC.java: -
	releasing whatever I hold before the docs

2002-12-11 17:07  mokhov

	* src/marf/MARF.java: just a wwrong comment

2002-12-11 14:29  mokhov

	* doc/src/sgml/stylesheet.css, src/Makefile, src/marf/MARF.java,
	src/marf/FeatureExtraction/FFT/FFT.java,
	src/marf/Preprocessing/Preprocessing.java,
	src/marf/gui/Spectrogram.java: - ok slight docs styles update -
	Makefile was missing Distance and Chebyshev Distance, so they never
	  ended up in the API docs - more comments - specotrogram output
	fixed in terms of file size of the pic
	
	There is still an issue with the Spectrogram, I guess simple one --
	I noticed that it takes 1 less feature vectors than avail (from the
	debug output); this yet to be fixed.

2002-12-11 02:55  mokhov

	* doc/src/sgml/euclidean-distance.sgml: can never remember how to
	spell euclidean

2002-12-11 02:34  mokhov

	* doc/src/sgml/: architecture.sgml, chebyshev-distance.sgml,
	data.sgml, experimentation.sgml, f0.sgml, fft-filter.sgml,
	fft.sgml, hamming.sgml, high-frequency-boost.sgml,
	installation.sgml, lpc.sgml, nnet.sgml, noise-removal.sgml,
	normalization.sgml, problems.sgml, programmer.sgml, protocol.sgml,
	references.sgml, report.sgml, sample-formats.sgml,
	spectrogram.sgml, start.sgml, storage.sgml, training.sgml: -
	processed all the emails from archives, sorted it out	according
	to the relevance to the report/doc sections   ,still need to format
	them though, but this is next pahse - next phase:   - add
	architecture and API images/class diagrams   - SGMLize completeely
	the stuff   - make it coherent	   - consitent person	  - remove
	swearings     - styles	   - organization   - write up missing
	sections   - results   - integrate PPt, arch, and propsal contents 
	 - ...
	
	NOTE: this interim update, I still have to make it build       send
	me some your sections in plain text
	
	For the math... maybe we should stick to PS->GIF or smth for the
	time beeing.
	
	Ian, spectros now are quite diff from jimmy1,gif, but I include
	jimmy1 fro the time being.

2002-12-10 19:16  mokhov

	* doc/src/sgml/: architecture.sgml, fft.sgml, installation.sgml,
	intro.sgml, lpc.sgml, maintenance.sgml, nnet.sgml, notation.sgml:
	interim doc cleanup FFT, LPC, and NN can be filled in.
	
	I'll do it in an hour from my mail and README's unless smb does it
	before that.

2002-12-10 17:47  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/Classification.java,
	marf/Classification/Distance/ChebyshevDistance.java,
	marf/Classification/Distance/Distance.java,
	marf/Classification/Distance/EuclideanDistance.java,
	marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/Cepstral/Cepstral.java,
	marf/FeatureExtraction/F0/F0.java,
	marf/FeatureExtraction/FFT/FFT.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/FeatureExtraction/Segmentation/Segmentation.java,
	marf/Preprocessing/Preprocessing.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/Endpoint/Endpoint.java,
	marf/Preprocessing/FFTFilter/BandpassFilter.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/gui/Spectrogram.java:  ok, here's a big one
	
	- a lot of comments and comment tags were added - Created abstract
	DIstance class, so that all distance   classifier just have to
	implement distance() method - some little comment fixes elswhere -
	some stub code fixes
	
	It all compiles and the app works, tested before the commit,

2002-12-10 09:09  iclement

	* src/marf/FeatureExtraction/LPC/LPC.java: DEV: Added spectrogram
	output if requested

2002-12-10 09:08  iclement

	* src/marf/gui/Spectrogram.java: DEV: Whoops... here are the
	changes. Fixed output dimention problems

2002-12-08 19:29  mokhov

	* marf.jpx.local, doc/presentation.ppt: whatever

2002-12-08 16:10  pwrslave

	* src/marf/Storage/: Sample.java, Loaders/WAVLoader.java: minor
	changes resents ArrayIndex after each setArray...

2002-12-08 15:50  iclement

	* src/marf/gui/Spectrogram.java: DEV: Whoops... good now

2002-12-08 15:40  radarsat1

	* src/marf/FeatureExtraction/FFT/FFT.java: Bugfix on FFT.  Problem
	was that the first chunk wasn't retrieved properly.

2002-12-08 15:25  iclement

	* src/marf/gui/Spectrogram.java: DEV: REmoved diff tags

2002-12-08 15:24  iclement

	* src/Makefile: DEV: Removed Diff tags

2002-12-08 13:21  iclement

	* src/marf/Classification/NeuralNetwork/: NeuralNetwork.java,
	Neuron.java: DEV: Some integration fixes

2002-12-08 11:20  mokhov

	* src/marf/MARF.java: just a comment

2002-12-08 11:12  mokhov

	* TODO, doc/presentation.ppt, doc/src/Makefile,
	doc/src/sgml/Makefile, doc/src/sgml/architecture.sgml,
	doc/src/sgml/book-decl.sgml, doc/src/sgml/conclusions.sgml,
	doc/src/sgml/contacts.sgml, doc/src/sgml/cvs.sgml,
	doc/src/sgml/developer.sgml, doc/src/sgml/docguide.sgml,
	doc/src/sgml/entities.sgml, doc/src/sgml/experimentation.sgml,
	doc/src/sgml/fft.sgml, doc/src/sgml/filelist.sgml,
	doc/src/sgml/fixrtf, doc/src/sgml/history.sgml,
	doc/src/sgml/install-win32.sgml, doc/src/sgml/installation.sgml,
	doc/src/sgml/intro.sgml, doc/src/sgml/legal.sgml,
	doc/src/sgml/lpc.sgml, doc/src/sgml/maintenance.sgml,
	doc/src/sgml/nnet.sgml, doc/src/sgml/notation.sgml,
	doc/src/sgml/problems.sgml, doc/src/sgml/programmer.sgml,
	doc/src/sgml/protocol.sgml, doc/src/sgml/refentry.sgml,
	doc/src/sgml/reference.ced, doc/src/sgml/references.sgml,
	doc/src/sgml/report.sgml, doc/src/sgml/results.sgml,
	doc/src/sgml/sources.sgml, doc/src/sgml/standalone-install.sgml,
	doc/src/sgml/start.sgml, doc/src/sgml/stylesheet.dsl,
	doc/src/sgml/ref/allfiles.sgml, doc/src/sgml/ref/marf-ref.sgml,
	doc/src/sgml/ref/speakerident-app.sgml: - Mostly initial, barely
	usable dosc:   - TODO update   - somewhat ported SGML sources from
	PostgreSQL documentation     (will be filling it in afterwards)   -
	Intial PPT to work on in school for presentation

2002-12-08 10:57  mokhov

	* src/marf/: Classification/Classification.java,
	Classification/Distance/ChebyshevDistance.java,
	Classification/Distance/EuclideanDistance.java,
	FeatureExtraction/LPC/LPC.java,
	Preprocessing/FFTFilter/FFTFilter.java: - minor cosmetic changes in
	comments - and in messages

2002-12-08 09:45  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/Distance/ChebyshevDistance.java,
	marf/Classification/Distance/EuclideanDistance.java,
	marf/Storage/Sample.java, marf/gui/Spectrogram.java: - Chebyshev
	(city-block) distance measure (from Ian's book, mostly	 a
	simplified copy of Eucleadian distance - Corresp. changes to the
	MARF - some cleanup and fixes

2002-12-08 00:17  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: should've compiled first
	:-)

2002-12-08 00:15  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: - make FFT to fill in
	spectrogram closer to reality - TODO: Steve, would you make the
	windows overlap in FFT? 	Make window size configurable and
	amke it part of the experiment

2002-12-07 23:36  mokhov

	* src/marf/gui/Spectrogram.java: Fixed Spectrogram after security
	kicked us out

2002-12-07 23:23  iclement

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: DEV:
	Parallel Euclidean usage of TrainingSet. Compiles, but will require
	a test app.

2002-12-07 23:15  radarsat1

	* marf.jpx, marf.jpx.local, src/marf/MARF.java,
	src/marf/Classification/Distance/EuclideanDistance.java,
	src/marf/FeatureExtraction/LPC/LPC.java,
	src/marf/Preprocessing/Dummy/Dummy.java,
	src/marf/Storage/TrainingSet.java, src/marf/gui/Spectrogram.java:
	SpeakerIdentApp now has command line parameters to be used for
	batch processing.

2002-12-07 22:45  mokhov

	* TODO, src/marf/gui/Spectrogram.java: fixing spectro bug for
	testing

2002-12-07 22:24  radarsat1

	* marf.jpx.local, src/marf/MARF.java,
	src/marf/Classification/Distance/EuclideanDistance.java: Euclidean
	classifier now implemented! Running SpeakerIdentApp now identifies
	a speaker based on the training set.  Hurrah!

2002-12-07 22:08  mokhov

	* src/marf/: MARF.java, FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/FFT/FFT.java, gui/Spectrogram.java: - second
	phase of spectrogram integration - few more comments

2002-12-07 20:52  mokhov

	* src/marf/: MARF.java, FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/FFT/FFT.java, Storage/StorageManager.java,
	gui/Spectrogram.java: interim mostly costmetic commit

2002-12-07 20:01  pwrslave

	* src/marf/Storage/Sample.java: Added javadoc comments

2002-12-07 18:59  mokhov

	* TODO, marf.jpx.local, src/Makefile, src/marf/MARF.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java,
	src/marf/Storage/Sample.java, src/marf/gui/Spectrogram.java:
	Post-Steve update.    - TODO	- Makefile for here (school)	-
	MARF WRT spectrogram	- some cleanup in spectrogram (need a
	couple of touches now to actually fit it inside      FFT and graph
	it)    - cosmetics changes - comments and placeholders for
	comments, please      fill in!

2002-12-07 18:49  radarsat1

	* marf.jpx.local, src/marf/Classification/Classification.java,
	src/marf/Classification/Distance/EuclideanDistance.java,
	src/marf/Classification/Markov/Markov.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java,
	src/marf/Classification/Stochastic/Stochastic.java,
	src/marf/FeatureExtraction/FeatureExtraction.java,
	src/marf/Storage/TrainingSet.java: Updating training set
	implementation again.  Should be everything.

2002-12-07 18:46  radarsat1

	* src/marf/MARF.java: 
	Works with training set update.

2002-12-07 18:18  mokhov

	* TODO: TODO more reflects reality (hopefully)

2002-12-07 18:03  mokhov

	* src/marf/Preprocessing/Preprocessing.java: some debug

2002-12-07 17:46  mokhov

	* TODO: commit dammit!

2002-12-07 17:31  mokhov

	* TODO, src/marf/MARF.java,
	src/marf/Preprocessing/Preprocessing.java: normalize() is done in
	preproecessing.  pretty primitive, but hey!

2002-12-07 17:07  mokhov

	* TODO, src/marf/FeatureExtraction/FFT/FFT.java: - small things to
	do not hold for too long.    -- doing normalize() now

2002-12-07 16:41  mokhov

	* TODO, src/marf/Preprocessing/Preprocessing.java,
	src/marf/Storage/Sample.java: - cosmetic updates

2002-12-07 16:38  iclement

	* src/marf/FeatureExtraction/LPC/LPC.java: DEV: Fixed the NaN error
	by quick .isNaN() hack :-P

2002-12-07 15:34  pwrslave

	* src/marf/FeatureExtraction/FFT/FFT.java: Small bug discovered...
	very last feature was being set to 0 (padding loop)

2002-12-07 15:30  mokhov

	* src/marf/: MARF.java, Stats/StatsCollector.java: - little
	debuggin method in MARF - JBuilder was complaingin about empty
	StatsCollector

2002-12-07 14:53  pwrslave

	* src/marf/FeatureExtraction/: FFT/FFT.java, LPC/LPC.java: Got rid
	of setSampleArrayFromStream() in extractfeatures since this is now
	done in Preprocessing constructor...

2002-12-07 14:51  pwrslave

	* src/marf/Preprocessing/Preprocessing.java: Preprocessing object
	updates contents of oSample.adSample during instantiation rather
	than calling setSampleArrayfromStream() from extractfeatures() in
	FFT and LPC which is caca...

2002-12-07 13:42  mokhov

	* TODO, src/marf/MARF.java: 
	minor things

2002-12-07 10:06  mokhov

	* src/marf/Preprocessing/FFTFilter/FFTFilter.java: - Make FFT
	filter read module params in case   it it requested to remove noise
	and/or silence

2002-12-07 03:19  mokhov

	* src/marf/: MARF.java, Storage/TrainingSet.java: - more proper way
	of doing that

2002-12-07 02:54  mokhov

	* src/marf/: MARF.java, Preprocessing/PreprocessingException.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/BandpassFilter.java: 
	- few missed updates from the past commit.

2002-12-07 02:38  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Preprocessing/Preprocessing.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/FFTFilter/FFTFilter.java,
	marf/Preprocessing/FFTFilter/HighFrequencyBoost.java,
	marf/Storage/Sample.java, marf/Storage/TrainingSet.java,
	marf/gui/Spectrogram.java: 
	most notably filters are in, first cut.  MARF compiles, the apps
	are hopefully not broken because there is none in the CVS yet to
	breka with this.
	
	preprocessing was altered to have a new method, exception, related
	modules wre updated as well
	
	some cosmetical changes elsehwere
	
	will keep working i guess later

2002-12-07 01:18  mokhov

	* src/marf/Preprocessing/FFTFilter/FFTFilter.java: just adding it
	what I have left since past afternoom

2002-12-06 19:45  radarsat1

	* marf.jpx, marf.jpx.local, src/Makefile, src/marf/MARF.java,
	src/marf/Classification/Classification.java,
	src/marf/Classification/Distance/EuclideanDistance.java,
	src/marf/Classification/Markov/Markov.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java,
	src/marf/Classification/Stochastic/Stochastic.java,
	src/marf/Preprocessing/Dummy/Dummy.java,
	src/marf/Storage/TrainingSet.java: 
	Implemented some rudimentary saving and loading of the training
	set.  Classification modules were extended to contain a pointer to
	the training set, since it will be needed for both training as well
	as for identification.	Not 100% sure this is the right way to do
	it, so I'd like to have Serguei & others go over the method I used
	to implement training before trying to make any more progress.
	
	My assumption is that training involves recording a bunch of
	feature vectors for various samples and writing them to the file. 
	It is acknowledged that "training" for the neural net requires
	another step, to train the net based on the collection of feature
	vectors.  Not quite sure that this is allowed for.  Please take a
	look.

2002-12-06 18:24  radarsat1

	* src/marf/Classification/Distance/EuclideanDistance.java: 
	Doesn't do much yet.

2002-12-06 18:20  radarsat1

	* src/marf/MARF.java: 
	Added the EUCLIDEAN_DIST classifier, and implemented iterative
	training.  (That is, MARF now calls the Classifier.train() method,
	although train() isn't yet implemented in any of the classifiers.)

2002-12-06 17:19  pwrslave

	* src/marf/FeatureExtraction/LPC/LPC.java: Uses getSampleArray()
	instead of readAudioData...

2002-12-06 16:17  pwrslave

	* src/marf/: Storage/Sample.java, FeatureExtraction/FFT/FFT.java:
	new and improved sample class

2002-12-06 12:51  mokhov

	* src/Makefile: Make it build here in school  assuming:    -
	/mn/nettemp/marf for all JAXP and marf.jar stuff

2002-12-06 12:50  pwrslave

	* src/marf/Storage/Sample.java: Bug fix..

2002-12-06 10:48  mokhov

	* TODO: 
	little update of TODO

2002-12-06 10:11  iclement

	* src/marf/gui/Spectrogram.java: DEV: Spectrogram class added. No
	file writing yet.

2002-12-06 10:09  mokhov

	* src/marf/: FeatureExtraction/FFT/FFT.java,
	Storage/ArtificialSample.java, Storage/Sample.java: - the problem
	is in extractFeatures() of FFT.java   still requires more tracing,
	especially that   the sample is properly loaded.
	
	  Steve, can you dedbug that while am on the road?

2002-12-05 15:23  mokhov

	* src/marf/: Classification/Classification.java,
	Storage/TrainingSet.java: - more or less typical impl. of a
	training set, now actual   serialization needed.

2002-12-05 14:42  mokhov

	* src/marf/Storage/TrainingSet.java: 
	- stub, will be used for training, i.e. associating   speaker's ID
	with feature sets, I guess   per discussion with Ian

2002-12-05 14:28  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: - Ian,
	I fixed NN just to make it compile, please check the diff   of
	changes see if everything is correct. I had to add setInputs()	 as
	well
	
	- marf.jar, well since Jimmy added it, I updated it as well with  
	fresh sources

2002-12-04 10:49  iclement

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: DEV:
	Added epoch training and binary output interpretation

2002-12-03 12:41  pwrslave

	* src/marf/Storage/Loaders/WAVLoader.java: Minor modification in
	constructor...

2002-12-02 02:18  pwrslave

	* src/marf/FeatureExtraction/: FFT/FFT.java, LPC/LPC.java: Minor
	touch ups...

2002-12-02 02:13  pwrslave

	* src/marf/Storage/: Sample.java, Wave.java, SampleLoader.java,
	Loaders/WAVLoader.java, ArtificialSample.java: Uncoupled
	SampleLoader and Sample...

2002-12-01 03:16  pwrslave

	* marf.jpx, marf.jpx.local: Includes marf archive...

2002-12-01 03:12  pwrslave

	* src/marf/Storage/SampleLoader.java: Added new method during
	debugging although not really needed at the end, but can be useful

2002-11-30 17:37  pwrslave

	* marf.jpx.local, marf.jpx: Project file used for JBuilder

2002-11-30 17:07  mokhov

	* src/marf/: MARF.java, Classification/Stochastic/Stochastic.java,
	Preprocessing/FFTFilter/BandpassFilter.java: MARF now includes and
	invokes all the modules, so few similar potential compile problems
	fixed in the unimplemented modules.

2002-11-30 16:47  mokhov

	* src/marf/Classification/Markov/Markov.java: This should solve the
	compile failures reported by Jimmy. Reason: since Markov class was
	never included or needed anywhere, it never got compiled from the
	command line. Perhaps I should change the build system somehow...

2002-11-25 02:43  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: making
	general MARF's API train() to work in NN.  see usage example in
	apps/TestNN

2002-11-25 02:01  mokhov

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: - NN
	was made compilable within the framework   but requires lot more
	work

2002-11-25 01:49  mokhov

	* src/: Makefile, marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/Storage/ArtificialSample.java, marf/Storage/Sample.java,
	marf/Storage/SampleLoader.java, marf/Storage/Wave.java,
	marf/Storage/Loaders/MP3Loader.java,
	marf/Storage/Loaders/ULAWLoader.java,
	marf/Storage/Loaders/WAVLoader.java,
	marf/util/InvalidSampleFormatException.java: Mostly work on
	Storage:   - Wave sample class	 - WAVLoader   - Generic
	SampleLoader Basically Jimmy's stuff was split accross these all
	Sample was also affected so was ArtificialSample' to reflect mthod
	signature changes hamming thing was also move into
	FeatureExtraction as static part.  Makefile now produces marf.jar
	if yo upoint your class path to it or copy to your jre/lib/ext dir
	for it to become visible to use for apps.

2002-11-24 11:16  mokhov

	* src/marf/: MARF.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	FeatureExtraction/LPC/LPC.java, Storage/ModuleParams.java: - LPC is
	believed to be more or less frameworked --- still need to port	
	the testing app, but that requires porting Wave stuff first :-) -
	New addition: ModuleParams - a collection of Vectors, a Vector	
	per module. An app can sepcify module specific params, put   into
	the corresponding Vectors, init MARF and etc. The module   should
	know how to extract and downcast params from these vectors   See
	constructor of LPC for example. The app will follow.  - MARF has
	been altered to accomodate ModuleParams addition.

2002-11-24 03:20  mokhov

	* src/: Makefile, test.java,
	marf/Classification/ClassificationException.java,
	marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/FeatureExtractionException.java,
	marf/FeatureExtraction/FFT/FFT.java,
	marf/Storage/ArtificialSample.java, marf/Storage/Sample.java:
	Mostly feature extraction, FFT in particular: - Made fully
	dunctional FFT - FeatureExtractionExcpetion (analogous to that of
	Classificayion) - Few changes nad dummy things to test FFT - an app
	was made to work with the frameworked FFT!

2002-11-23 18:26  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Classification/NeuralNetwork/NeuralNetwork.java,
	marf/FeatureExtraction/FeatureExtraction.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/FeatureExtraction/Segmentation/Segmentation.java,
	marf/Storage/Result.java: The framework made compile at the
	following price: - Need to work a bit on NN stuff, right now it's  
	commented out.
	
	Other changes include: - make install will now "install" the
	framework   into the speaker ident app dir - a kludge	but makes
	the app to compile--- will be extended soon - Result object has
	more stuff in it - Few fixes in MARF where LpC was listed in thre
	classif.    section  - Others
	
	Aftre this commit it is compilable by make in /src

2002-11-23 16:24  mokhov

	* src/: Makefile, marf/Classification/Markov/Markov.java,
	marf/Classification/Stochastic/Stochastic.java,
	marf/FeatureExtraction/Cepstral/Cepstral.java,
	marf/FeatureExtraction/FFT/FFT.java, marf/Storage/Result.java:
	Further advances twards framework.

2002-11-23 11:46  mokhov

	* src/marf/Classification/: Classification.java,
	NeuralNetwork/NeuralNetwork.java, NeuralNetwork/Neuron.java: Update
	of frameworked NN. Ian, if you're working on it, incorporate some
	chages in your working copy.

2002-11-23 11:19  mokhov

	* src/marf/FeatureExtraction/: FeatureExtraction.java,
	FFT/FFT.java: cosmetic stuff and API enformcement

2002-11-23 11:10  mokhov

	* src/marf/: FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/FFT/FFT.java, Storage/SampleLoader.java,
	Storage/Wave.java: Start of integration of FFT and Wave sample
	loading.  NOT COMPILABLE AS OF NOW, still needs work, just bringing
	a bit up to date the stuff.

2002-11-19 08:04  iclement

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: DEV:
	Replaced various NNet exceptions with generalized
	ClassificationException

2002-11-18 09:19  mokhov

	* src/marf/Classification/ClassificationException.java: just a
	typo, please ignore

2002-11-17 22:47  mokhov

	* src/marf/: MARF.java, Classification/Classification.java,
	Classification/ClassificationException.java,
	Classification/Markov/Markov.java,
	Classification/Stochastic/Stochastic.java: -
	ClassificationException per Ian's recent stuff - NN itself is
	untouched.

2002-11-17 20:27  iclement

	* src/marf/Classification/NeuralNetwork/Neuron.java: DEV: From
	/resources/NeuralNetwork/

2002-11-17 20:26  iclement

	* src/marf/Classification/NeuralNetwork/NeuralNetwork.java: DEV:
	Added NeuralNet code from /resouces/NeuralNet. Probably needs
	tweaking. Trainaing definitly does not work

2002-11-17 20:19  iclement

	* src/marf/FeatureExtraction/LPC/LPC.java: DEV: Filled in with LPC
	code from /rescources/LPC. Should work, but will need testing in
	the complete marf build

2002-11-09 19:28  mokhov

	* src/: Makefile, marf/MARF.java,
	marf/Preprocessing/Preprocessing.java, marf/Storage/Result.java,
	marf/util/MARFException.java: Pure cosmetical changes in the
	javadoc comments and cleanup.

2002-11-09 15:50  mokhov

	* TODO: TODO update

2002-11-09 15:16  mokhov

	* src/: Makefile, test.java, marf/MARF.java,
	marf/Classification/Markov/Markov.java,
	marf/Classification/NeuralNetwork/NeuralNetwork.java,
	marf/Classification/Stochastic/Stochastic.java,
	marf/FeatureExtraction/F0/F0.java,
	marf/FeatureExtraction/FFT/FFT.java,
	marf/FeatureExtraction/LPC/LPC.java,
	marf/Preprocessing/Preprocessing.java,
	marf/Preprocessing/Dummy/Dummy.java,
	marf/Preprocessing/Endpoint/Endpoint.java,
	marf/Storage/Result.java, marf/Storage/Sample.java,
	marf/Storage/SampleLoader.java, marf/Storage/StorageManager.java,
	marf/Storage/Loaders/MP3Loader.java,
	marf/Storage/Loaders/ULAWLoader.java,
	marf/Storage/Loaders/WAVLoader.java,
	marf/util/InvalidSampleFormatException.java,
	marf/util/MARFException.java,
	marf/util/NotImplementedException.java: The Framework Made
	Compile!!!! make - would compile it all make apidoc - would
	generate docs in the level ../../www make apidoc-dev - same, for
	developers Added new exception and test class to test compile (a
	kludge, but works) make clean - will remove all *.class files from
	all subdirs, use before commit.

2002-11-09 13:44  mokhov

	* doc/src/sgml/stylesheet.css: doc traces start sneaking in. for
	those wishing observe stylesheets used for the onlie version here
	it is

2002-11-09 13:36  mokhov

	* src/: Makefile, marf/util/NotImplementedException.java: Makefile
	is fixed WRT to javadoc API generation.  NotImpl exception had
	wrong constructor :)

2002-11-09 12:17  mokhov

	* src/Makefile: Somewhat fixed makefile

2002-11-09 12:05  mokhov

	* src/: Makefile, marf/MARF.java: Keeping you updated before begin
	compile.  Created a global Makefile for the MARF sources and fixed
	a typo in the MARF.java itsek.	Note: Makefile is going to be
	tested now, please dont think its final version.

2002-11-09 11:24  mokhov

	* src/marf/: Classification/Classification.java,
	Classification/Markov/Markov.java,
	Classification/NeuralNetwork/NeuralNetwork.java,
	Classification/Stochastic/Stochastic.java,
	Preprocessing/Dummy/Dummy.java: Few more 'frameworked' stuff. Most
	notable is Classification. Put missing import in Dummy.  Next stage
	- trying to make it all compile.

2002-11-09 03:19  mokhov

	* src/marf/FeatureExtraction/FFT/FFT.java: Forgot to add
	'frameworked' FFT stub.

2002-11-09 03:14  mokhov

	* src/marf/: MARF.java, FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/F0/F0.java, FeatureExtraction/LPC/LPC.java,
	FeatureExtraction/Segmentation/Segmentation.java,
	Preprocessing/Preprocessing.java, Preprocessing/Dummy/Dummy.java,
	Preprocessing/Endpoint/Endpoint.java,
	Preprocessing/FFTFilter/BandpassFilter.java, Storage/Result.java,
	Storage/StorageManager.java, util/MARFException.java,
	util/NotImplementedException.java: The Framework Must Grow! :-)
	Resistance is futile! Moving towards smth more compilable. LPC,
	FFT, F0 guys note: when you are ready to integratem consult the
	stub and the interfaces before blindly overriding them. Do cvs
	update before you commit! More changes will follow.

2002-11-09 00:21  mokhov

	* src/marf/gui/Spectrogram.java: Just a stub for Ian to work on.
	Empty feel free to insert whatever :-) On top, declare: package
	marf.gui;

2002-11-08 00:04  mokhov

	* TODO, doc/arch.mdl: Update TODO. Draft: Architecture in class
	diagrams in RR's *.mdl and *.jpg

2002-11-07 23:43  mokhov

	* TODO: update of things TODO, mostly mine, if you you want you can
	add yours too

2002-11-07 23:37  mokhov

	* src/marf/FeatureExtraction/F0/F0.java: F0 Stub to be implemented.

2002-11-07 22:47  mokhov

	* src/marf/: Classification/Classification.java,
	FeatureExtraction/FeatureExtraction.java,
	FeatureExtraction/LPC/LPC.java: Intermediate commit getting some
	meat into generic Classif and Fearure extr. Showing on the blank
	LPC use of Extraction

2002-11-07 21:52  mokhov

	* src/marf/MARF.java: Minor updates in MARF and FFT.  FFT changes
	icnlude basic intergration steps into the framework.

2002-11-07 21:29  mokhov

	* src/marf/: MARF.java, Preprocessing/Preprocessing.java,
	Storage/Sample.java: Few MARF updates, really minor.  Created base
	Preprocessing Sample and Preprocessing got some stuff incorporated
	from Jimmy.  Still keep on working, just a chekcpoint...

2002-11-07 17:28  mokhov

	* src/marf/: MARF.java, Storage/Sample.java: intermediate commit
	before the class :-) some changes in MARF and added Sample class

2002-11-07 11:31  radarsat1

	* src/marf/MARF.java: 
	Moved "FFT" to "Feature Extraction" Added "Filter" and "Noise
	Reduction" to "Preprocessing Modules" Added "Stochastic" to
	"Classification Modules"

2002-10-20 20:35  mokhov

	* src/marf/MARF.java: Update MARF from 0 to something :)

2002-10-14 16:17  mokhov

	* doc/proposal.txt: Added header stuff. We should use it any source
	file.

2002-10-14 16:00  mokhov

	* doc/architecture.txt, src/marf/MARF.java,
	src/marf/Classification/Classification.java,
	src/marf/Classification/Markov/Markov.java,
	src/marf/Classification/NeuralNetwork/NeuralNetwork.java,
	src/marf/Classification/Stochastic/Stochastic.java,
	src/marf/FeatureExtraction/FeatureExtraction.java,
	src/marf/FeatureExtraction/LPC/LPC.java,
	src/marf/FeatureExtraction/Segmentation/Segmentation.java,
	src/marf/Preprocessing/Preprocessing.java,
	src/marf/Preprocessing/FFTFilter/BandpassFilter.java,
	src/marf/Preprocessing/Endpoint/Endpoint.java,
	src/marf/Stats/StatsCollector.java,
	src/marf/Storage/SampleLoader.java,
	src/marf/Storage/StorageManager.java,
	src/marf/Storage/Loaders/MP3Loader.java,
	src/marf/Storage/Loaders/ULAWLoader.java,
	src/marf/Storage/Loaders/WAVLoader.java: Initial check it of the
	stub srachitecture. Please don't swear.

2002-10-14 15:47  mokhov

	* HISTORY, INSTALL, TODO: Initial empty stub files to be filled in
	later.

2002-10-10 23:49  mokhov

	* README: Tiny README update to smth more meaningfull.

2002-10-10 21:51  mokhov

	* README: Just playing around, so that README isn't empty.

2002-10-10 21:35  mokhov

	* README, doc/proposal.txt: Initial check in, Take II. Got messed
	up with the directory levels.

2002-10-10 21:35  mokhov

	* README, doc/proposal.txt: Initial revision

