#!/bin/bash

#
# Finds serializable classes that miss serialVeraionUID field, and
# computes one for them via the `serialver' tool that comes with
# the JDK from SUN. Prior search, cleans and recompiles MARF.
#
# Requires:
#
#    - MARF distro; pwd = src
#    - serialver tool from JDK
#    - the JDK
#    - GNU make
#
# Files:
#
#    - serial.txt      -- generated for all Serializable classes
#    - serial-uid.txt  -- generated for all Serializable that have serialVeraionUID
#
# Synopsis:
#
#    serialverupdate   (from MARF's src directory)
#
# Author:
#
#    Serguei Mokhov
#
# Copyright (c) 2005 - 2006 The MARF Research and Development Group
#
# $Id: serialverupdate,v 1.3 2006/01/03 08:16:08 mokhov Exp $
#

#
# Look up GNU make and recompile MARF
#

MAKE=make

if [ -e src/tools/make-test.sh ]; then
	MAKE=`src/tools/make-test.sh`
elsif [ -e `which gmake` ]
	MAKE=`which gmake`
fi

$MAKE maintainer-clean all

#
# Look up serializable classes
#

aSerializableClasses=`find . -name "*.class" \
	| grep '\.class' \
	| sed 's/.\/marf/marf/g' \
	| sed 's/.class//' \
	| sed 's/\//./g' \
	| sort`

echo "All serializable classes:"
echo "=========================" > serial.txt

for strClass in $aSerializableClasses ;
do
	serialver -classpath . $strClass 2>&1 | grep -v 'not' >> serial.txt
done

cat serial.txt

echo "All serializable classes with serialVersionUID:"
echo "=========================" > serial-uid.txt

aSerializableClasses=`grep -e 'serialVersionUID' -R marf \
	| grep '\.class' \
	| sed 's/Binary file //g' \
	| sed 's/.class matches//' \
	| sed 's/\//./g' \
	| sort`

for strClass in $aSerializableClasses ;
do
	serialver -classpath . $strClass 2>&1 >> serial-uid.txt
done

cat serial-uid.txt

echo "Classes that don't have serialVersionUID:"
diff -u serial-uid.txt serial.txt

# EOF
